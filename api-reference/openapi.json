
{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Connect Webservices",
    "description" : "Rest API Documentation",
    "contact" : {
      "email" : "purple@masternaut.com"
    },
    "license" : {
      "name" : "Â© 2017 Masternaut Limited",
      "url" : ""
    },
    "version" : "113.0.2509051139"
  },
  "servers" : [ {
    "url" : "https://api.masternautconnect.com/connect-webservices/services/public/v1",
    "description": "Product Server"
  },
{
    "url" : "https://int2-api.masternautconnect.com/connect-webservices/services",
    "description": "INT2 Server"
  }  
  ],
  "paths" : {
    "/public/v1/customer/{customerId}/alert/events" : {
      "post" : {
        "tags" : [ "/alert" ],
        "operationId" : "createAlertEvents",
        "summary" : "Create alert events",
        "description" : "Creates alert events for a customer.",
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/AlertEventDto"
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "/alert" ],
        "operationId" : "optionsCreateAlertEvents",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/alert/history/driver" : {
      "get" : {
        "tags" : [ "/alert" ],
        "operationId" : "getPersonAlertHistory",
        "summary" : "Get driver alert history",
        "description" : "Returns details of triggered alerts for a driver in the specified period.",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "startDate",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "groupId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "excludeChildGroups",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "name",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "type",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriberEmail",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriberTelephone",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriberWebUser",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "enableSecondaryGroupAssignments",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "driverId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entityId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WithPaginationResultAlertHistoryDto"
                }
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "/alert" ],
        "operationId" : "optionsGetPersonAlertHistory",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/alert/history/vehicle" : {
      "get" : {
        "tags" : [ "/alert" ],
        "operationId" : "getVehicleAlertHistory",
        "summary" : "Get vehicle alert history",
        "description" : "Returns details of triggered alerts for a vehicle in the specified period.",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "startDate",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "groupId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "excludeChildGroups",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "name",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "type",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriberEmail",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriberTelephone",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriberWebUser",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "enableSecondaryGroupAssignments",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "vehicleId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entityId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WithPaginationResultAlertHistoryDto"
                }
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "/alert" ],
        "operationId" : "optionsGetVehicleAlertHistory",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/alert/search" : {
      "post" : {
        "tags" : [ "/alert" ],
        "operationId" : "searchAlerts",
        "summary" : "Search alerts",
        "description" : "Searches for alerts based on specified criteria.",
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/AlertSearchDto"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WithPaginationResultAlertDto"
                }
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "/alert" ],
        "operationId" : "optionsSearchAlerts",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/appshellmenu" : {
      "get" : {
        "tags" : [ "/appshellmenu" ],
        "operationId" : "getAppShellMenus",
        "summary" : "Get app shell menus",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AppShellMenu"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "/appshellmenu" ],
        "operationId" : "createAppShellMenu",
        "summary" : "Create app shell menu",
        "description" : "Creates a new app shell menu.",
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppShellMenu"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppShellMenu"
                }
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "/appshellmenu" ],
        "operationId" : "options",
        "summary" : "Options for app shell menu",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/appshellmenu/{key}" : {
      "get" : {
        "tags" : [ "/appshellmenu" ],
        "operationId" : "getAppShellMenu",
        "summary" : "Get app shell menu details",
        "description" : "Returns details for a specific app shell menu.",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppShellMenu"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "/appshellmenu" ],
        "operationId" : "updateAppShellMenu",
        "summary" : "Update app shell menu",
        "description" : "Updates an existing app shell menu.",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppShellMenu"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppShellMenu"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "/appshellmenu" ],
        "operationId" : "deleteAppShellMenu",
        "summary" : "Delete app shell menu",
        "description" : "Deletes an app shell menu.",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "/appshellmenu" ],
        "operationId" : "optionsDetail",
        "summary" : "Options for app shell menu details",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/appshellmenu/getSsoPartners" : {
      "get" : {
        "tags" : [ "/appshellmenu" ],
        "operationId" : "getSsoPartners",
        "summary" : "Get SSO partners",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ThirdPartyDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/public/v1/appshellmenu/structure" : {
      "get" : {
        "tags" : [ "/appshellmenu" ],
        "operationId" : "getStructure",
        "summary" : "Get app shell menu structure",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AppShellMenuItem"
                  }
                }
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "/appshellmenu" ],
        "operationId" : "optionsStructure",
        "summary" : "Options for app shell menu structure",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/appshellmenu/{key}/feature/{featureId}" : {
      "post" : {
        "tags" : [ "/appshellmenu" ],
        "operationId" : "linkAppShellMenu",
        "summary" : "Link app shell menu to feature",
        "description" : "Links an app shell menu to a specific feature.",
        "parameters" : [ {
          "name" : "featureId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/LinkAppShellMenuRequestDto"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MasternauthFeatureDto"
                }
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "/appshellmenu" ],
        "operationId" : "optionsLinkAppShellMenu",
        "summary" : "Options for linking app shell menu",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/appshellmenu/feature/{featureId}" : {
      "delete" : {
        "tags" : [ "/appshellmenu" ],
        "operationId" : "unlinkAppShellMenu",
        "summary" : "Unlink app shell menu from feature",
        "description" : "Unlinks an app shell menu from a feature.",
        "parameters" : [ {
          "name" : "featureId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MasternauthFeatureDto"
                }
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "/appshellmenu" ],
        "operationId" : "optionsUnlinkAppShellMenu",
        "summary" : "Options for unlinking app shell menu",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/businesstravel/detail/driver" : {
      "get" : {
        "tags" : [ "/businesstravel" ],
        "operationId" : "getDriverDetails",
         "summary" : "Get driver business travel details",
        "description" : "Returns detailed business travel information for drivers.",
        "parameters" : [ {
          "name" : "pageIndex",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "startDate",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "vehicleIds",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "driverIds",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "groupId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "classifications",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "dateRange",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/DateRange"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WithPaginationResultTaxAndExpenseJourneyDetailResultDto"
                }
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "/businesstravel" ],
        "operationId" : "optionsTaxAndExpenseJourneyDetailDriver",
        "summary" : "Options for driver business travel details",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/businesstravel/summary/driver" : {
      "get" : {
        "tags" : [ "/businesstravel" ],
        "operationId" : "getTaxAndExpenseJourneySummaryDriver",
        "summary" : "Get driver business travel summary",
        "description" : "Returns summary business travel information for drivers.",
        "parameters" : [ {
          "name" : "startDate",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "groupId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "classifications",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "driverIds",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "dateRange",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/DateRange"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TaxAndExpenseManagerSummaryResultDtoTaxAndExpenseJourneySummaryDriverResultDto"
                }
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "/businesstravel" ],
        "operationId" : "optionsTaxAndExpenseJourneySummaryDriver",
        "summary" : "Options for driver business travel summary",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/businesstravel/summary/vehicle" : {
      "get" : {
        "tags" : [ "/businesstravel" ],
        "operationId" : "getTaxAndExpenseJourneySummaryVehicle",
        "summary" : "Get vehicle business travel summary",
        "description" : "Returns summary business travel information for vehicles.",
        "parameters" : [ {
          "name" : "startDate",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "groupId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "classifications",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "vehicleIds",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "dateRange",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/DateRange"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TaxAndExpenseManagerSummaryResultDtoTaxAndExpenseJourneySummaryVehicleResultDto"
                }
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "/businesstravel" ],
        "operationId" : "optionsTaxAndExpenseJourneySummaryVehicle",
        "summary" : "Options for vehicle business travel summary",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/businesstravel/detail/vehicle" : {
      "get" : {
        "tags" : [ "/businesstravel" ],
        "operationId" : "getVehicleDetails",
        "summary" : "Get vehicle business travel details",
        "description" : "Returns detailed business travel information for vehicles.",
        "parameters" : [ {
          "name" : "pageIndex",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "startDate",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "vehicleIds",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "driverIds",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "groupId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "classifications",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "dateRange",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/DateRange"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WithPaginationResultTaxAndExpenseJourneyDetailResultDto"
                }
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "/businesstravel" ],
        "operationId" : "optionsTaxAndExpenseJourneyDetailVehicle",
        "summary" : "Options for vehicle business travel details",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/device/{deviceId}" : {
      "post" : {
        "tags" : [ "/device" ],
        "operationId" : "createDeviceRegistration",
         "summary" : "Create device registration",
        "description" : "Creates a device registration for a customer.",
        "parameters" : [ {
          "name" : "deviceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/DeviceRegistrationDto"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeviceDetails"
                }
              }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/device/{deviceId}/batchposition" : {
      "post" : {
        "tags" : [ "/device" ],
        "operationId" : "managePositionData",
        "summary" : "Manage position data",
        "description" : "Manages batch position data for a device.",
        "parameters" : [ {
          "name" : "deviceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/DeviceTrackingFrame"
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/driver/{driverId}/temporaryPrivacy" : {
      "post" : {
        "tags" : [ "/driver" ],
        "operationId" : "addTempPrivacy",
        "summary" : "Add temporary privacy",
        "description" : "Adds temporary privacy for a driver.",
        "parameters" : [ {
          "name" : "driverId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "pattern" : "^[\\w]*$",
            "type" : "string"
          }
        }, {
          "name" : "duration",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "next",
            "enum" : [ "today", "next" ]
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "/driver" ],
        "operationId" : "removeTempPrivacy",
         "summary" : "Remove temporary privacy",
        "description" : "Removes temporary privacy for a driver.",
        "parameters" : [ {
          "name" : "driverId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/driver" : {
      "get" : {
        "tags" : [ "/driver" ],
        "summary" : "Get a paginated list of drivers based on input parameters",
        "description" : "<u><b>Parameters:</b></u>\n<ul><li><b>name</b> (String) : Name of driver. \n</li><li><b>groupId</b> (String) : Id of the group in hierarchy.\n</li><li><b>groupName</b> (String) : Name of the group in hierarchy\n</li><li><b>active</b> (Boolean) : If driver is active (true = active, false = inactive)\n</li><li><b>defaultVehicleId</b> (String) : Id of default vehicle id\n</li><li><b>keys</b> (List<String>) : Batches per page, default = 50.\n</li><li><b>pageIndex</b> (Integer) : Number of page, default = 0.\n</li><li><b>pageSize</b> (Integer) : Batches per page, default = 50.\n</li></ul>",
        "operationId" : "findDrivers",
        "parameters" : [ {
          "name" : "pageIndex",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "name",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "groupId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "groupName",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "active",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "defaultVehicleId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "keys",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Drivers were successfully returned or empty if none of drivers fulfill criteria"
          },
          "400" : {
            "description" : "Missing validation such as groupIds."
          }
        }
      },
      "post" : {
        "tags" : [ "/driver" ],
        "summary" : "create given driver to the hierarchy node (drivers are removed from their current node).",
        "operationId" : "createDriver",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DriverDto"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Drivers were successfully created to the hierarchy node."
          },
          "400" : {
            "description" : "Missing validation such as groupIds."
          }
        }
      },
      "options" : {
        "tags" : [ "/driver" ],
        "operationId" : "optionsDriver",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/driver/{driverId}" : {
      "get" : {
        "tags" : [ "/driver" ],
        "operationId" : "getDriver",
        "parameters" : [ {
          "name" : "driverId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DriverDto"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "/driver" ],
        "summary" : "update given driver to the hierarchy node (drivers are removed from their current node).",
        "operationId" : "updateDriver",
        "parameters" : [ {
          "name" : "driverId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DriverDto"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Drivers were successfully created to the hierarchy node."
          },
          "400" : {
            "description" : "Missing validation such as groupIds."
          }
        }
      },
      "delete" : {
        "tags" : [ "/driver" ],
        "operationId" : "deleteDriver",
         "summary" : "Delete driver",
        "description" : "DELETE request to delete a driver that matches the driverId.",
        "parameters" : [ {
          "name" : "driverId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "/driver" ],
        "operationId" : "optionsOneDriver",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/driver/{driverId}/enableAsUser" : {
      "post" : {
        "tags" : [ "/driver" ],
        "operationId" : "enableAsUser",
        "parameters" : [ {
          "name" : "driverId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserDto"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserCreateResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/driver/{driverId}/vehicle" : {
      "get" : {
        "tags" : [ "/driver" ],
        "operationId" : "getAssignedVehicle",
        "parameters" : [ {
          "name" : "driverId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "locale",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "en-GB"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssignedVehicleDto"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "/driver" ],
        "operationId" : "unlinkDefaultVehicle",
        "parameters" : [ {
          "name" : "driverId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DriverDto"
                }
              }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/driver/{driverId}/userInvitation" : {
      "post" : {
        "tags" : [ "/driver" ],
        "operationId" : "inviteAsWebUser",
        "parameters" : [ {
          "name" : "driverId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserInvitationDto"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MasternauthUserInvitationBulkResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/driver/{driverId}/vehicle/{vehicleId}" : {
      "post" : {
        "tags" : [ "/driver" ],
        "operationId" : "linkVehicle",
        "parameters" : [ {
          "name" : "driverId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vehicleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DriverDto"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "/driver" ],
        "operationId" : "unlinkVehicle",
        "parameters" : [ {
          "name" : "driverId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vehicleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DriverDto"
                }
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "/driver" ],
        "operationId" : "optionsLinkDriverVehicle",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/driver/{driverId}/vehicle/{vehicleId}/temporary" : {
      "post" : {
        "tags" : [ "/driver" ],
        "operationId" : "linkVehicleTemp",
        "parameters" : [ {
          "name" : "driverId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "pattern" : "^[\\w]*$",
            "type" : "string"
          }
        }, {
          "name" : "vehicleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "pattern" : "^[\\w]*$",
            "type" : "string"
          }
        }, {
          "name" : "duration",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "next",
            "enum" : [ "today", "next" ]
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/driver/{driverId}/vehicle/temporary" : {
      "delete" : {
        "tags" : [ "/driver" ],
        "operationId" : "unlinkVehicleTemp",
        "parameters" : [ {
          "name" : "driverId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/driverbehaviourmetrics/rankings/group" : {
      "post" : {
        "tags" : [ "customers" ],
        "operationId" : "calculateDriverBehaviourMetricsRankingsForGroup",
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/DriverBehaviourPersonMetricsRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/BehaviourMetricPersonRankingDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/driverbehaviourmetrics/vehicle/summary" : {
      "get" : {
        "tags" : [ "customers" ],
        "operationId" : "getSummaryByAsset",
        "parameters" : [ {
          "name" : "pageIndex",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "startDate",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "driverId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "groupId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vehicleId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WithPaginationResultDrivingBehaviourSummaryDto"
                }
              }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/driverbehaviourmetrics/driver/summary" : {
      "get" : {
        "tags" : [ "customers" ],
        "operationId" : "getSummaryByPerson",
        "parameters" : [ {
          "name" : "pageIndex",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "startDate",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "driverId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "groupId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vehicleId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WithPaginationResultDrivingBehaviourSummaryDto"
                }
              }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/driverbehaviourmetrics/group" : {
      "post" : {
        "tags" : [ "customers" ],
        "operationId" : "metricsForGroup",
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/GroupBehaviourMetricRequestDto"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/BehaviourMetricDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/driverbehaviourmetrics" : {
      "post" : {
        "tags" : [ "customers" ],
        "operationId" : "metricsForPerson",
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/DriverBehaviourMetricRequestDto"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/BehaviourMetricDailyDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/public/v1/driverbehaviourmetrics/rankings/group" : {
      "post" : {
        "tags" : [ "/driverbehaviourmetrics" ],
        "operationId" : "calculateDriverBehaviourMetricsRankingsForGroup_1",
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/DriverBehaviourPersonMetricsRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/BehaviourMetricPersonRankingDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/public/v1/driverbehaviourmetrics/group" : {
      "post" : {
        "tags" : [ "/driverbehaviourmetrics" ],
        "operationId" : "metricsForGroup_1",
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/BehaviourMetricRequestDto"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/BehaviourMetricDto"
                  }
                }
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "/driverbehaviourmetrics" ],
        "operationId" : "optionsMetricsForGroup",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/ecoscore/driver" : {
      "get" : {
        "tags" : [ "/ecoscore" ],
        "operationId" : "getEcoScoreDriver",
        "parameters" : [ {
          "name" : "pageIndex",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "startDate",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "groupId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "driverId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dateRange",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/DateRange"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EcoScorePersonResponseDto"
                }
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "/ecoscore" ],
        "operationId" : "optionsEcoScoreDriver",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/ecoscore/event/driver" : {
      "get" : {
        "tags" : [ "/ecoscore" ],
        "operationId" : "getEcoScoreEventDriver",
        "parameters" : [ {
          "name" : "pageIndex",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "startDate",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "dateType",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "groupId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eventFilter",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "driverId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dateRange",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/DriverBehaviourEventDateRange"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WithPaginationResultEcoScoreEventResponseDto"
                }
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "/ecoscore" ],
        "operationId" : "optionsEcoScoreEventDriver",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/ecoscore/event/vehicle" : {
      "get" : {
        "tags" : [ "/ecoscore" ],
        "operationId" : "getEcoScoreEventVehicle",
        "parameters" : [ {
          "name" : "pageIndex",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "startDate",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "dateType",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "groupId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eventFilter",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vehicleId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dateRange",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/DriverBehaviourEventDateRange"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WithPaginationResultEcoScoreEventResponseDto"
                }
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "/ecoscore" ],
        "operationId" : "optionsEcoScoreEventVehicle",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/ecoscore/vehicle" : {
      "get" : {
        "tags" : [ "/ecoscore" ],
        "operationId" : "getEcoScoreVehicle",
        "parameters" : [ {
          "name" : "pageIndex",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "startDate",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "groupId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vehicleId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dateRange",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/DateRange"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EcoScoreVehicleResponseDto"
                }
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "/ecoscore" ],
        "operationId" : "optionsEcoScoreVehicle",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/ecoscore/event/vehicle/latest" : {
      "get" : {
        "tags" : [ "/ecoscore" ],
        "summary" : "Returns the vehicle score driving events that occurred/were modified after a specified \nmodifiedSinceDate date.\n<u><b>Parameters:</b></u>\n<ul><li><b>modifiedSinceDate</b> (Date) : Only events occurring or modified after this date will be returned. This field is mandatory. Users can calculate this value by taking the maximum lastModifiedTime field from previous invocations of this endpoint or the '/event/vehicle' endpoint.\n</li><li><b>vehicleId</b> (String) : Id of vehicle used for filtering. @Visible validation, mandatory if 'groupId' is not provided, but cannot be both filled\n</li><li><b>groupId</b> (String) : Id of Group used for filtering. @Visible validation, mandatory if 'vehicleId' is not provided, but cannot be both filled\n</li><li><b>eventFilter</b> (String)  : Optional event type corresponding to one of IncidentType enumeration values: RPM, HARSH_BRAKING, HARSH_ACCELERATION, HARSH_CORNERING, SPEEDING, IDLING_INSIDE_BASE, IDLING_OUTSIDE_BASE</li></ul>",
        "operationId" : "getLatestEcoScoreEventVehicle",
        "parameters" : [ {
          "name" : "vehicleId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "groupId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "modifiedSinceDate",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "eventFilter",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of vehicle score driving events that occurred or were modified after the specified date",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LatestEcoScoreEventDetailsVehicleDto"
                }
              }
            }
          },
          "400" : {
            "description" : "When VehicleId or GroupId is not provided. Message is: 'One of following properties [VehicleId, GroupId] can not be null'\n\tWhen both VehicleId or GroupId are provided. Message is: 'One of following properties [VehicleId, GroupId] must be null'\n\tWhen given property, VehicleId or GroupId, are not visible for current User. Message is: 'Resource not visible to User'"
          }
        }
      }
    },
    "/public/v1/ecodrive/driversScore" : {
      "get" : {
        "tags" : [ "/ecodrive" ],
        "operationId" : "getEcodriveDriversScore",
        "parameters" : [ {
          "name" : "date",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "userTimezone",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "locale",
          "in" : "query",
          "schema" : {
            "type" : "object",
            "properties" : {
              "language" : {
                "type" : "string"
              },
              "displayName" : {
                "type" : "string"
              },
              "country" : {
                "type" : "string"
              },
              "variant" : {
                "type" : "string"
              },
              "script" : {
                "type" : "string"
              },
              "unicodeLocaleAttributes" : {
                "uniqueItems" : true,
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "unicodeLocaleKeys" : {
                "uniqueItems" : true,
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "displayLanguage" : {
                "type" : "string"
              },
              "displayScript" : {
                "type" : "string"
              },
              "displayCountry" : {
                "type" : "string"
              },
              "displayVariant" : {
                "type" : "string"
              },
              "extensionKeys" : {
                "uniqueItems" : true,
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "iso3Language" : {
                "type" : "string"
              },
              "iso3Country" : {
                "type" : "string"
              }
            }
          }
        }, {
          "name" : "days",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "weeks",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "months",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EcodriveDriversScoreResultDto"
                }
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "/ecodrive" ],
        "operationId" : "optionsEcodriveDriversScore",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/ecodrive/summary" : {
      "get" : {
        "tags" : [ "/ecodrive" ],
        "operationId" : "getEcodriveSummary",
        "parameters" : [ {
          "name" : "date",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "userTimezone",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "locale",
          "in" : "query",
          "schema" : {
            "type" : "object",
            "properties" : {
              "language" : {
                "type" : "string"
              },
              "displayName" : {
                "type" : "string"
              },
              "country" : {
                "type" : "string"
              },
              "variant" : {
                "type" : "string"
              },
              "script" : {
                "type" : "string"
              },
              "unicodeLocaleAttributes" : {
                "uniqueItems" : true,
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "unicodeLocaleKeys" : {
                "uniqueItems" : true,
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "displayLanguage" : {
                "type" : "string"
              },
              "displayScript" : {
                "type" : "string"
              },
              "displayCountry" : {
                "type" : "string"
              },
              "displayVariant" : {
                "type" : "string"
              },
              "extensionKeys" : {
                "uniqueItems" : true,
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "iso3Language" : {
                "type" : "string"
              },
              "iso3Country" : {
                "type" : "string"
              }
            }
          }
        }, {
          "name" : "days",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "weeks",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "months",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "maxJourneySummaries",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EcodriveSummaryResultDto"
                }
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "/ecodrive" ],
        "operationId" : "optionsEcodriveSummary",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/ecodrive/summary/driver/triggerEmail" : {
      "post" : {
        "tags" : [ "/ecodrive" ],
        "operationId" : "triggerEcoDriveSummaryToPerson",
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/TriggerEcodriveSummaryRequestDto"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/eventTypes" : {
      "get" : {
        "tags" : [ "/eventTypes" ],
        "operationId" : "getEventTypes",
        "parameters" : [ {
          "name" : "pageIndex",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WithPaginationResultEventTypeDto"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "/eventTypes" ],
        "operationId" : "createEventType",
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/EventTypeDto"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EventTypeDto"
                }
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "/eventTypes" ],
        "operationId" : "optionsEventTypes",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/eventTypes/{eventKey}" : {
      "get" : {
        "tags" : [ "/eventTypes" ],
        "operationId" : "getEventType",
        "parameters" : [ {
          "name" : "eventKey",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EventTypeDto"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "/eventTypes" ],
        "operationId" : "updateEventType",
        "parameters" : [ {
          "name" : "eventKey",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/EventTypeDto"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EventTypeDto"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "/eventTypes" ],
        "operationId" : "deleteEventType",
        "parameters" : [ {
          "name" : "eventKey",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "/eventTypes" ],
        "operationId" : "optionsEventType",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/expenseSummary/cancel" : {
      "post" : {
        "tags" : [ "/expenseSummary" ],
        "operationId" : "cancelUnapprovedExpenseSummaries",
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExpenseSummariesCancelRequestDto"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExpenseSummariesCancelResponseDto"
                }
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "/expenseSummary" ],
        "operationId" : "optionsForCancelPath",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/expenseSummary/search" : {
      "post" : {
        "tags" : [ "/expenseSummary" ],
        "operationId" : "findExpenseSummaries",
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExpenseSummaryRequestDto"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ExpenseSummaryResultDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/expenseSummary" : {
      "options" : {
        "tags" : [ "/expenseSummary" ],
        "operationId" : "optionsPersonSettings",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/fuel/driver" : {
      "get" : {
        "tags" : [ "/fuel" ],
        "operationId" : "getDriverVehicleConsumptions",
        "parameters" : [ {
          "name" : "startDate",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "driverId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "groupId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startDateRange",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/DateRange"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DriverVehicleConsumptionResultDto"
                  }
                }
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "/fuel" ],
        "operationId" : "optionsDriverVehicleConsumptions",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/fuel/vehicle" : {
      "get" : {
        "tags" : [ "/fuel" ],
        "operationId" : "getVehicleConsumptions",
        "parameters" : [ {
          "name" : "startDate",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "vehicleId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "groupId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startDateRange",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/DateRange"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VehicleConsumptionResultDto"
                  }
                }
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "/fuel" ],
        "operationId" : "optionsVehicleConsumptions",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/fuelEvents/fuelTransactions" : {
      "get" : {
        "tags" : [ "/fuelEvents" ],
        "operationId" : "findFuelTransactionsForVehicles",
        "parameters" : [ {
          "name" : "pageIndex",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "startDate",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "vehicleId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "groupId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "includeUnmatchedVehicles",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "includeMatchedVehicles",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WithPaginationResultFuelTransactionDTO"
                }
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "/fuelEvents" ],
        "operationId" : "optionsFuelTransactions",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/group" : {
      "get" : {
        "tags" : [ "/group" ],
        "summary" : "Returns all groups visible to request context",
        "description" : "Endpoint fetches all groups from user context and counts how many drivers and vehicles has each group assigned",
        "operationId" : "getAllGroups",
        "responses" : {
          "200" : {
            "description" : "List of Groups visible to request context with counts of drivers and vehicles",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/GroupSearchResultDto"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "/group" ],
        "summary" : "Updates existing group.",
        "description" : "Based on body, endpoint updates existing group. Following properties can be updated: node name, persons and vehicles assigned to group, parent of group / node. If update run successfully it returns 200 with updated Group. Else if node has not been found it returns 400. Else if newly selected name for group is already taken or new parent group is one of the direct / indirect descendants it returns 409 - Conflict",
        "operationId" : "updateGroup",
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/GroupDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Updated group.",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GroupDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request. When id is incorrect and group is not visible to user or is blank or doesn't fit for selected size.\nWhen name doesn't fit for selected size.\nWhen parentId is not visible to user\nWhen personIds or vehicleIds are not visible to user",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ApiErrorDto"
                  }
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict message, when group name is already taken by another group or when parentId is ID of group which is currently one of group descendants.",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrorDto"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "/group" ],
        "summary" : "Creates new group",
        "description" : "Based on the request body endpoint creates new group and it returns newly created group / hierarchy node. If group exists with same name as body holds it returns 400 code with message that node with group name already exists",
        "operationId" : "createGroup",
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/GroupQueryDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Newly created group",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GroupDto"
                }
              }
            }
          },
          "400" : {
            "description" : "When name is blank or size name does not fit.\nWhen size parentId does not fit or it does not match pattern or it isn't visible for user.",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ApiErrorDto"
                  }
                }
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "/group" ],
        "operationId" : "optionsGroup",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/group/{nodeId}" : {
      "delete" : {
        "tags" : [ "/group" ],
        "summary" : "Deletes group",
        "description" : "Endpoint deletes the group / hierarchy node when following conditions are true: group exists, is not customer (root) node, is allowed to be deleted, group / node hasn't assigned any vehicle or person and it does not have any children group. If it deletes it returns 200 code if not either 400 or 409",
        "operationId" : "deleteGroup",
        "parameters" : [ {
          "name" : "nodeId",
          "in" : "path",
          "description" : "ID of group to be deleted",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "groupID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK - group has been deleted",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "entity" : {
                      "type" : "object"
                    },
                    "length" : {
                      "type" : "integer",
                      "format" : "int32"
                    },
                    "location" : {
                      "type" : "string",
                      "format" : "uri"
                    },
                    "language" : {
                      "type" : "object",
                      "properties" : {
                        "language" : {
                          "type" : "string"
                        },
                        "displayName" : {
                          "type" : "string"
                        },
                        "country" : {
                          "type" : "string"
                        },
                        "variant" : {
                          "type" : "string"
                        },
                        "script" : {
                          "type" : "string"
                        },
                        "unicodeLocaleAttributes" : {
                          "uniqueItems" : true,
                          "type" : "array",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "unicodeLocaleKeys" : {
                          "uniqueItems" : true,
                          "type" : "array",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "displayLanguage" : {
                          "type" : "string"
                        },
                        "displayScript" : {
                          "type" : "string"
                        },
                        "displayCountry" : {
                          "type" : "string"
                        },
                        "displayVariant" : {
                          "type" : "string"
                        },
                        "extensionKeys" : {
                          "uniqueItems" : true,
                          "type" : "array",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "iso3Language" : {
                          "type" : "string"
                        },
                        "iso3Country" : {
                          "type" : "string"
                        }
                      }
                    },
                    "date" : {
                      "type" : "string",
                      "format" : "date-time"
                    },
                    "lastModified" : {
                      "type" : "string",
                      "format" : "date-time"
                    },
                    "headers" : {
                      "type" : "object",
                      "properties" : {
                        "empty" : {
                          "type" : "boolean"
                        }
                      },
                      "additionalProperties" : {
                        "type" : "array",
                        "items" : {
                          "type" : "object"
                        }
                      }
                    },
                    "cookies" : {
                      "type" : "object",
                      "additionalProperties" : {
                        "type" : "object",
                        "properties" : {
                          "name" : {
                            "type" : "string"
                          },
                          "value" : {
                            "type" : "string"
                          },
                          "version" : {
                            "type" : "integer",
                            "format" : "int32"
                          },
                          "path" : {
                            "type" : "string"
                          },
                          "domain" : {
                            "type" : "string"
                          },
                          "comment" : {
                            "type" : "string"
                          },
                          "maxAge" : {
                            "type" : "integer",
                            "format" : "int32"
                          },
                          "expiry" : {
                            "type" : "string",
                            "format" : "date-time"
                          },
                          "secure" : {
                            "type" : "boolean"
                          },
                          "httpOnly" : {
                            "type" : "boolean"
                          }
                        }
                      }
                    },
                    "status" : {
                      "type" : "integer",
                      "format" : "int32"
                    },
                    "metadata" : {
                      "type" : "object",
                      "properties" : {
                        "empty" : {
                          "type" : "boolean"
                        }
                      },
                      "additionalProperties" : {
                        "type" : "array",
                        "items" : {
                          "type" : "object"
                        }
                      }
                    },
                    "statusInfo" : {
                      "type" : "object",
                      "properties" : {
                        "family" : {
                          "type" : "string",
                          "enum" : [ "INFORMATIONAL", "SUCCESSFUL", "REDIRECTION", "CLIENT_ERROR", "SERVER_ERROR", "OTHER" ]
                        },
                        "statusCode" : {
                          "type" : "integer",
                          "format" : "int32"
                        },
                        "reasonPhrase" : {
                          "type" : "string"
                        }
                      }
                    },
                    "allowedMethods" : {
                      "uniqueItems" : true,
                      "type" : "array",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "stringHeaders" : {
                      "type" : "object",
                      "properties" : {
                        "empty" : {
                          "type" : "boolean"
                        }
                      },
                      "additionalProperties" : {
                        "type" : "array",
                        "items" : {
                          "type" : "string"
                        }
                      }
                    },
                    "mediaType" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string"
                        },
                        "subtype" : {
                          "type" : "string"
                        },
                        "parameters" : {
                          "type" : "object",
                          "additionalProperties" : {
                            "type" : "string"
                          }
                        },
                        "wildcardType" : {
                          "type" : "boolean"
                        },
                        "wildcardSubtype" : {
                          "type" : "boolean"
                        }
                      }
                    },
                    "entityTag" : {
                      "type" : "object",
                      "properties" : {
                        "value" : {
                          "type" : "string"
                        },
                        "weak" : {
                          "type" : "boolean"
                        }
                      }
                    },
                    "links" : {
                      "uniqueItems" : true,
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "uri" : {
                            "type" : "string",
                            "format" : "uri"
                          },
                          "type" : {
                            "type" : "string"
                          },
                          "params" : {
                            "type" : "object",
                            "additionalProperties" : {
                              "type" : "string"
                            }
                          },
                          "title" : {
                            "type" : "string"
                          },
                          "uriBuilder" : {
                            "type" : "object"
                          },
                          "rel" : {
                            "type" : "string"
                          },
                          "rels" : {
                            "type" : "array",
                            "items" : {
                              "type" : "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "When group to be deleted is not visible to user.\nWhen group is customer (root) node or it is not allowed to be deleted.",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ApiErrorDto"
                  }
                }
              }
            }
          },
          "409" : {
            "description" : "When group contains any person or vehicle or it has children nodes.",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrorDto"
                }
              }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/idling/detail/vehicle" : {
      "get" : {
        "tags" : [ "/idling" ],
        "operationId" : "getAssetIdlingDetails",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "startDate",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "groupId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "excludeChildGroups",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "idlingDurationSeconds",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "vehicleId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entityId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WithPaginationResultIdlingDetailDto"
                }
              }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/idling/detail/driver" : {
      "get" : {
        "tags" : [ "/idling" ],
        "operationId" : "getPersonIdlingDetails",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "startDate",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "groupId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "excludeChildGroups",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "idlingDurationSeconds",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "driverId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entityId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WithPaginationResultIdlingDetailDto"
                }
              }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/idling/detail/driver/triggerEmail" : {
      "post" : {
        "tags" : [ "/idling" ],
        "operationId" : "triggerIdlingDetailToPerson",
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/TriggerIdlingDetailRequestDto"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/input/usage/driver" : {
      "get" : {
        "tags" : [ "/input" ],
        "operationId" : "getInputUsageDriver",
        "parameters" : [ {
          "name" : "pageIndex",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "startDate",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "enableSecondaryGroupAssignments",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "driverId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dateRange",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/DateRange"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WithPaginationResultInputUsageDto"
                }
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "/input" ],
        "operationId" : "optionsInputUsageDriver",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/input/usage/vehicle" : {
      "get" : {
        "tags" : [ "/input" ],
        "operationId" : "getInputUsageVehicle",
        "parameters" : [ {
          "name" : "pageIndex",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "startDate",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "enableSecondaryGroupAssignments",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "vehicleId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dateRange",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/DateRange"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WithPaginationResultInputUsageDto"
                }
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "/input" ],
        "operationId" : "optionsInputUsageVehicle",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/inputEvents/asset/{assetId}" : {
      "get" : {
        "tags" : [ "/inputEvents" ],
        "operationId" : "getInputEventsForAsset",
        "parameters" : [ {
          "name" : "assetId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eventKey",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "startDate",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "enableSecondaryGroupAssignments",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "dateRange",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/DateRange"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WithPaginationResultInputEventDto"
                }
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "/inputEvents" ],
        "operationId" : "optionsInputEventAsset",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/inputEvents" : {
      "get" : {
        "tags" : [ "/inputEvents" ],
        "operationId" : "getInputEventsForAssets",
        "parameters" : [ {
          "name" : "eventKey",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "startDate",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "enableSecondaryGroupAssignments",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "assetId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "groupId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dateRange",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/DateRange"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TimestampedWithPaginationResultInputEventDto"
                }
              }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/inputEvents/driver/{driverId}" : {
      "get" : {
        "tags" : [ "/inputEvents" ],
        "operationId" : "getInputEventsForDriver",
        "parameters" : [ {
          "name" : "driverId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eventKey",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "startDate",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "enableSecondaryGroupAssignments",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "dateRange",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/DateRange"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WithPaginationResultInputEventDto"
                }
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "/inputEvents" ],
        "operationId" : "optionsInputEventDriver",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/inputEvents/latest" : {
      "get" : {
        "tags" : [ "/inputEvents" ],
        "operationId" : "getLatestInputEvents",
        "parameters" : [ {
          "name" : "fromDateTime",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "assetId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "groupId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eventKey",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "enableSecondaryGroupAssignments",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LatestInputEventsDto"
                }
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "/inputEvents" ],
        "operationId" : "optionsLatestInputEvents",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/inputTypes" : {
      "get" : {
        "tags" : [ "/inputTypes" ],
        "operationId" : "getInputTypes",
        "parameters" : [ {
          "name" : "pageIndex",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WithPaginationResultInputTypeDto"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "/inputTypes" ],
        "operationId" : "createInputType",
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/InputTypeDto"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InputTypeDto"
                }
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "/inputTypes" ],
        "operationId" : "optionsInputTypes",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/inputTypes/{inputKey}" : {
      "get" : {
        "tags" : [ "/inputTypes" ],
        "operationId" : "getInputType",
        "parameters" : [ {
          "name" : "inputKey",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InputTypeDto"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "/inputTypes" ],
        "operationId" : "updateInputType",
        "parameters" : [ {
          "name" : "inputKey",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/InputTypeDto"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InputTypeDto"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "/inputTypes" ],
        "operationId" : "deleteInputType",
        "parameters" : [ {
          "name" : "inputKey",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "/inputTypes" ],
        "operationId" : "optionsInputType",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/insanity/history" : {
      "delete" : {
        "tags" : [ "/insanity" ],
        "operationId" : "clearHistory",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/insanity/isProtectionEnabled" : {
      "get" : {
        "tags" : [ "/insanity" ],
        "operationId" : "isProtectionEnabled",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/insanity/protectionEnabled" : {
      "post" : {
        "tags" : [ "/insanity" ],
        "operationId" : "protectionEnabled",
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "type" : "boolean"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/interestedparty/{interestedPartyId}/assets/asset/{assetId}" : {
      "get" : {
        "tags" : [ "/interestedparty/assets" ],
        "operationId" : "getVehicle",
        "parameters" : [ {
          "name" : "interestedPartyId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "assetId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InterestedPartyVehicleDto"
                }
              }
            }
          }
        }
      }
    },
    "/public/v1/interestedparty/{interestedPartyId}/assets" : {
      "post" : {
        "tags" : [ "/interestedparty/assets" ],
        "operationId" : "listVehicles",
        "parameters" : [ {
          "name" : "interestedPartyId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/InterestedPartyVehicleRequestDto"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WithPaginationResultInterestedPartyVehicleDto"
                }
              }
            }
          }
        }
      }
    },
    "/public/v1/interestedparty/{interestedPartyId}/usage" : {
      "post" : {
        "tags" : [ "/interestedparty/usage" ],
        "operationId" : "listVehiclesUsage",
        "parameters" : [ {
          "name" : "interestedPartyId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/InterestedPartyAssetSummaryRequestDto"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WithPaginationResultInterestedPartyAssetSummaryResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/public/v1/interestedparty/{interestedPartyId}/location" : {
      "post" : {
        "tags" : [ "/interestedparty/location" ],
        "operationId" : "listCurrentPositionResponses",
        "parameters" : [ {
          "name" : "interestedPartyId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/InterestedPartyCurrentPositionResultsRequestDto"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WithPaginationResultInterestedPartyCurrentPositionResultsResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/public/v1/interestedparty/{interestedPartyId}/location/asset/{assetId}" : {
      "get" : {
        "tags" : [ "/interestedparty/location" ],
        "operationId" : "listCurrentPositionResponsesByAssetId",
        "parameters" : [ {
          "name" : "interestedPartyId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "assetId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InterestedPartyCurrentPositionResultsResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/public/v1/interestedparty/{interestedPartyId}/faultmaintenance" : {
      "post" : {
        "tags" : [ "/interestedparty/faultmaintenance" ],
        "operationId" : "listVehiclesFaultMaintenance",
        "parameters" : [ {
          "name" : "interestedPartyId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/InterestedPartyFaultMaintenanceRequestDto"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WithPaginationResultInterestedPartyFaultMaintenanceResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/public/v1/interestedparty/{interestedPartyId}/faultmaintenance/asset/{assetId}" : {
      "get" : {
        "tags" : [ "/interestedparty/faultmaintenance" ],
        "operationId" : "listVehiclesFaultMaintenanceByAssetId",
        "parameters" : [ {
          "name" : "interestedPartyId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "assetId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/InterestedPartyFaultMaintenanceResponseDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/public/v1/interestedparty/{interestedPartyId}/odometer/asset/{assetId}" : {
      "get" : {
        "tags" : [ "/interestedparty/odometer" ],
        "operationId" : "listVehicleOdometerByAssetId",
        "parameters" : [ {
          "name" : "interestedPartyId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "assetId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InterestedPartyVehicleOdometerResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/public/v1/interestedparty/{interestedPartyId}/odometer" : {
      "post" : {
        "tags" : [ "/interestedparty/odometer" ],
        "operationId" : "listVehiclesOdometer",
        "parameters" : [ {
          "name" : "interestedPartyId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/InterestedPartyVehicleOdometerRequestDTO"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WithPaginationResultInterestedPartyVehicleOdometerResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/public/v1/interestedparty/{interestedPartyId}/service" : {
      "post" : {
        "tags" : [ "/interestedparty/service" ],
        "operationId" : "listServiceDueDate",
        "parameters" : [ {
          "name" : "interestedPartyId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/InterestedPartyServiceDueDateRequestDto"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WithPaginationResultInterestedPartyServiceDueDateResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/public/v1/interestedparty/{interestedPartyId}/service/asset/{assetId}" : {
      "get" : {
        "tags" : [ "/interestedparty/service" ],
        "operationId" : "listServiceDueDate_1",
        "parameters" : [ {
          "name" : "interestedPartyId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "assetId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InterestedPartyServiceDueDateResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/public/v1/interestedparty/{interestedPartyId}/tag/add" : {
      "post" : {
        "tags" : [ "/interestedparty/tag" ],
        "operationId" : "addInterestedPartyTagToAssets",
        "parameters" : [ {
          "name" : "interestedPartyId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "pattern" : "^[\\w]*$",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/InterestedPartyTagRequestDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/interestedparty/{interestedPartyId}/tag/list" : {
      "get" : {
        "tags" : [ "/interestedparty/tag" ],
        "operationId" : "listInterestedPartyTags",
        "parameters" : [ {
          "name" : "interestedPartyId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InterestedPartyTagsDto"
                }
              }
            }
          }
        }
      }
    },
    "/public/v1/interestedparty/{interestedPartyId}/tag/list/asset/{assetId}" : {
      "get" : {
        "tags" : [ "/interestedparty/tag" ],
        "operationId" : "listInterestedPartyTagsForAsset",
        "parameters" : [ {
          "name" : "interestedPartyId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "assetId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InterestedPartyTagsDto"
                }
              }
            }
          }
        }
      }
    },
    "/public/v1/interestedparty/{interestedPartyId}/tag/remove" : {
      "post" : {
        "tags" : [ "/interestedparty/tag" ],
        "operationId" : "removeInterestedPartyTagFromAssets",
        "parameters" : [ {
          "name" : "interestedPartyId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "pattern" : "^[\\w]*$",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/InterestedPartyTagRequestDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/io" : {
      "put" : {
        "tags" : [ "/io" ],
        "operationId" : "manageInputs",
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/PartnerIoFrameDto"
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IoManagementResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/journey/detail/driver" : {
      "get" : {
        "tags" : [ "/journey/detail" ],
        "summary" : "Endpoint fetches all detailed journeys with pagination based on filtering.",
        "description" : "Journeys Details data are combined from JourneyResult and Asset DB collections.\nJourneys details are fetched based on ExecutionTime and DriverId or GroupId.\nOne of Group or Driver must be filled, but not both.\n\n<u><b>Parameters:</b></u>\n<ul><li><b>startDate</b> (Date) : End date of time interval used for filtering. Mandatory and cannot be later then 'endDate'. \n</li><li><b>endDate</b> (Date) : End date of time interval used for filtering. Mandatory and cannot be sooner then 'starDate'.\n</li><li><b>driverId</b> (String) : Id of driver used for filtering. @Visible validation, mandatory if 'groupId' is not provided, but cannot be both filled\n</li><li><b>groupId</b> (String) : Id of group used for filtering. @Visible validation, mandatory if 'driverId' is not provided, but cannot be both filled\n</li><li><b>pageIndex</b> (Integer) : Number of page, default = 0.\n</li><li><b>pageSize</b> (Integer) : Batches per page, default = 50.\n</li><li><b>excludeChildGroups</b> (Boolean)  : Exclude child groups, default = FALSE.</li></ul>",
        "operationId" : "getJourneyDetailDriver",
        "parameters" : [ {
          "name" : "startDate",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "groupId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "excludeChildGroups",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "driverId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dateRange",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/DateRange"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List for Journeys Details (TimestampedWithPaginationResult) selected by GroupId or DriverId, and from given Execution time. May be empty list if now Journeys has been found."
          },
          "400" : {
            "description" : "When DriverId or GroupId is not provided. Message is: 'One of following properties [DriverId, GroupId] can not be null'\n\tWhen both DriverId or GroupId are provided. Message is: 'One of following properties [DriverId, GroupId] must be null'\n\tWhen given property, DriverId or GroupId, are not visible for current User. Message is: 'Resource not visible to User'"
          }
        }
      },
      "options" : {
        "tags" : [ "/journey/detail" ],
        "operationId" : "optionsJourneyDetailDriver",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/journey/detail/vehicle" : {
      "get" : {
        "tags" : [ "/journey/detail" ],
        "summary" : "Endpoint fetches all detailed journeys with pagination based on filtering.",
        "description" : "Journeys Details data are combined from JourneyResult and Asset DB collections.\nJourneys details are fetched based on ExecutionTime and VehicleId or GroupId.\nOne of Group or Vehicle must be filled, but not both.\n\n<u><b>Parameters:</b></u>\n<ul><li><b>startDate</b> (Date) : End date of time interval used for filtering. Mandatory and cannot be later then 'endDate'. \n</li><li><b>endDate</b> (Date) : End date of time interval used for filtering. Mandatory and cannot be sooner then 'starDate'.\n</li><li><b>vehicleId</b> (String) : Id of vehicle used for filtering. @Visible validation, mandatory if 'groupId' is not provided, but cannot be both filled\n</li><li><b>groupId</b> (String) : Id of Group used for filtering. @Visible validation, mandatory if 'vehicleId' is not provided, but cannot be both filled\n</li><li><b>pageIndex</b> (Integer) : Number of page, default = 0.\n</li><li><b>pageSize</b> (Integer) : Batches per page, default = 50.\n</li><li><b>excludeChildGroups</b> (Boolean)  : Exclude child groups, default = FALSE.</li></ul>",
        "operationId" : "getJourneyDetailVehicle",
        "parameters" : [ {
          "name" : "startDate",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "groupId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "excludeChildGroups",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "vehicleId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dateRange",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/DateRange"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List for Journeys Details (TimestampedWithPaginationResult) selected by VehicleId or GroupId, and from given Execution time. May be empty list if now Journeys has been found.",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TimestampedWithPaginationResult"
                }
              }
            }
          },
          "400" : {
            "description" : "When VehicleId or GroupId is not provided. Message is: 'One of following properties [VehicleId, GroupId] can not be null'\n\tWhen both VehicleId or GroupId are provided. Message is: 'One of following properties [VehicleId, GroupId] must be null'\n\tWhen given property, VehicleId or GroupId, are not visible for current User. Message is: 'Resource not visible to User'"
          }
        }
      },
      "options" : {
        "tags" : [ "/journey/detail" ],
        "operationId" : "optionsJourneyDetailVehicle",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/journey/detail/driver/latest" : {
      "get" : {
        "tags" : [ "/journey/detail" ],
        "summary" : "Endpoint fetches latest detailed journeys with pagination and starting with the most recent entry based on filtering. Returned Journeys are not older than hour ago from current time.",
        "description" : "Journeys Details data are combined from JourneyResult and Asset DB collections.\nJourneys details are fetched based on DriverId or GroupId and execution time is set on current date\nOne of Group or Driver must be filled, but not both.\n\n<u><b>Parameters:</b></u>\n<ul><li><b>fromDateTime</b> (Date)</u> : Start time used for filtering, cannot be older than hour ago from current time.\n</li><li><b>driverId</b> (String) : Id of driver for filtering. @Visible validation, mandatory if groupId is not provided, but cannot be both filled.\n</li><li><b>groupId</b> (String) : Id of group used for filtering. @Visible validation, mandatory if 'driverId' is not provided, but cannot be both filled\n</li><li><b>pageIndex</b> (Integer) : Number of page, default = 0.\n</li><li><b>pageSize</b> (Integer) : Batches per page, default = 50.\n</li><li><b>excludeChildGroups</b> (Boolean)  : Exclude child groups, default = FALSE.</li></ul>",
        "operationId" : "getLatestJourneyDetailDriver",
        "parameters" : [ {
          "name" : "startDate",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "groupId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "excludeChildGroups",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "driverId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fromDateTime",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "dateRange",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/DateRange"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List for latest Journeys Details (LatestJourneyDetailsDriverDto) selected by DriverId, and from given Execution time. May be empty list if now Journeys has been found."
          },
          "400" : {
            "description" : "When DriverId or GroupId is not provided. Message is: 'One of following properties [DriverId, GroupId] can not be null'\n\tWhen both DriverId or GroupId are provided. Message is: 'One of following properties [DriverId, GroupId] must be null'\n\tWhen given property, DriverId or GroupId, are not visible for current User. Message is: 'Resource not visible to User'"
          }
        }
      },
      "options" : {
        "tags" : [ "/journey/detail" ],
        "operationId" : "optionsJourneyDetailDriverLatest",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/journey/detail/vehicle/latest" : {
      "get" : {
        "tags" : [ "/journey/detail" ],
        "summary" : "Endpoint fetches latest detailed journeys with pagination and starting with the most recent entry based on filtering. Returned Journeys are not older than hour ago from current time.",
        "description" : "Journeys Details data are combined from JourneyResult and Asset DB collections.\nJourneys details are fetched based on ExecutionTime and VehicleId or GroupId.\nOne of Group or Vehicle must be filled, but not both.\n\n<u><b>Parameters:</b></u>\n<ul><li><b>fromDateTime</b> (Date)</u> : Start time used for filtering, cannot be older than hour ago from current time.\n</li><li><b>startDate</b> (Date) : End date of time interval used for filtering. Mandatory and cannot be later then 'endDate'. \n</li><li><b>endDate</b> (Date) : End date of time interval used for filtering. Mandatory and cannot be sooner then 'starDate'.\n</li><li><b>driverId</b> (String) : Id of driver used for filtering. @Visible validation, mandatory if 'groupId' is not provided, but cannot be both filled\n</li><li><b>groupId</b> (String) : Id of group used for filtering. @Visible validation, mandatory if 'driverId' is not provided, but cannot be both filled\n</li><li><b>pageIndex</b> (Integer) : Number of page, default = 0.\n</li><li><b>pageSize</b> (Integer) : Batches per page, default = 50.\n</li><li><b>excludeChildGroups</b> (Boolean)  : Exclude child groups, default = FALSE.</li></ul>",
        "operationId" : "getLatestJourneyDetailVehicle",
        "parameters" : [ {
          "name" : "startDate",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "groupId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "excludeChildGroups",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "vehicleId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fromDateTime",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "dateRange",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/DateRange"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List for Journeys Details (LatestJourneyDetailsVehicleDto) selected by VehicleId, and from Execution time which is no older than hour ago from current time. May be empty list if now Journeys has been found.",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LatestJourneyDetailsVehicleDto"
                }
              }
            }
          },
          "400" : {
            "description" : "When VehicleId or GroupId is not provided. Message is: 'One of following properties [VehicleId, GroupId] can not be null'\n\tWhen both VehicleId or GroupId are provided. Message is: 'One of following properties [VehicleId, GroupId] must be null'\n\tWhen given property, VehicleId or GroupId, are not visible for current User. Message is: 'Resource not visible to User'"
          }
        }
      },
      "options" : {
        "tags" : [ "/journey/detail" ],
        "operationId" : "optionsJourneyDetailVehicleLatest",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/journey/detail/driver/triggerEmail" : {
      "post" : {
        "tags" : [ "/journey/detail" ],
        "operationId" : "triggerJourneyDetailedDriverReport",
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/JourneyDriverReportTriggerRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/journey/summary/driver/triggerEmail" : {
      "post" : {
        "tags" : [ "/journey/summary" ],
        "operationId" : "getJourneySummaryDriver",
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/JourneyDriverReportTriggerRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/journey/summary/vehicle" : {
      "post" : {
        "tags" : [ "/journey/summary" ],
        "operationId" : "getJourneySummaryVehicle",
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/JourneySummaryRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WithPaginationResultJourneySummaryResponseDto"
                }
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "/journey/summary" ],
        "operationId" : "optionsJourneySummaryVehicle",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/location/category" : {
      "get" : {
        "tags" : [ "/location/category" ],
        "operationId" : "getAllCategories",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/LocationCategoryWithLocationsCountDto"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "/location/category" ],
        "operationId" : "createOrUpdateCategory",
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/LocationCategoryDto"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LocationCategoryDto"
                }
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "/location/category" ],
        "operationId" : "optionsCategory",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/location/category/{categoryId}" : {
      "get" : {
        "tags" : [ "/location/category" ],
        "operationId" : "getOneCategory",
        "parameters" : [ {
          "name" : "categoryId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LocationCategoryDto"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "/location/category" ],
        "operationId" : "deleteCategory",
        "parameters" : [ {
          "name" : "categoryId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "/location/category" ],
        "operationId" : "optionsOneCategory",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/location" : {
      "put" : {
        "tags" : [ "/location" ],
        "operationId" : "updateLocation",
         "summary" : "Update location",
        "description" : "PUT request to update location details. The identifier for the location to be updated is included in the JSON body.",
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/LocationDto"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LocationDto"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "/location" ],
        "operationId" : "createLocation",
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/LocationDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LocationDto"
                }
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "/location" ],
        "operationId" : "optionsLocation",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/location/{placeId}" : {
      "delete" : {
        "tags" : [ "/location" ],
        "operationId" : "deletePlace",
        "parameters" : [ {
          "name" : "placeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "/location" ],
        "operationId" : "optionsOneLocation",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/location/gps" : {
      "get" : {
        "tags" : [ "/location" ],
        "summary" : "Please provide either formatted address or at least city, postCode and country.",
        "operationId" : "findLocation",
        "parameters" : [ {
          "name" : "formattedAddress",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "road",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "roadNumber",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "city",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "stateProvince",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "postCode",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "country",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CoordinateDto"
                }
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "/location" ],
        "operationId" : "optionsGeocodeLocation",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/location/nearest" : {
      "get" : {
        "tags" : [ "/location" ],
        "operationId" : "findNearestPlaces",
        "parameters" : [ {
          "name" : "longitude",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        }, {
          "name" : "latitude",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        }, {
          "name" : "radius",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        }, {
          "name" : "maximumResultsToReturn",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "road",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "roadNumber",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "city",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "country",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "postCode",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/NearestLocationsSearchResultDto"
                  }
                }
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "/location" ],
        "operationId" : "optionsNearestLocation",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/location/current" : {
      "get" : {
        "tags" : [ "/location" ],
        "operationId" : "getCurrentPlaces",
        "parameters" : [ {
          "name" : "pageIndex",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "name",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "address",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "category",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reference",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "phoneNumber",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "contact",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WithPaginationResultLocationSearchResultDto"
                }
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "/location" ],
        "operationId" : "optionsCurrentLocation",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/person/{personId}/settings" : {
      "get" : {
        "tags" : [ "/person" ],
        "operationId" : "getPersonSettings",
        "parameters" : [ {
          "name" : "personId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PersonSettingsResultDto"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "/person" ],
        "operationId" : "updatePersonSettings_1",
        "parameters" : [ {
          "name" : "personId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/PersonSettingsUpdateRequestDto"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PersonSettingsResultDto"
                }
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "/person" ],
        "operationId" : "optionsPersonSettings_1",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/person/settings" : {
      "post" : {
        "tags" : [ "/person" ],
        "operationId" : "updatePersonSettings",
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/PersonSettingsPatchRequestDto"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PersonSettingsWithTaxAndExpenseResultDto"
                }
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "/person" ],
        "operationId" : "optionsSettings",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/person/email" : {
      "put" : {
        "tags" : [ "/person" ],
        "operationId" : "updatePersonEmail",
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/PersonEmailUpdateRequestDto"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PersonSettingsResultDto"
                }
              }
            }
          }
        }
      }
    },
    "/public/v1/person/settings" : {
      "get" : {
        "tags" : [ "/person/settings" ],
        "operationId" : "getPersonSettings_1",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PersonSettingsResultDto"
                }
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "/person/settings" ],
        "operationId" : "options_1",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/role" : {
      "get" : {
        "tags" : [ "/role" ],
        "operationId" : "getAll",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RoleDto"
                  }
                }
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "/role" ],
        "operationId" : "optionsRole",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/role/{roleId}" : {
      "get" : {
        "tags" : [ "/role" ],
        "operationId" : "getOne",
        "parameters" : [ {
          "name" : "roleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RoleDto"
                }
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "/role" ],
        "operationId" : "optionsOneRole",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/speeding/detail/driver" : {
      "get" : {
        "tags" : [ "/speeding" ],
        "operationId" : "getDriverSpeedingDetails",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "startDate",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "fromDateTime",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "percentAboveLimit",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "excludeChildGroups",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "driverId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entityId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dateRange",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/DateRange"
          }
        }, {
          "name" : "groupId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WithPaginationResultSpeedingDetailDto"
                }
              }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/speeding/detail/driver/latest" : {
      "get" : {
        "tags" : [ "/speeding" ],
        "summary" : "Latest speeding events for a driver",
        "description" : "Returns the latest set of speeding events for the specified driver, by customerId and driverId",
        "operationId" : "getLatestDriverSpeedingDetails",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "startDate",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "fromDateTime",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "percentAboveLimit",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "excludeChildGroups",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "driverId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entityId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dateRange",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/DateRange"
          }
        }, {
          "name" : "groupId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Latest set of speeding events for the customerId and driverId",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WithPaginationResult"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unathorized - invalid token"
          },
          "404" : {
            "description" : "Unable to find SpeedingDetailDto for driver [driverId] in Customer with id [customerId]"
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/speeding/detail/vehicle/latest" : {
      "get" : {
        "tags" : [ "/speeding" ],
        "summary" : "Latest speeding events for a vehicle",
        "description" : "Returns the latest set of speeding events for the specified vehicle, by customerId and assetId",
        "operationId" : "getLatestVehicleSpeedingDetails",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "startDate",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "fromDateTime",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "percentAboveLimit",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "excludeChildGroups",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "vehicleId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entityId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dateRange",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/DateRange"
          }
        }, {
          "name" : "groupId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Latest set of speeding events for the customerId and assetId",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WithPaginationResult"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unathorized - invalid token"
          },
          "404" : {
            "description" : "Unable to find SpeedingDetailDto for asset [assetId] in Customer with id [customerId]"
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/speeding/detail/vehicle" : {
      "get" : {
        "tags" : [ "/speeding" ],
        "operationId" : "getVehicleSpeedingDetails",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "startDate",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "fromDateTime",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "percentAboveLimit",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "excludeChildGroups",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "vehicleId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entityId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dateRange",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/DateRange"
          }
        }, {
          "name" : "groupId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WithPaginationResultSpeedingDetailDto"
                }
              }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/speeding/detail/driver/triggerEmail" : {
      "post" : {
        "tags" : [ "/speeding" ],
        "operationId" : "triggerSpeedingDetailToPerson",
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/TriggerSpeedingDetailRequestDto"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/tokenInformation" : {
      "get" : {
        "tags" : [ "/tokenInformation" ],
        "operationId" : "getPersonInformation",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TokenInformationResultDto"
                }
              }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/tracking/history/driver" : {
      "get" : {
        "tags" : [ "/tracking/history" ],
        "operationId" : "getEventHistoryByDriver",
        "parameters" : [ {
          "name" : "pageIndex",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "startDate",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "dateType",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "driverId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "driverIdAsSet",
          "in" : "query",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "dateRange",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/TrackingVehicleHistoryEventDateRange"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WithPaginationResultTrackingHistoryResultDto"
                }
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "/tracking/history" ],
        "operationId" : "optionsEventHistoryByDriver",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/tracking/history/vehicle" : {
      "get" : {
        "tags" : [ "/tracking/history" ],
        "operationId" : "getEventHistoryByVehicle",
        "parameters" : [ {
          "name" : "pageIndex",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "startDate",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "dateType",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vehicleId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vehicleIdAsSet",
          "in" : "query",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "dateRange",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/TrackingVehicleHistoryEventDateRange"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WithPaginationResultTrackingHistoryResultDto"
                }
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "/tracking/history" ],
        "operationId" : "optionsEventHistoryByVehicle",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/tracking/history/driver/latest" : {
      "get" : {
        "tags" : [ "/tracking/history" ],
        "operationId" : "getLatestEventHistoryByDriver",
        "parameters" : [ {
          "name" : "fromDateTime",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "driverId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LatestTrackingHistoryResultsDto"
                }
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "/tracking/history" ],
        "operationId" : "optionsEventLatestHistoryByDriver",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/tracking/history/vehicle/latest" : {
      "get" : {
        "tags" : [ "/tracking/history" ],
        "operationId" : "getLatestEventHistoryByVehicle",
        "parameters" : [ {
          "name" : "fromDateTime",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "vehicleId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "groupIds",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LatestTrackingHistoryResultsDto"
                }
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "/tracking/history" ],
        "operationId" : "optionsEventLatestHistoryByVehicle",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/tracking/journey/detail" : {
      "get" : {
        "tags" : [ "/tracking/journey" ],
        "operationId" : "getJourneyDetails",
        "parameters" : [ {
          "name" : "pageIndex",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "startDate",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "classifications",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "ifModifiedSince",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "startDateRange",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/DateRange"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WithPaginationResultTrackingJourneyDetailResultDto"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "/tracking/journey" ],
        "operationId" : "updateJourneyDetails",
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/TrackingJourneyDetailUpdateRequestDto"
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/TrackingJourneyDetailResultDto"
                  }
                }
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "/tracking/journey" ],
        "operationId" : "optionsJourneyDetail",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/tracking/journey/detailExpense" : {
      "get" : {
        "tags" : [ "/tracking/journey" ],
        "operationId" : "getJourneyExpenseDetails",
        "parameters" : [ {
          "name" : "pageIndex",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "startDate",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "classifications",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "ifModifiedSince",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "startDateRange",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/DateRange"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WithPaginationResultTrackingJourneyDetailResultDto"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "/tracking/journey" ],
        "operationId" : "updateJourneyAndExpensesDetails",
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/TrackingJourneyDetailUpdateRequestDto"
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/TrackingJourneyDetailResultDto"
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "/tracking/journey" ],
        "operationId" : "resetJourneyExpense",
        "parameters" : [ {
          "name" : "journeyId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/TrackingJourneyDetailResultDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/tracking/journey/summary" : {
      "get" : {
        "tags" : [ "/tracking/journey" ],
        "operationId" : "getJourneySummary",
        "parameters" : [ {
          "name" : "startDate",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "vehicleIds",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "groupIds",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "startDateRange",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/DateRange"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/TrackingJourneySummaryResultDto"
                  }
                }
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "/tracking/journey" ],
        "operationId" : "optionsJourneySummary",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/tracking/journey/submit" : {
      "post" : {
        "tags" : [ "/tracking/journey" ],
        "operationId" : "submitJourneys",
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/TrackingJourneySubmitDto"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JourneySubmitResponseDto"
                }
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "/tracking/journey" ],
        "operationId" : "optionsJourneySubmit",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/tracking/live/inputEvents" : {
      "get" : {
        "tags" : [ "/tracking/live" ],
        "summary" : "Endpoint fetches latest detailed tracking inputs with pagination and starting with the most recent entry based on filtering.",
        "description" : "Returned Journeys are not older than day ago from current time.\n CurrentPositionResult data are being selected based personId, where personId is from request context.\nIf CurrentPositionResult data are empty list it returns empty list. Else it walks through list, fetches Asset data from customer_shared.asset database and combines both data (CurrentPositionResult, Asset)which are saved to result list.",
        "operationId" : "getLatestInputEventsLiveStatus",
        "responses" : {
          "200" : {
            "description" : "List of most recent detailed tracking inputs, where 1 item is LatestTrackingInputEventsResultsDto and contains combined CurrentPositionResult and Asset data. Data are selected from DB based on personId which is from requestContext.",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LatestTrackingInputEventsResultsDto"
                }
              }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/tracking/live/latest" : {
      "get" : {
        "tags" : [ "/tracking/live" ],
        "summary" : "Endpoint fetches latest detailed tracking inputs with pagination and starting with the most recent entry based on filtering. Returned Journeys are not older than day ago from current time.",
        "description" : "Filtering consists of driverIds or vehicleIds or groupIds and only 1 of the following filter option can be used. \nIf all of them are null / empty, groupIds are filled in with HierarchyNodeId from request context. \nBased on filtering option it fetches CurrentPositionResult data from customer_shared.currentPositionResult database.\nIf CurrentPositionResult data are empty list it returns empty list.\nElse it walks through list, checks whether car is not sold and if so endpoint fetches Asset data from customer_shared.asset database and combines both data (CurrentPositionResult, Asset) which are saved to result list.\n\n<u><b>Parameters:</b></u>\n<ul><li><b>fromDateTime</b> (Date) : Start date used for filtering. Date must be less than one day ago.\n</li><li><b>vehicleIds</b> (List<String>) : Id of vehicle used for filtering. @Visible validation.\n</li><li><b>driverIdsIds</b> (List<String>) : Id of Group used for filtering. @Visible validation.\n</li><li><b>groupIds</b> (List<String>) : Id of Group used for filtering. @Visible validation.\n</li><li><b>showAllVehicleStatus</b> (Boolean) : Show status of all vehicles, default = FALSE.\n</li><li><b>locale</b> (String) : Locale used for language.\n</li><li><b>hideSpeedIfSpeedSensitive</b> (Boolean)  : Hide speed from results if results are speed sensitive, default = FALSE.</li></ul>",
        "operationId" : "getLatestLiveStatus",
        "parameters" : [ {
          "name" : "vehicleIds",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "groupIds",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "driverIds",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "fromDateTime",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "showAllVehicleStatus",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "locale",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hideSpeedIfSpeedSensitive",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Paginated List of most recent detailed tracking inputs (LatestTrackingLiveResultsDto), where 1 item is TrackingLiveResultDto and contains combined CurrentPositionResult and Asset data. Asset data contains vehicle vin number. Data are selected from DB based on either vehicleIds or driverIds or groupIds. If none of the DB selector fits it returns empty list",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LatestTrackingLiveResultsDto"
                }
              }
            }
          },
          "400" : {
            "description" : "When multiple filter option are filled in (vehicleIds and groupIds OR vehicleIds and driverIds OR driverIds and groupIds).\nWhen filtering field contains id of resource which is not visible to user. Message is: 'fieldName: Invalid value [value] => Resource not visible to User'",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrorDto"
                }
              }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/tracking/live/latest/aemp" : {
      "get" : {
        "tags" : [ "/tracking/live" ],
        "summary" : "Gives detailed tracking inputs starting with the most recent entry based on filtering.Returned Journeys are not older than day ago from current time.Data are returned under the AEMP format.",
        "description" : "Filtering consists of driverIds or vehicleIds or groupIds and only 1 of the following filter option can be used. \nIf all of them are null / empty, groupIds are filled in with HierarchyNodeId from request context. \nBased on filtering option it fetches CurrentPositionResult data from customer_shared.currentPositionResult database.\nIf CurrentPositionResult data are empty list it returns empty list.\nElse it walks through list, checks whether car is not sold and if so endpoint fetches Asset data from customer_shared.asset database and combines both data (CurrentPositionResult, Asset) which are saved to result list.\n\n<u><b>Parameters:</b></u>\n<ul><li><b>fromDateTime</b> (Date) : Start date used for filtering. Date must be less than one day ago.\n</li><li><b>vehicleIds</b> (List<String>) : Id of vehicle used for filtering. @Visible validation.\n</li><li><b>driverIdsIds</b> (List<String>) : Id of Group used for filtering. @Visible validation.\n</li><li><b>groupIds</b> (List<String>) : Id of Group used for filtering. @Visible validation.\n</li><li><b>showAllVehicleStatus</b> (Boolean) : Show status of all vehicles, default = FALSE.\n</li></ul>",
        "operationId" : "getLatestLiveStatusAemp",
        "parameters" : [ {
          "name" : "vehicleIds",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "groupIds",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "driverIds",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "fromDateTime",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "showAllVehicleStatus",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of most recent detailed tracking input, where 1 item contains combined CurrentPositionResult and Asset data. Data are selected from DB based on either vehicleIds or driverIds or groupIds. If none of the DB selector fits it returns empty list",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Fleet"
                }
              }
            }
          },
          "400" : {
            "description" : "When multiple filter option are filled in (vehicleIds and groupIds OR vehicleIds and driverIds OR driverIds and groupIds).\nWhen filtering field contains id of resource which is not visible to user. Message is: 'fieldName: Invalid value [value] => Resource not visible to User'",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrorDto"
                }
              }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/tracking/live/latest/geojson" : {
      "get" : {
        "tags" : [ "/tracking/live" ],
        "summary" : "Endpoint fetches latest detailed tracking inputs with pagination and starting with the most recent entry based on filtering. Returned Journeys are not older than day ago from current time.Produces GeoJSON format response.",
        "description" : "Filtering consists of driverIds or vehicleIds or groupIds and only 1 of the following filter option can be used. \nIf all of them are null / empty, groupIds are filled in with HierarchyNodeId from request context. \nBased on filtering option it fetches CurrentPositionResult data from customer_shared.currentPositionResult database.\nIf CurrentPositionResult data are empty list it returns empty list.\nElse it walks through list, checks whether car is not sold and if so endpoint fetches Asset data from customer_shared.asset database and combines both data (CurrentPositionResult, Asset) which are saved to result list.\n\n<u><b>Parameters:</b></u>\n<ul><li><b>fromDateTime</b> (Date) : Start date used for filtering. Date must be less than one day ago.\n</li><li><b>vehicleIds</b> (List<String>) : Id of vehicle used for filtering. @Visible validation.\n</li><li><b>driverIdsIds</b> (List<String>) : Id of Group used for filtering. @Visible validation.\n</li><li><b>groupIds</b> (List<String>) : Id of Group used for filtering. @Visible validation.\n</li><li><b>showAllVehicleStatus</b> (Boolean) : Show status of all vehicles, default = FALSE.\n</li><li><b>locale</b> (String) : Locale used for language.\n</li><li><b>hideSpeedIfSpeedSensitive</b> (Boolean)  : Hide speed from results if results are speed sensitive, default = FALSE.</li></ul>",
        "operationId" : "getLatestLiveStatusAsGeoJson",
        "parameters" : [ {
          "name" : "vehicleIds",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "groupIds",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "driverIds",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "fromDateTime",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "showAllVehicleStatus",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "locale",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hideSpeedIfSpeedSensitive",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Paginated List of most recent detailed tracking inputs (LatestTrackingLiveResultsDto), where 1 item is TrackingLiveResultDto and contains combined CurrentPositionResult and Asset data. Data are selected from DB based on either vehicleIds or driverIds or groupIds. If none of the DB selector fits it returns empty list",
            "content" : {
              "application/geo+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FeatureCollection"
                }
              }
            }
          },
          "400" : {
            "description" : "When multiple filter option are filled in (vehicleIds and groupIds OR vehicleIds and driverIds OR driverIds and groupIds).\nWhen filtering field contains id of resource which is not visible to user. Message is: 'fieldName: Invalid value [value] => Resource not visible to User'",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrorDto"
                }
              }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/tracking/live" : {
      "get" : {
        "tags" : [ "/tracking/live" ],
        "summary" : "Gives detailed tracking inputs starting with the most recent entry based on filtering.",
        "description" : "Filtering consists of driverIds or vehicleIds or groupIds and only 1 of the following filter option can be used.\nIf all of them are null / empty, groupIds are filled in with HierarchyNodeId from request context.\nBased on filtering option it fetches CurrentPositionResult data from customer_shared.currentPositionResult database.\n If CurrentPositionResult data are empty list it returns empty list.\nElse it walks through list, checks whether car is not sold and if so endpoint fetches Asset data from customer_shared.asset database and combines both data (CurrentPositionResult, Asset) which are saved to result list.\n\n<u><b>Parameters:</b></u>\n<ul><li><b>fromDateTime</b> (Date) : Start date used for filtering. \n</li><li><b>vehicleIds</b> (List<String>) : Id of vehicle used for filtering. @Visible validation.\n</li><li><b>driverIdsIds</b> (List<String>) : Id of Group used for filtering. @Visible validation.\n</li><li><b>groupIds</b> (List<String>) : Id of Group used for filtering. @Visible validation.\n</li><li><b>showAllVehicleStatus</b> (Boolean) : Show status of all vehicles, default = FALSE.\n</li><li><b>locale</b> (String) : Locale used for language.\n</li><li><b>hideSpeedIfSpeedSensitive</b> (Boolean)  : Hide speed from results if results are speed sensitive, default = FALSE.</li></ul>",
        "operationId" : "getLiveStatus",
        "parameters" : [ {
          "name" : "vehicleIds",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "groupIds",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "driverIds",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "fromDateTime",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "showAllVehicleStatus",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "locale",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hideSpeedIfSpeedSensitive",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of most recent detailed tracking inputs (TrackingLiveResultDto), where 1 item contains combined CurrentPositionResult and Asset data. Asset data contains vehicle vin number.Data are selected from DB based on either vehicleIds or driverIds or groupIds. If none of the DB selector fits it returns empty list",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TrackingLiveRequestDto"
                }
              }
            }
          },
          "400" : {
            "description" : "When multiple filter option are filled in (vehicleIds and groupIds OR vehicleIds and driverIds OR driverIds and groupIds).\nWhen filtering field contains id of resource which is not visible to user. Message is: 'fieldName: Invalid value [value] => Resource not visible to User'",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrorDto"
                }
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "/tracking/live" ],
        "operationId" : "optionsTrackingLive",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/tracking/live/aemp" : {
      "get" : {
        "tags" : [ "/tracking/live" ],
        "summary" : "Gives detailed tracking inputs starting with the most recent entry based on filtering. Data are returned under the AEMP format.",
        "description" : "Filtering consists of driverIds or vehicleIds or groupIds and only 1 of the following filter option can be used.\nIf all of them are null / empty, groupIds are filled in with HierarchyNodeId from request context.\nBased on filtering option it fetches CurrentPositionResult data from customer_shared.currentPositionResult database.\n If CurrentPositionResult data are empty list it returns empty list.\nElse it walks through list, checks whether car is not sold and if so endpoint fetches Asset data from customer_shared.asset database and combines both data (CurrentPositionResult, Asset) which are saved to result list.\n\n<u><b>Parameters:</b></u>\n<ul><li><b>fromDateTime</b> (Date) : Start date used for filtering. \n</li><li><b>vehicleIds</b> (List<String>) : Id of vehicle used for filtering. @Visible validation.\n</li><li><b>driverIdsIds</b> (List<String>) : Id of Group used for filtering. @Visible validation.\n</li><li><b>groupIds</b> (List<String>) : Id of Group used for filtering. @Visible validation.\n</li><li><b>showAllVehicleStatus</b> (Boolean) : Show status of all vehicles, default = FALSE.\n</li></ul>",
        "operationId" : "getLiveStatusAemp",
        "parameters" : [ {
          "name" : "vehicleIds",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "groupIds",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "driverIds",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "fromDateTime",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "showAllVehicleStatus",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of most recent detailed tracking input, where 1 item contains combined CurrentPositionResult and Asset data. Data are selected from DB based on either vehicleIds or driverIds or groupIds. If none of the DB selector fits it returns empty list",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Fleet"
                }
              }
            }
          },
          "400" : {
            "description" : "When multiple filter option are filled in (vehicleIds and groupIds OR vehicleIds and driverIds OR driverIds and groupIds).\nWhen filtering field contains id of resource which is not visible to user. Message is: 'fieldName: Invalid value [value] => Resource not visible to User'",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrorDto"
                }
              }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/tracking/live/geojson" : {
      "get" : {
        "tags" : [ "/tracking/live" ],
        "summary" : "Gives detailed tracking inputs starting with the most recent entry based on filtering. Produces GeoJSON format response.",
        "description" : "Filtering consists of driverIds or vehicleIds or groupIds and only 1 of the following filter option can be used.\nIf all of them are null / empty, groupIds are filled in with HierarchyNodeId from request context.\nBased on filtering option it fetches CurrentPositionResult data from customer_shared.currentPositionResult database.\n If CurrentPositionResult data are empty list it returns empty list.\nElse it walks through list, checks whether car is not sold and if so endpoint fetches Asset data from customer_shared.asset database and combines both data (CurrentPositionResult, Asset) which are saved to result list.\n\n<u><b>Parameters:</b></u>\n<ul><li><b>fromDateTime</b> (Date) : Start date used for filtering. \n</li><li><b>vehicleIds</b> (List<String>) : Id of vehicle used for filtering. @Visible validation.\n</li><li><b>driverIdsIds</b> (List<String>) : Id of Group used for filtering. @Visible validation.\n</li><li><b>groupIds</b> (List<String>) : Id of Group used for filtering. @Visible validation.\n</li><li><b>showAllVehicleStatus</b> (Boolean) : Show status of all vehicles, default = FALSE.\n</li><li><b>locale</b> (String) : Locale used for language.\n</li><li><b>hideSpeedIfSpeedSensitive</b> (Boolean)  : Hide speed from results if results are speed sensitive, default = FALSE.</li></ul>",
        "operationId" : "getLiveStatusAsGeoJson",
        "parameters" : [ {
          "name" : "vehicleIds",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "groupIds",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "driverIds",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "fromDateTime",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "showAllVehicleStatus",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "locale",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hideSpeedIfSpeedSensitive",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of most recent detailed tracking inputs (TrackingLiveResultDto), where 1 item contains combined CurrentPositionResult and Asset data. Data are selected from DB based on either vehicleIds or driverIds or groupIds. If none of the DB selector fits it returns empty list",
            "content" : {
              "application/geo+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FeatureCollection"
                }
              }
            }
          },
          "400" : {
            "description" : "When multiple filter option are filled in (vehicleIds and groupIds OR vehicleIds and driverIds OR driverIds and groupIds).\nWhen filtering field contains id of resource which is not visible to user. Message is: 'fieldName: Invalid value [value] => Resource not visible to User'",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrorDto"
                }
              }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/tracking/manualjourney" : {
      "get" : {
        "tags" : [ "/manualjourneys" ],
        "operationId" : "getManualJourney",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startDate",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ManualJourneyDto"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "/manualjourneys" ],
        "operationId" : "updateManualJourney",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "pattern" : "^[\\w]*$",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ManualJourneyDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ManualJourneyDto"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "/manualjourneys" ],
        "operationId" : "createManualJourney",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "pattern" : "^[\\w]*$",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ManualJourneyBaseDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ManualJourneyDto"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "/manualjourneys" ],
        "operationId" : "deleteManualJourney",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "journeyId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/tracking/manualjourneys" : {
      "put" : {
        "tags" : [ "/manualjourneys" ],
        "operationId" : "updateMultipleManualJourneys",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "pattern" : "^[\\w]*$",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/ManualJourneyDto"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MultipleManualJourneysResponseDto"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "/manualjourneys" ],
        "operationId" : "createMultipleManualJourneys",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "pattern" : "^[\\w]*$",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/ManualJourneyDto"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MultipleManualJourneysResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/user" : {
      "get" : {
        "tags" : [ "/user" ],
        "summary" : "Get a list of users",
        "operationId" : "listAllUsers",
        "parameters" : [ {
          "name" : "pageIndex",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Users were successfully returned."
          },
          "400" : {
            "description" : "Missing validation such as groupIds."
          }
        }
      },
      "post" : {
        "tags" : [ "/user" ],
        "summary" : "create given user to the hierarchy node (user are removed from their current node).",
        "operationId" : "createUser",
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserDto"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "User were successfully created to the hierarchy node."
          },
          "400" : {
            "description" : "Missing validation such as groupIds."
          }
        }
      },
      "options" : {
        "tags" : [ "/user" ],
        "operationId" : "optionsUser",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/user/{userId}" : {
      "get" : {
        "tags" : [ "/user" ],
        "summary" : "Get a user",
        "operationId" : "getOne_1",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "User successfully returned."
          },
          "400" : {
            "description" : "Missing validation."
          }
        }
      },
      "put" : {
        "tags" : [ "/user" ],
        "summary" : "update user to the hierarchy node (users are removed from their previous hierarchy node).",
        "operationId" : "updateUser",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserDto"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Users were successfully created to the hierarchy node."
          },
          "400" : {
            "description" : "Missing validation such as groupIds."
          }
        }
      },
      "delete" : {
        "tags" : [ "/user" ],
        "operationId" : "deleteUser",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "/user" ],
        "operationId" : "optionsOneDriver_1",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/user/{userId}/passwordResetToken" : {
      "get" : {
        "tags" : [ "/user" ],
        "operationId" : "getPasswordResetToken",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserTokenDto"
                }
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "/user" ],
        "operationId" : "optionsPasswordResetToken",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/user/password" : {
      "post" : {
        "tags" : [ "/user" ],
        "operationId" : "resetPassword",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdatePasswordRequestDto"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UpdatePasswordResultDto"
                }
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "/user" ],
        "operationId" : "optionsUpdatePassword",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/utilisation/driver" : {
      "get" : {
        "tags" : [ "/utilisation" ],
        "operationId" : "getDriverUtilisation",
        "parameters" : [ {
          "name" : "startDate",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "driverId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "groupId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startDateRange",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/DateRange"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UtilisationDriverResultDto"
                }
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "/utilisation" ],
        "operationId" : "optionsUtilisationDriver",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/utilisation/vehicle" : {
      "get" : {
        "tags" : [ "/utilisation" ],
        "operationId" : "getVehicleUtilisation",
        "parameters" : [ {
          "name" : "startDate",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "vehicleId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "groupId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startDateRange",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/DateRange"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UtilisationVehicleResultDto"
                }
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "/utilisation" ],
        "operationId" : "optionsUtilisationVehicle",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/vehicle/nearest" : {
      "get" : {
        "tags" : [ "/vehicle" ],
        "operationId" : "findNearestVehicles",
        "parameters" : [ {
          "name" : "lastMovedStartDateTime",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "lastMovedEndDateTime",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "longitude",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        }, {
          "name" : "latitude",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        }, {
          "name" : "radius",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        }, {
          "name" : "maximumResultsToReturn",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "road",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "roadNumber",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "city",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "country",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "postCode",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/NearestVehiclesSearchResultDto"
                  }
                }
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "/vehicle" ],
        "operationId" : "optionsNearestVehicle",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/vehicle/{vehicleId}" : {
      "put" : {
        "tags" : [ "/vehicle" ],
        "description" : "update an asset by id in given customer database",
        "operationId" : "updateVehicle",
        "parameters" : [ {
          "name" : "vehicleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/VehicleDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "updated asset with correct values"
          },
          "400" : {
            "description" : "Message related to validation"
          }
        }
      },
      "options" : {
        "tags" : [ "/vehicle" ],
        "operationId" : "optionsOneVehicle",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/vehicle" : {
      "get" : {
        "tags" : [ "/vehicle" ],
        "summary" : "Get a list of vehicles by customer and groups",
        "operationId" : "searchVehicles",
        "parameters" : [ {
          "name" : "pageIndex",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "vehicleIds",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "groupIds",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "registration",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Vehicles were successfully returned."
          },
          "400" : {
            "description" : "Missing validation on parameters."
          }
        }
      },
      "options" : {
        "tags" : [ "/vehicle" ],
        "operationId" : "optionsVehicle",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/vehicle/faults" : {
      "get" : {
        "tags" : [ "/vehicle" ],
        "operationId" : "searchVehiclesWithFaults",
        "parameters" : [ {
          "name" : "pageIndex",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "startDate",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "vehicleId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "groupId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dateRangeValid",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WithPaginationResultVehicleSearchResultWithFaultsDto"
                }
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "/vehicle" ],
        "operationId" : "optionsVehicleFaults",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/vehicle/serviceDate" : {
      "get" : {
        "tags" : [ "/vehicle" ],
        "operationId" : "searchVehiclesWithServiceDate",
        "parameters" : [ {
          "name" : "pageIndex",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "startDate",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "vehicleId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "groupId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dateRangeValid",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WithPaginationResultVehicleSearchResultWithServiceDateDto"
                }
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "/vehicle" ],
        "operationId" : "optionsVehicleServiceDate",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v2/driverbehaviourmetrics" : {
      "post" : {
        "tags" : [ "/v2/driverbehaviourmetrics" ],
        "operationId" : "metricsForPersonV2",
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/BehaviourMetricRequestDto"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/BehaviourMetricDailyDto"
                  }
                }
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "/v2/driverbehaviourmetrics" ],
        "operationId" : "optionsMetricsForPersonV2",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/public/v2/person/settings/basic" : {
      "get" : {
        "tags" : [ "/v2/person/settings" ],
        "operationId" : "getBasicSettings",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicPersonSettingsDto"
                }
              }
            }
          }
        }
      }
    },
    "/public/v2/person/settings" : {
      "get" : {
        "tags" : [ "/v2/person/settings" ],
        "operationId" : "getPersonSettings_2",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PersonSettingsWithTaxAndExpenseResultDto"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "/v2/person/settings" ],
        "operationId" : "updateUserSettings",
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "string"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "/v2/person/settings" ],
        "operationId" : "options_2",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "AlertEventDto" : {
        "type" : "object",
        "properties" : {
          "dynamicRuleId" : {
            "pattern" : "^[\\w]*$",
            "type" : "string"
          },
          "eventDateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "assetId" : {
            "pattern" : "^[\\w]*$",
            "type" : "string"
          },
          "personId" : {
            "pattern" : "^[\\w]*$",
            "type" : "string"
          },
          "eventData" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          }
        }
      },
      "AlertHistoryDto" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "customerId" : {
            "type" : "string"
          },
          "dateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "assetId" : {
            "type" : "string"
          },
          "assetName" : {
            "type" : "string"
          },
          "assetRegistration" : {
            "type" : "string"
          },
          "personId" : {
            "type" : "string"
          },
          "personName" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          },
          "subscribers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SubscriberDto"
            }
          },
          "type" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "SubscriberDto" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "WithPaginationResultAlertHistoryDto" : {
        "type" : "object",
        "properties" : {
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AlertHistoryDto"
            }
          }
        }
      },
      "AlertPersonSearchRequestDto" : {
        "type" : "object",
        "properties" : {
          "pageIndex" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "groupId" : {
            "type" : "string"
          },
          "excludeChildGroups" : {
            "type" : "boolean"
          },
          "name" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "subscriberEmail" : {
            "type" : "string"
          },
          "subscriberTelephone" : {
            "type" : "string"
          },
          "subscriberWebUser" : {
            "type" : "string"
          },
          "enableSecondaryGroupAssignments" : {
            "type" : "boolean"
          },
          "driverId" : {
            "type" : "string"
          },
          "entityId" : {
            "type" : "string"
          }
        }
      },
      "AlertAssetSearchRequestDto" : {
        "type" : "object",
        "properties" : {
          "pageIndex" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "groupId" : {
            "type" : "string"
          },
          "excludeChildGroups" : {
            "type" : "boolean"
          },
          "name" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "subscriberEmail" : {
            "type" : "string"
          },
          "subscriberTelephone" : {
            "type" : "string"
          },
          "subscriberWebUser" : {
            "type" : "string"
          },
          "enableSecondaryGroupAssignments" : {
            "type" : "boolean"
          },
          "vehicleId" : {
            "type" : "string"
          },
          "entityId" : {
            "type" : "string"
          }
        }
      },
      "ActivityProfile" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string"
          }
        },
        "discriminator" : {
          "propertyName" : "type"
        }
      },
      "Alert" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "customerId" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "templateName" : {
            "type" : "string"
          },
          "ownerHierarchyId" : {
            "type" : "string"
          },
          "secondaryOwnerHierarchyIds" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "createdByPersonId" : {
            "type" : "string"
          },
          "createdDateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "dynamicRuleId" : {
            "type" : "string"
          },
          "assetSelection" : {
            "$ref" : "#/components/schemas/AssetSelection"
          },
          "personSelection" : {
            "$ref" : "#/components/schemas/PersonSelection"
          },
          "activityProfile" : {
            "$ref" : "#/components/schemas/ActivityProfile"
          },
          "subscribers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Subscriber"
            }
          },
          "createdTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastModifiedTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "activityProfileIntervalType" : {
            "type" : "string"
          },
          "locale" : {
            "type" : "object",
            "properties" : {
              "language" : {
                "type" : "string"
              },
              "displayName" : {
                "type" : "string"
              },
              "country" : {
                "type" : "string"
              },
              "variant" : {
                "type" : "string"
              },
              "script" : {
                "type" : "string"
              },
              "unicodeLocaleAttributes" : {
                "uniqueItems" : true,
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "unicodeLocaleKeys" : {
                "uniqueItems" : true,
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "displayLanguage" : {
                "type" : "string"
              },
              "displayScript" : {
                "type" : "string"
              },
              "displayCountry" : {
                "type" : "string"
              },
              "displayVariant" : {
                "type" : "string"
              },
              "extensionKeys" : {
                "uniqueItems" : true,
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "iso3Language" : {
                "type" : "string"
              },
              "iso3Country" : {
                "type" : "string"
              }
            }
          },
          "unitSettings" : {
            "type" : "object",
            "properties" : {
              "empty" : {
                "type" : "boolean"
              }
            },
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "engineType" : {
            "type" : "string"
          },
          "paddingtonTimezoneId" : {
            "type" : "string"
          }
        }
      },
      "AlertDto" : {
        "type" : "object",
        "properties" : {
          "alert" : {
            "$ref" : "#/components/schemas/Alert"
          },
          "properties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          }
        }
      },
      "AssetSelection" : {
        "type" : "object",
        "properties" : {
          "hierarchyIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "assetIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "tagsFilter" : {
            "$ref" : "#/components/schemas/AssetSelectionTags"
          }
        }
      },
      "AssetSelectionTags" : {
        "type" : "object",
        "properties" : {
          "tags" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "includeWithNoTags" : {
            "type" : "boolean"
          }
        }
      },
      "Chronology" : {
        "type" : "object",
        "properties" : {
          "zone" : {
            "$ref" : "#/components/schemas/DateTimeZone"
          }
        }
      },
      "DateTimeField" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "type" : {
            "$ref" : "#/components/schemas/DateTimeFieldType"
          },
          "supported" : {
            "type" : "boolean"
          },
          "lenient" : {
            "type" : "boolean"
          },
          "durationField" : {
            "$ref" : "#/components/schemas/DurationField"
          },
          "rangeDurationField" : {
            "$ref" : "#/components/schemas/DurationField"
          },
          "leapDurationField" : {
            "$ref" : "#/components/schemas/DurationField"
          },
          "minimumValue" : {
            "type" : "integer",
            "format" : "int32"
          },
          "maximumValue" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "DateTimeFieldType" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "durationType" : {
            "$ref" : "#/components/schemas/DurationFieldType"
          },
          "rangeDurationType" : {
            "$ref" : "#/components/schemas/DurationFieldType"
          }
        }
      },
      "DateTimeZone" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "fixed" : {
            "type" : "boolean"
          }
        }
      },
      "DurationField" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "type" : {
            "$ref" : "#/components/schemas/DurationFieldType"
          },
          "supported" : {
            "type" : "boolean"
          },
          "unitMillis" : {
            "type" : "integer",
            "format" : "int64"
          },
          "precise" : {
            "type" : "boolean"
          }
        }
      },
      "DurationFieldType" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          }
        }
      },
      "EmailSubscriber" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Subscriber"
        } ]
      },
      "LocalHourMinute" : {
        "type" : "object",
        "properties" : {
          "chronology" : {
            "$ref" : "#/components/schemas/Chronology"
          },
          "localMillis" : {
            "type" : "integer",
            "format" : "int64"
          },
          "hourOfDay" : {
            "type" : "integer",
            "format" : "int32"
          },
          "minuteOfHour" : {
            "type" : "integer",
            "format" : "int32"
          },
          "fields" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DateTimeField"
            }
          },
          "values" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32"
            }
          },
          "fieldTypes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DateTimeFieldType"
            }
          }
        }
      },
      "PersonSelection" : {
        "type" : "object",
        "properties" : {
          "personIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "hierarchyIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "ProfileDateRange" : {
        "type" : "object",
        "properties" : {
          "startDateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDateTime" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "ProfileItem" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ActivityProfile"
        }, {
          "type" : "object",
          "properties" : {
            "paddingtonTimezoneId" : {
              "type" : "string"
            },
            "activeDateRange" : {
              "$ref" : "#/components/schemas/ProfileDateRange"
            },
            "activeHoursTimeRange" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/ProfileTimeRange"
              }
            }
          }
        } ]
      },
      "ProfileTimeRange" : {
        "type" : "object",
        "properties" : {
          "startTime" : {
            "$ref" : "#/components/schemas/LocalHourMinute"
          },
          "endTime" : {
            "$ref" : "#/components/schemas/LocalHourMinute"
          },
          "dayOfWeek" : {
            "type" : "string",
            "enum" : [ "SUNDAY", "MONDAY", "TUESDAY", "WEDNESDAY", "THURSDAY", "FRIDAY", "SATURDAY" ]
          }
        }
      },
      "SmsMessageStatus" : {
        "type" : "object",
        "properties" : {
          "destination" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string"
          },
          "messageId" : {
            "type" : "string"
          },
          "messageLength" : {
            "type" : "integer",
            "format" : "int32"
          },
          "httpStatus" : {
            "type" : "integer",
            "format" : "int32"
          },
          "errorCode" : {
            "type" : "string"
          },
          "errorMessage" : {
            "type" : "string"
          }
        }
      },
      "Subscriber" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "destinations" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "type" : {
            "type" : "string"
          }
        },
        "discriminator" : {
          "propertyName" : "type"
        }
      },
      "TelephoneSubscriber" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Subscriber"
        }, {
          "type" : "object",
          "properties" : {
            "results" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/SmsMessageStatus"
              }
            }
          }
        } ]
      },
      "UnitSettings" : {
        "type" : "object",
        "properties" : {
          "empty" : {
            "type" : "boolean"
          }
        },
        "additionalProperties" : {
          "type" : "string"
        }
      },
      "WebUserSubscriber" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Subscriber"
        } ]
      },
      "WithPaginationResultAlertDto" : {
        "type" : "object",
        "properties" : {
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AlertDto"
            }
          }
        }
      },
      "AlertSearchDto" : {
        "type" : "object",
        "properties" : {
          "pageIndex" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "customerId" : {
            "type" : "string"
          },
          "engineType" : {
            "type" : "string"
          },
          "templateName" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "excludePaddingtonAlerts" : {
            "type" : "boolean"
          },
          "assetSelection" : {
            "$ref" : "#/components/schemas/AssetSelection"
          },
          "personSelection" : {
            "$ref" : "#/components/schemas/PersonSelection"
          },
          "subscriberDestinations" : {
            "$ref" : "#/components/schemas/SubscriberDestinations"
          },
          "ownerHierarchyIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "SubscriberDestinations" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string"
          },
          "telephone" : {
            "type" : "string"
          },
          "webUser" : {
            "type" : "string"
          }
        }
      },
      "AppShellMenu" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "key" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "icon" : {
            "type" : "string"
          },
          "parentAppShellMenuId" : {
            "type" : "string"
          },
          "displayOrder" : {
            "type" : "integer",
            "format" : "int32"
          },
          "locales" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LocalizedName"
            }
          },
          "friendlyURL" : {
            "type" : "string"
          },
          "accountItem" : {
            "type" : "boolean"
          },
          "hideForReadOnlyAccount" : {
            "type" : "boolean"
          },
          "hideItem" : {
            "type" : "boolean"
          }
        }
      },
      "LocalizedName" : {
        "type" : "object",
        "properties" : {
          "locale" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "tooltip" : {
            "type" : "string"
          }
        }
      },
      "ThirdPartyDto" : {
        "type" : "object",
        "properties" : {
          "friendlyName" : {
            "type" : "string"
          },
          "thirdPartyUrl" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "featureKey" : {
            "type" : "string"
          }
        }
      },
      "AppShellMenuItem" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "key" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "tooltip" : {
            "type" : "string"
          },
          "icon" : {
            "type" : "string"
          },
          "children" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AppShellMenuItem"
            }
          },
          "parentAppShellMenuId" : {
            "type" : "string"
          },
          "displayOrder" : {
            "type" : "integer",
            "format" : "int32"
          },
          "feature" : {
            "$ref" : "#/components/schemas/FeatureInfo"
          },
          "friendlyURL" : {
            "type" : "string"
          },
          "hideForReadOnlyAccount" : {
            "type" : "boolean"
          },
          "hideItem" : {
            "type" : "boolean"
          },
          "accountItem" : {
            "type" : "boolean"
          }
        }
      },
      "FeatureInfo" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "origin" : {
            "type" : "string"
          },
          "messageOrigin" : {
            "type" : "string"
          },
          "path" : {
            "type" : "string"
          },
          "targetType" : {
            "type" : "string",
            "enum" : [ "LINTON_FEATURE", "ADJACENT_SERVICE_APP", "ADJACENT_SERVICE_COMPONENT" ]
          },
          "ignoreGarbageCollect" : {
            "type" : "boolean"
          },
          "sharedOrigin" : {
            "type" : "boolean"
          },
          "messagingDisabled" : {
            "type" : "boolean"
          },
          "origins" : {
            "$ref" : "#/components/schemas/OriginRegionsDto"
          },
          "messageOrigins" : {
            "$ref" : "#/components/schemas/OriginRegionsDto"
          }
        }
      },
      "OriginRegionsDto" : {
        "type" : "object",
        "properties" : {
          "default" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "eu-west-2" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "us-east-1" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "LintonMenuDto" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "keyName" : {
            "type" : "string"
          },
          "displayOrder" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "MasternauthFeatureDto" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "keyName" : {
            "type" : "string"
          },
          "modules" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ModuleDto"
            }
          },
          "displayOrder" : {
            "type" : "integer",
            "format" : "int32"
          },
          "lintonMenu" : {
            "$ref" : "#/components/schemas/LintonMenuDto"
          },
          "appShellMenu" : {
            "$ref" : "#/components/schemas/AppShellMenu"
          },
          "appShellDisplayOrder" : {
            "type" : "integer",
            "format" : "int32"
          },
          "targetType" : {
            "type" : "integer",
            "format" : "int32"
          },
          "parentFeatureIdentifier" : {
            "type" : "string"
          },
          "origin" : {
            "type" : "string"
          },
          "messageOrigin" : {
            "type" : "string"
          },
          "path" : {
            "type" : "string"
          },
          "ignoreGarbageCollect" : {
            "type" : "boolean"
          },
          "locked" : {
            "type" : "boolean"
          },
          "locales" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LocalizedName"
            }
          },
          "sharedOrigin" : {
            "type" : "boolean"
          },
          "messagingDisabled" : {
            "type" : "boolean"
          },
          "origins" : {
            "$ref" : "#/components/schemas/OriginRegionsDto"
          },
          "messageOrigins" : {
            "$ref" : "#/components/schemas/OriginRegionsDto"
          }
        }
      },
      "ModuleDto" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "LinkAppShellMenuRequestDto" : {
        "type" : "object",
        "properties" : {
          "origin" : {
            "type" : "string"
          },
          "messageOrigin" : {
            "type" : "string"
          },
          "path" : {
            "type" : "string"
          },
          "targetType" : {
            "type" : "integer",
            "format" : "int32"
          },
          "ignoreGarbageCollect" : {
            "type" : "boolean"
          }
        }
      },
      "Coordinate" : {
        "type" : "object",
        "properties" : {
          "longitude" : {
            "type" : "number",
            "format" : "double"
          },
          "latitude" : {
            "type" : "number",
            "format" : "double"
          }
        }
      },
      "TaxAndExpenseJourneyDetailResultDto" : {
        "type" : "object",
        "properties" : {
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "vehicleId" : {
            "type" : "string"
          },
          "vehicleRegistration" : {
            "type" : "string"
          },
          "vehicleName" : {
            "type" : "string"
          },
          "vehicleGroupId" : {
            "type" : "string"
          },
          "vehicleGroupName" : {
            "type" : "string"
          },
          "driverId" : {
            "type" : "string"
          },
          "driverName" : {
            "type" : "string"
          },
          "driverGroupId" : {
            "type" : "string"
          },
          "driverGroupName" : {
            "type" : "string"
          },
          "durationSeconds" : {
            "type" : "integer",
            "format" : "int64"
          },
          "distanceKms" : {
            "type" : "number",
            "format" : "double"
          },
          "startAddress" : {
            "type" : "string"
          },
          "endAddress" : {
            "type" : "string"
          },
          "startCoordinate" : {
            "$ref" : "#/components/schemas/Coordinate"
          },
          "endCoordinate" : {
            "$ref" : "#/components/schemas/Coordinate"
          },
          "classification" : {
            "type" : "string"
          },
          "notes" : {
            "type" : "string"
          },
          "startOdometer" : {
            "type" : "number",
            "format" : "double"
          },
          "endOdometer" : {
            "type" : "number",
            "format" : "double"
          }
        }
      },
      "WithPaginationResultTaxAndExpenseJourneyDetailResultDto" : {
        "type" : "object",
        "properties" : {
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TaxAndExpenseJourneyDetailResultDto"
            }
          }
        }
      },
      "DateRange" : {
        "type" : "object",
        "properties" : {
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "TaxAndExpenseJourneyDetailRequestDto" : {
        "type" : "object",
        "properties" : {
          "pageIndex" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "vehicleIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "driverIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "groupId" : {
            "type" : "string"
          },
          "classifications" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "dateRange" : {
            "$ref" : "#/components/schemas/DateRange"
          }
        }
      },
      "TaxAndExpenseJourneySummaryDriverResultDto" : {
        "type" : "object",
        "properties" : {
          "groupId" : {
            "type" : "string"
          },
          "groupName" : {
            "type" : "string"
          },
          "distanceKm" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "number",
              "format" : "double"
            }
          },
          "driverId" : {
            "type" : "string"
          },
          "driverName" : {
            "type" : "string"
          }
        }
      },
      "TaxAndExpenseManagerSummaryResultDtoTaxAndExpenseJourneySummaryDriverResultDto" : {
        "type" : "object",
        "properties" : {
          "journeyCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalSummaryDistanceKm" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "number",
              "format" : "double"
            }
          },
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TaxAndExpenseJourneySummaryDriverResultDto"
            }
          }
        }
      },
      "TaxAndExpenseJourneySummaryDriverRequestDto" : {
        "type" : "object",
        "properties" : {
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "groupId" : {
            "type" : "string"
          },
          "classifications" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "driverIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "dateRange" : {
            "$ref" : "#/components/schemas/DateRange"
          }
        }
      },
      "TaxAndExpenseJourneySummaryVehicleResultDto" : {
        "type" : "object",
        "properties" : {
          "groupId" : {
            "type" : "string"
          },
          "groupName" : {
            "type" : "string"
          },
          "distanceKm" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "number",
              "format" : "double"
            }
          },
          "vehicleId" : {
            "type" : "string"
          },
          "vehicleRegistration" : {
            "type" : "string"
          },
          "vehicleName" : {
            "type" : "string"
          }
        }
      },
      "TaxAndExpenseManagerSummaryResultDtoTaxAndExpenseJourneySummaryVehicleResultDto" : {
        "type" : "object",
        "properties" : {
          "journeyCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalSummaryDistanceKm" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "number",
              "format" : "double"
            }
          },
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TaxAndExpenseJourneySummaryVehicleResultDto"
            }
          }
        }
      },
      "TaxAndExpenseJourneySummaryVehicleRequestDto" : {
        "type" : "object",
        "properties" : {
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "groupId" : {
            "type" : "string"
          },
          "classifications" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "vehicleIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "dateRange" : {
            "$ref" : "#/components/schemas/DateRange"
          }
        }
      },
      "DeviceDetails" : {
        "type" : "object",
        "properties" : {
          "customerId" : {
            "type" : "string"
          },
          "assetId" : {
            "type" : "string"
          },
          "hierarchyId" : {
            "type" : "string"
          },
          "imei" : {
            "type" : "string"
          },
          "simNumber" : {
            "type" : "string"
          },
          "serialNumber" : {
            "type" : "string"
          }
        }
      },
      "DeviceRegistrationDto" : {
        "type" : "object",
        "properties" : {
          "simNumber" : {
            "type" : "string"
          },
          "serialNumber" : {
            "type" : "string"
          }
        }
      },
      "BehaviourAlert" : {
        "type" : "object",
        "properties" : {
          "threshold" : {
            "type" : "number",
            "format" : "double"
          },
          "maxValue" : {
            "type" : "number",
            "format" : "double"
          },
          "averageValue" : {
            "type" : "number",
            "format" : "double"
          },
          "duration" : {
            "type" : "number",
            "format" : "double"
          }
        }
      },
      "DeviceTrackingFrame" : {
        "type" : "object",
        "properties" : {
          "eventCode" : {
            "type" : "integer",
            "format" : "int32"
          },
          "eventDateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "coordinate" : {
            "$ref" : "#/components/schemas/Coordinate"
          },
          "movement" : {
            "$ref" : "#/components/schemas/Movement"
          },
          "behaviourAlert" : {
            "$ref" : "#/components/schemas/BehaviourAlert"
          },
          "journey" : {
            "$ref" : "#/components/schemas/Journey"
          }
        }
      },
      "Journey" : {
        "type" : "object",
        "properties" : {
          "gpsDistance" : {
            "type" : "number",
            "format" : "double"
          },
          "canDistance" : {
            "type" : "number",
            "format" : "double"
          },
          "gpsOrCanDistance" : {
            "type" : "number",
            "format" : "double"
          },
          "fuelUsed" : {
            "type" : "number",
            "format" : "double"
          },
          "co2" : {
            "type" : "number",
            "format" : "double"
          },
          "evConsumptionKwh" : {
            "type" : "number",
            "format" : "float"
          },
          "gasConsumptionKg" : {
            "type" : "number",
            "format" : "float"
          },
          "fuelUsedDuringIdlingLiters" : {
            "type" : "number",
            "format" : "float"
          }
        }
      },
      "Movement" : {
        "type" : "object",
        "properties" : {
          "speed" : {
            "type" : "number",
            "format" : "float"
          },
          "direction" : {
            "type" : "number",
            "format" : "float"
          }
        }
      },
      "DriverDto" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "pattern" : "^[\\w]*$",
            "type" : "string"
          },
          "customerId" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "active" : {
            "type" : "boolean"
          },
          "activeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "groupId" : {
            "type" : "string"
          },
          "groupName" : {
            "type" : "string"
          },
          "defaultVehicleId" : {
            "type" : "string"
          },
          "tempVehicleId" : {
            "type" : "string"
          },
          "tempVehicleExpiry" : {
            "type" : "string",
            "format" : "date-time"
          },
          "tempVehicleNextJourneyOnly" : {
            "type" : "boolean"
          },
          "tempPrivateMode" : {
            "type" : "boolean"
          },
          "tempPrivateModeExpiry" : {
            "type" : "string",
            "format" : "date-time"
          },
          "tempPrivateModeNextJourneyOnly" : {
            "type" : "boolean"
          },
          "autoCreated" : {
            "type" : "boolean"
          },
          "keys" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DriverKeyDto"
            }
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "secondaryGroups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/IdNameDto"
            }
          },
          "externalId" : {
            "pattern" : "^[a-zA-Z0-9]{0,25}$|",
            "type" : "string"
          }
        }
      },
      "DriverKeyDto" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "privateMode" : {
            "type" : "boolean"
          }
        }
      },
      "IdNameDto" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "UserCreateResponseDto" : {
        "type" : "object",
        "properties" : {
          "token" : {
            "type" : "string"
          },
          "expiryTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "user" : {
            "$ref" : "#/components/schemas/UserDto"
          }
        }
      },
      "UserDto" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "customerId" : {
            "type" : "string"
          },
          "userName" : {
            "type" : "string"
          },
          "externalIdentifier" : {
            "type" : "string"
          },
          "fullName" : {
            "type" : "string"
          },
          "emailAddress" : {
            "type" : "string"
          },
          "language" : {
            "type" : "object",
            "properties" : {
              "language" : {
                "type" : "string"
              },
              "displayName" : {
                "type" : "string"
              },
              "country" : {
                "type" : "string"
              },
              "variant" : {
                "type" : "string"
              },
              "script" : {
                "type" : "string"
              },
              "unicodeLocaleAttributes" : {
                "uniqueItems" : true,
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "unicodeLocaleKeys" : {
                "uniqueItems" : true,
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "displayLanguage" : {
                "type" : "string"
              },
              "displayScript" : {
                "type" : "string"
              },
              "displayCountry" : {
                "type" : "string"
              },
              "displayVariant" : {
                "type" : "string"
              },
              "extensionKeys" : {
                "uniqueItems" : true,
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "iso3Language" : {
                "type" : "string"
              },
              "iso3Country" : {
                "type" : "string"
              }
            }
          },
          "timezone" : {
            "type" : "string"
          },
          "roleId" : {
            "type" : "string"
          },
          "roleName" : {
            "type" : "string"
          },
          "groupId" : {
            "type" : "string"
          },
          "groupName" : {
            "type" : "string"
          },
          "unitPreferences" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "sendWelcomeEmail" : {
            "type" : "boolean"
          },
          "secondaryGroups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/IdNameDto"
            }
          }
        }
      },
      "DriverSearchResultDto" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "groupId" : {
            "type" : "string"
          },
          "groupName" : {
            "type" : "string"
          },
          "customerId" : {
            "type" : "string"
          },
          "active" : {
            "type" : "boolean"
          },
          "activeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "timezoneId" : {
            "type" : "string"
          },
          "defaultVehicleId" : {
            "type" : "string"
          },
          "tempVehicleId" : {
            "type" : "string"
          },
          "tempVehicleExpiry" : {
            "type" : "string",
            "format" : "date-time"
          },
          "tempVehicleNextJourneyOnly" : {
            "type" : "boolean"
          },
          "tempPrivateMode" : {
            "type" : "boolean"
          },
          "tempPrivateModeExpiry" : {
            "type" : "string",
            "format" : "date-time"
          },
          "tempPrivateModeNextJourneyOnly" : {
            "type" : "boolean"
          },
          "keys" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DriverKeyDto"
            }
          },
          "tags" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "secondaryGroups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/IdNameDto"
            }
          },
          "externalId" : {
            "type" : "string"
          }
        }
      },
      "WithPaginationResultDriverSearchResultDto" : {
        "type" : "object",
        "properties" : {
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DriverSearchResultDto"
            }
          }
        }
      },
      "DriverSearchRequestDto" : {
        "type" : "object",
        "properties" : {
          "pageIndex" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string"
          },
          "groupId" : {
            "type" : "string"
          },
          "groupName" : {
            "type" : "string"
          },
          "active" : {
            "type" : "boolean"
          },
          "defaultVehicleId" : {
            "type" : "string"
          },
          "keys" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "AssetDto" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "registration" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "make" : {
            "type" : "string"
          },
          "model" : {
            "type" : "string"
          },
          "version" : {
            "type" : "string"
          },
          "tags" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "currentOdometer" : {
            "$ref" : "#/components/schemas/OdometerReading"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "IN_CIRCULATION", "IN_MAINTENANCE", "SOLD" ]
          },
          "primaryFuelSource" : {
            "$ref" : "#/components/schemas/FuelSource"
          },
          "secondaryFuelSource" : {
            "$ref" : "#/components/schemas/FuelSource"
          },
          "energy" : {
            "type" : "string",
            "enum" : [ "ICE", "EV", "HEV", "PHEV", "CNG", "LNG", "LPG", "FCEV", "BI_FUEL", "UNDEFINED" ]
          },
          "groupId" : {
            "type" : "string"
          },
          "groupName" : {
            "type" : "string"
          },
          "latestEvents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TrackingLiveInputEventOverviewDto"
            }
          }
        }
      },
      "AssignedVehicleDto" : {
        "type" : "object",
        "properties" : {
          "assignedVehicleType" : {
            "type" : "string",
            "enum" : [ "TEMPORARY", "DEFAULT", "NONE" ]
          },
          "vehicle" : {
            "$ref" : "#/components/schemas/AssetDto"
          },
          "trackingLive" : {
            "$ref" : "#/components/schemas/TrackingLiveDto"
          }
        }
      },
      "FuelSource" : {
        "type" : "object",
        "properties" : {
          "fuelType" : {
            "type" : "string",
            "enum" : [ "PETROL", "DIESEL", "METHANE", "PROPANE", "HYDROGEN", "ELECTRIC" ]
          },
          "fuelCapacity" : {
            "type" : "number",
            "format" : "float"
          },
          "averageConsumption" : {
            "type" : "number",
            "format" : "float"
          },
          "averageRangeKm" : {
            "type" : "number",
            "format" : "float"
          }
        }
      },
      "OdometerReading" : {
        "type" : "object",
        "properties" : {
          "kms" : {
            "type" : "number",
            "format" : "double"
          },
          "readingDateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "CAN", "GPS", "DO_NOT_APPLY_ODOMETER_FILTER", "ALL_WITH_ODOMETERS" ]
          },
          "odometerKmsLastModified" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "TrackingLiveDto" : {
        "type" : "object",
        "properties" : {
          "date" : {
            "type" : "string",
            "format" : "date-time"
          },
          "status" : {
            "type" : "string"
          },
          "eventType" : {
            "type" : "string"
          },
          "speed" : {
            "type" : "number",
            "format" : "double"
          },
          "odometer" : {
            "type" : "number",
            "format" : "double"
          },
          "heading" : {
            "type" : "number",
            "format" : "double"
          },
          "latitude" : {
            "type" : "number",
            "format" : "double"
          },
          "longitude" : {
            "type" : "number",
            "format" : "double"
          },
          "road" : {
            "type" : "string"
          },
          "roadNumber" : {
            "type" : "string"
          },
          "city" : {
            "type" : "string"
          },
          "postCode" : {
            "type" : "string"
          },
          "country" : {
            "type" : "string"
          },
          "formattedAddress" : {
            "type" : "string"
          },
          "locationName" : {
            "type" : "string"
          },
          "locationGroupName" : {
            "type" : "string"
          },
          "locationId" : {
            "type" : "string"
          },
          "privacy" : {
            "type" : "boolean"
          },
          "electricRangeKm" : {
            "type" : "number",
            "format" : "float"
          },
          "electricRangeKmEstimated" : {
            "type" : "boolean"
          },
          "electricBatteryLevelPercent" : {
            "type" : "number",
            "format" : "float"
          },
          "electricBatteryLevelPercentEstimated" : {
            "type" : "boolean"
          },
          "electricCharging" : {
            "type" : "boolean"
          },
          "electricChargingTimeRemainingMins" : {
            "type" : "number",
            "format" : "float"
          },
          "engineTotalHoursType" : {
            "type" : "string",
            "enum" : [ "CAN", "ESTIMATED" ]
          },
          "engineTotalHours" : {
            "type" : "number",
            "format" : "float"
          }
        }
      },
      "TrackingLiveInputEventChannelOverviewDto" : {
        "type" : "object",
        "properties" : {
          "label" : {
            "type" : "string"
          },
          "unit" : {
            "type" : "string"
          },
          "value" : {
            "type" : "object"
          },
          "stringValue" : {
            "type" : "string"
          },
          "order" : {
            "type" : "integer",
            "format" : "int32"
          },
          "groupNumber" : {
            "type" : "integer",
            "format" : "int32"
          },
          "key" : {
            "type" : "string"
          },
          "coldReadyState" : {
            "type" : "boolean"
          }
        }
      },
      "TrackingLiveInputEventOverviewDto" : {
        "type" : "object",
        "properties" : {
          "eventDateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "eventKey" : {
            "type" : "string"
          },
          "eventLabel" : {
            "type" : "string"
          },
          "channels" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TrackingLiveInputEventChannelOverviewDto"
            }
          }
        }
      },
      "MasternauthUserInvitationBulkResponseDto" : {
        "type" : "object",
        "properties" : {
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MasternauthUserInvitationResult"
            }
          }
        }
      },
      "MasternauthUserInvitationResult" : {
        "type" : "object",
        "properties" : {
          "personId" : {
            "type" : "string"
          },
          "error" : {
            "type" : "string"
          }
        }
      },
      "UserInvitationDto" : {
        "required" : [ "customerId", "locale", "personId", "roleId", "type", "userName" ],
        "type" : "object",
        "properties" : {
          "customerId" : {
            "type" : "string"
          },
          "personId" : {
            "type" : "string"
          },
          "userName" : {
            "type" : "string"
          },
          "driverName" : {
            "type" : "string"
          },
          "groupId" : {
            "type" : "string"
          },
          "emailAddress" : {
            "type" : "string"
          },
          "mobile" : {
            "pattern" : "^([+][0-9]{1,20})?$",
            "type" : "string"
          },
          "roleId" : {
            "type" : "string"
          },
          "locale" : {
            "type" : "object",
            "properties" : {
              "language" : {
                "type" : "string"
              },
              "displayName" : {
                "type" : "string"
              },
              "country" : {
                "type" : "string"
              },
              "variant" : {
                "type" : "string"
              },
              "script" : {
                "type" : "string"
              },
              "unicodeLocaleAttributes" : {
                "uniqueItems" : true,
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "unicodeLocaleKeys" : {
                "uniqueItems" : true,
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "displayLanguage" : {
                "type" : "string"
              },
              "displayScript" : {
                "type" : "string"
              },
              "displayCountry" : {
                "type" : "string"
              },
              "displayVariant" : {
                "type" : "string"
              },
              "extensionKeys" : {
                "uniqueItems" : true,
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "iso3Language" : {
                "type" : "string"
              },
              "iso3Country" : {
                "type" : "string"
              }
            }
          },
          "type" : {
            "type" : "string",
            "enum" : [ "WEB", "MOBILE" ]
          }
        }
      },
      "BehaviourMetricPersonRankingDto" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "rankInGroup" : {
            "$ref" : "#/components/schemas/BehaviourMetricRankDto"
          },
          "rankInCustomer" : {
            "$ref" : "#/components/schemas/BehaviourMetricRankDto"
          }
        }
      },
      "BehaviourMetricRankDto" : {
        "type" : "object",
        "properties" : {
          "rank" : {
            "type" : "integer",
            "format" : "int32"
          },
          "activeDriverCount" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "DriverBehaviourPersonMetricsRequest" : {
        "type" : "object",
        "properties" : {
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "keys" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "includeTopHierarchy" : {
            "type" : "boolean"
          },
          "driverId" : {
            "type" : "string"
          }
        }
      },
      "DrivingBehaviourSummaryDto" : {
        "type" : "object",
        "properties" : {
          "fuel" : {
            "type" : "number",
            "format" : "double"
          },
          "stops" : {
            "type" : "integer",
            "format" : "int32"
          },
          "harshBraking" : {
            "type" : "integer",
            "format" : "int64"
          },
          "harshAcceleration" : {
            "type" : "integer",
            "format" : "int64"
          },
          "idleTime" : {
            "type" : "integer",
            "format" : "int64"
          },
          "ptoIdle" : {
            "type" : "integer",
            "format" : "int64"
          },
          "distanceKm" : {
            "type" : "number",
            "format" : "double"
          },
          "speedingKms" : {
            "type" : "number",
            "format" : "double"
          },
          "countOfSpeedingEpisodes" : {
            "type" : "integer",
            "format" : "int32"
          },
          "driveTime" : {
            "type" : "integer",
            "format" : "int64"
          },
          "harshEvents" : {
            "type" : "integer",
            "format" : "int64"
          },
          "drivePlusIdleTime" : {
            "type" : "integer",
            "format" : "int64"
          },
          "smootherHarshPer100km" : {
            "type" : "number",
            "format" : "double"
          },
          "smootherPercentage" : {
            "type" : "number",
            "format" : "double"
          },
          "safeSpeedPercentage" : {
            "type" : "number",
            "format" : "double"
          },
          "cleanerPercentage" : {
            "type" : "number",
            "format" : "double"
          },
          "groupId" : {
            "type" : "string"
          },
          "groupName" : {
            "type" : "string"
          },
          "totalCo2Kg" : {
            "type" : "number",
            "format" : "double"
          },
          "co2gPerKm" : {
            "type" : "number",
            "format" : "double"
          },
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "vehicleRegistration" : {
            "type" : "string"
          },
          "vehicleName" : {
            "type" : "string"
          },
          "vehicleId" : {
            "type" : "string"
          },
          "driverName" : {
            "type" : "string"
          },
          "driverId" : {
            "type" : "string"
          },
          "energyType" : {
            "type" : "string",
            "enum" : [ "ICE", "EV", "HEV", "PHEV", "CNG", "LNG", "LPG", "FCEV", "BI_FUEL", "UNDEFINED" ]
          },
          "fuelType" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "PETROL", "DIESEL", "METHANE", "PROPANE", "HYDROGEN", "ELECTRIC" ]
            }
          },
          "fuelUsedPetrolEquivalentLitres" : {
            "type" : "number",
            "format" : "double"
          },
          "gasUsedKg" : {
            "type" : "number",
            "format" : "double"
          },
          "electricUsedkWh" : {
            "type" : "number",
            "format" : "double"
          },
          "fuelUsedLitres" : {
            "type" : "number",
            "format" : "double"
          }
        }
      },
      "WithPaginationResultDrivingBehaviourSummaryDto" : {
        "type" : "object",
        "properties" : {
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DrivingBehaviourSummaryDto"
            }
          }
        }
      },
      "DriverBehaviourSummaryRequestDto" : {
        "type" : "object",
        "properties" : {
          "pageIndex" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "driverId" : {
            "type" : "string"
          },
          "groupId" : {
            "type" : "string"
          },
          "vehicleId" : {
            "type" : "string"
          }
        }
      },
      "BehaviourMetricDto" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "value" : {
            "type" : "number",
            "format" : "double"
          },
          "previousValue" : {
            "type" : "number",
            "format" : "double"
          }
        }
      },
      "GroupBehaviourMetricRequestDto" : {
        "type" : "object",
        "properties" : {
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "keys" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "timeZone" : {
            "type" : "string"
          },
          "hierarchyNodeId" : {
            "type" : "string"
          }
        }
      },
      "BehaviourMetricDailyDto" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "value" : {
            "type" : "number",
            "format" : "double"
          },
          "previousValue" : {
            "type" : "number",
            "format" : "double"
          },
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "DriverBehaviourMetricRequestDto" : {
        "type" : "object",
        "properties" : {
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "keys" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "timeZone" : {
            "type" : "string"
          },
          "driverId" : {
            "type" : "string"
          }
        }
      },
      "BehaviourMetricRequestDto" : {
        "type" : "object",
        "properties" : {
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "keys" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "timeZone" : {
            "type" : "string"
          }
        }
      },
      "DriverSummaryWithAssetsDto" : {
        "type" : "object",
        "properties" : {
          "numberOfEngineOverRevvingEvents" : {
            "type" : "integer",
            "format" : "int64"
          },
          "numberOfSpeedingEvents" : {
            "type" : "integer",
            "format" : "int64"
          },
          "numberOfHarshAccelerationEvents" : {
            "type" : "integer",
            "format" : "int64"
          },
          "numberOfHarshBrakingEvents" : {
            "type" : "integer",
            "format" : "int64"
          },
          "numberOfHarshCorneringEvents" : {
            "type" : "integer",
            "format" : "int64"
          },
          "numberOfExcessiveIdlingOutsideBaseEvents" : {
            "type" : "integer",
            "format" : "int64"
          },
          "numberOfExcessiveIdlingInsideBaseEvents" : {
            "type" : "integer",
            "format" : "int64"
          },
          "scoreForNumberOfEngineOverRevvingEvents" : {
            "type" : "integer",
            "format" : "int64"
          },
          "scoreForNumberOfSpeedingEvents" : {
            "type" : "integer",
            "format" : "int64"
          },
          "scoreForNumberOfHarshAccelerationEvents" : {
            "type" : "integer",
            "format" : "int64"
          },
          "scoreForNumberOfHarshBrakingEvents" : {
            "type" : "integer",
            "format" : "int64"
          },
          "scoreForNumberOfHarshCorneringEvents" : {
            "type" : "integer",
            "format" : "int64"
          },
          "scoreForNumberOfExcessiveIdlingOutsideBaseEvents" : {
            "type" : "integer",
            "format" : "int64"
          },
          "scoreForNumberOfExcessiveIdlingInsideBaseEvents" : {
            "type" : "integer",
            "format" : "int64"
          },
          "scorePerHour" : {
            "type" : "number",
            "format" : "double"
          },
          "durationSeconds" : {
            "type" : "integer",
            "format" : "int64"
          },
          "groupName" : {
            "type" : "string"
          },
          "groupId" : {
            "type" : "string"
          },
          "groupRank" : {
            "type" : "integer",
            "format" : "int32"
          },
          "entityInGroup" : {
            "type" : "integer",
            "format" : "int32"
          },
          "driverName" : {
            "type" : "string"
          },
          "driverId" : {
            "type" : "string"
          }
        }
      },
      "EcoScorePersonResponseDto" : {
        "type" : "object",
        "properties" : {
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DriverSummaryWithAssetsDto"
            }
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "EcoScoreDriverRequestDto" : {
        "type" : "object",
        "properties" : {
          "pageIndex" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "groupId" : {
            "type" : "string"
          },
          "driverId" : {
            "type" : "string"
          },
          "dateRange" : {
            "$ref" : "#/components/schemas/DateRange"
          }
        }
      },
      "Address" : {
        "type" : "object",
        "properties" : {
          "formattedAddress" : {
            "type" : "string"
          },
          "road" : {
            "type" : "string"
          },
          "roadNumber" : {
            "type" : "string"
          },
          "city" : {
            "type" : "string"
          },
          "postCode" : {
            "type" : "string"
          },
          "country" : {
            "type" : "string"
          },
          "roadSpeedKph" : {
            "type" : "number",
            "format" : "float"
          },
          "roadType" : {
            "type" : "string"
          },
          "speedLimitType" : {
            "type" : "integer",
            "format" : "int32"
          },
          "countryIsoCode" : {
            "type" : "string"
          },
          "division" : {
            "type" : "string"
          },
          "subDivision" : {
            "type" : "string"
          },
          "privateRoadMinSpeedLimit" : {
            "type" : "number",
            "format" : "float"
          },
          "divisionIsoCode" : {
            "type" : "string"
          },
          "subDivisionIsoCode" : {
            "type" : "string"
          },
          "private" : {
            "type" : "boolean"
          }
        }
      },
      "EcoScoreEventResponseDto" : {
        "type" : "object",
        "properties" : {
          "vehicleRegistration" : {
            "type" : "string"
          },
          "vehicleName" : {
            "type" : "string"
          },
          "vehicleId" : {
            "type" : "string"
          },
          "driverName" : {
            "type" : "string"
          },
          "driverId" : {
            "type" : "string"
          },
          "vehicleGroupName" : {
            "type" : "string"
          },
          "vehicleGroupId" : {
            "type" : "string"
          },
          "driverGroupName" : {
            "type" : "string"
          },
          "driverGroupId" : {
            "type" : "string"
          },
          "eventType" : {
            "type" : "string"
          },
          "eventDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "address" : {
            "$ref" : "#/components/schemas/Address"
          },
          "coordinate" : {
            "$ref" : "#/components/schemas/Coordinate"
          },
          "eventDurationMs" : {
            "type" : "number",
            "format" : "double"
          },
          "speedKph" : {
            "type" : "number",
            "format" : "double"
          },
          "maximumRecordedSpeedKph" : {
            "type" : "number",
            "format" : "double"
          },
          "rateOfAcceleration" : {
            "type" : "number",
            "format" : "double"
          },
          "rateOfLateralAcceleration" : {
            "type" : "number",
            "format" : "double"
          },
          "rateOfDeceleration" : {
            "type" : "number",
            "format" : "double"
          },
          "durationInSeconds" : {
            "type" : "number",
            "format" : "double"
          },
          "maximumRecordedRPM" : {
            "type" : "number",
            "format" : "double"
          },
          "locationId" : {
            "type" : "string"
          },
          "locationName" : {
            "type" : "string"
          },
          "locationCategoryId" : {
            "type" : "string"
          },
          "locationCategoryName" : {
            "type" : "string"
          },
          "isAtBaseLocation" : {
            "type" : "boolean"
          },
          "idlingFidelity" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "WithPaginationResultEcoScoreEventResponseDto" : {
        "type" : "object",
        "properties" : {
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EcoScoreEventResponseDto"
            }
          }
        }
      },
      "DriverBehaviourEventDateRange" : {
        "type" : "object",
        "properties" : {
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "dateType" : {
            "type" : "string",
            "enum" : [ "EVENT_START_DATE_TIME", "CREATED_TIME" ]
          },
          "supportedDateTypes" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "EVENT_START_DATE_TIME", "CREATED_TIME" ]
            }
          }
        }
      },
      "EcoScoreEventDriverRequestDto" : {
        "type" : "object",
        "properties" : {
          "pageIndex" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "dateType" : {
            "type" : "string"
          },
          "groupId" : {
            "type" : "string"
          },
          "eventFilter" : {
            "type" : "string"
          },
          "driverId" : {
            "type" : "string"
          },
          "dateRange" : {
            "$ref" : "#/components/schemas/DriverBehaviourEventDateRange"
          }
        }
      },
      "EcoScoreEventVehicleRequestDto" : {
        "type" : "object",
        "properties" : {
          "pageIndex" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "dateType" : {
            "type" : "string"
          },
          "groupId" : {
            "type" : "string"
          },
          "eventFilter" : {
            "type" : "string"
          },
          "vehicleId" : {
            "type" : "string"
          },
          "dateRange" : {
            "$ref" : "#/components/schemas/DriverBehaviourEventDateRange"
          }
        }
      },
      "AssetSummaryWithDriversDto" : {
        "type" : "object",
        "properties" : {
          "numberOfEngineOverRevvingEvents" : {
            "type" : "integer",
            "format" : "int64"
          },
          "numberOfSpeedingEvents" : {
            "type" : "integer",
            "format" : "int64"
          },
          "numberOfHarshAccelerationEvents" : {
            "type" : "integer",
            "format" : "int64"
          },
          "numberOfHarshBrakingEvents" : {
            "type" : "integer",
            "format" : "int64"
          },
          "numberOfHarshCorneringEvents" : {
            "type" : "integer",
            "format" : "int64"
          },
          "numberOfExcessiveIdlingOutsideBaseEvents" : {
            "type" : "integer",
            "format" : "int64"
          },
          "numberOfExcessiveIdlingInsideBaseEvents" : {
            "type" : "integer",
            "format" : "int64"
          },
          "scoreForNumberOfEngineOverRevvingEvents" : {
            "type" : "integer",
            "format" : "int64"
          },
          "scoreForNumberOfSpeedingEvents" : {
            "type" : "integer",
            "format" : "int64"
          },
          "scoreForNumberOfHarshAccelerationEvents" : {
            "type" : "integer",
            "format" : "int64"
          },
          "scoreForNumberOfHarshBrakingEvents" : {
            "type" : "integer",
            "format" : "int64"
          },
          "scoreForNumberOfHarshCorneringEvents" : {
            "type" : "integer",
            "format" : "int64"
          },
          "scoreForNumberOfExcessiveIdlingOutsideBaseEvents" : {
            "type" : "integer",
            "format" : "int64"
          },
          "scoreForNumberOfExcessiveIdlingInsideBaseEvents" : {
            "type" : "integer",
            "format" : "int64"
          },
          "scorePerHour" : {
            "type" : "number",
            "format" : "double"
          },
          "durationSeconds" : {
            "type" : "integer",
            "format" : "int64"
          },
          "groupName" : {
            "type" : "string"
          },
          "groupId" : {
            "type" : "string"
          },
          "groupRank" : {
            "type" : "integer",
            "format" : "int32"
          },
          "entityInGroup" : {
            "type" : "integer",
            "format" : "int32"
          },
          "assetRegistration" : {
            "type" : "string"
          },
          "assetName" : {
            "type" : "string"
          },
          "assetId" : {
            "type" : "string"
          }
        }
      },
      "EcoScoreVehicleResponseDto" : {
        "type" : "object",
        "properties" : {
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AssetSummaryWithDriversDto"
            }
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "EcoScoreVehicleRequestDto" : {
        "type" : "object",
        "properties" : {
          "pageIndex" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "groupId" : {
            "type" : "string"
          },
          "vehicleId" : {
            "type" : "string"
          },
          "dateRange" : {
            "$ref" : "#/components/schemas/DateRange"
          }
        }
      },
      "LatestEcoScoreEventDetailsVehicleDto" : {
        "type" : "object",
        "properties" : {
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EcoScoreEventResponseDto"
            }
          },
          "processedDateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "LatestEcoScoreEventVehicleRequestDto" : {
        "required" : [ "modifiedSinceDate" ],
        "type" : "object",
        "properties" : {
          "vehicleId" : {
            "type" : "string"
          },
          "groupId" : {
            "type" : "string"
          },
          "modifiedSinceDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "eventFilter" : {
            "type" : "string"
          }
        }
      },
      "EcodriveDriverScoreDto" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "score" : {
            "type" : "number",
            "format" : "double"
          }
        }
      },
      "EcodriveDriversScoreDto" : {
        "type" : "object",
        "properties" : {
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "driversScore" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EcodriveDriverScoreDto"
            }
          }
        }
      },
      "EcodriveDriversScoreResultDto" : {
        "type" : "object",
        "properties" : {
          "scoresAggregatedByDay" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EcodriveDriversScoreDto"
            }
          },
          "scoresAggregatedByWeek" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EcodriveDriversScoreDto"
            }
          },
          "scoresAggregatedByMonth" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EcodriveDriversScoreDto"
            }
          }
        }
      },
      "EcodriveDriversScoreRequestDto" : {
        "type" : "object",
        "properties" : {
          "date" : {
            "type" : "string",
            "format" : "date-time"
          },
          "userTimezone" : {
            "type" : "string"
          },
          "locale" : {
            "type" : "object",
            "properties" : {
              "language" : {
                "type" : "string"
              },
              "displayName" : {
                "type" : "string"
              },
              "country" : {
                "type" : "string"
              },
              "variant" : {
                "type" : "string"
              },
              "script" : {
                "type" : "string"
              },
              "unicodeLocaleAttributes" : {
                "uniqueItems" : true,
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "unicodeLocaleKeys" : {
                "uniqueItems" : true,
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "displayLanguage" : {
                "type" : "string"
              },
              "displayScript" : {
                "type" : "string"
              },
              "displayCountry" : {
                "type" : "string"
              },
              "displayVariant" : {
                "type" : "string"
              },
              "extensionKeys" : {
                "uniqueItems" : true,
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "iso3Language" : {
                "type" : "string"
              },
              "iso3Country" : {
                "type" : "string"
              }
            }
          },
          "days" : {
            "type" : "integer",
            "format" : "int32"
          },
          "weeks" : {
            "type" : "integer",
            "format" : "int32"
          },
          "months" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "EcodriveJourneySummaryDto" : {
        "type" : "object",
        "properties" : {
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "fuelConsumptionLitresPer100Km" : {
            "type" : "number",
            "format" : "double"
          }
        }
      },
      "EcodriveScoreSummaryDto" : {
        "type" : "object",
        "properties" : {
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "score" : {
            "type" : "number",
            "format" : "double"
          },
          "distance" : {
            "type" : "number",
            "format" : "double"
          },
          "totalEngineOverRewingEvents" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalSpeedingEvents" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalHarshAccelerationEvents" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalHarshBreakingEvents" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalHarshCorneringEvents" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalIdlingInsideEvents" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalIdlingOutsideEvents" : {
            "type" : "integer",
            "format" : "int64"
          },
          "groupMinScore" : {
            "type" : "number",
            "format" : "double"
          },
          "groupMaxScore" : {
            "type" : "number",
            "format" : "double"
          },
          "groupAvgScore" : {
            "type" : "number",
            "format" : "double"
          },
          "rank" : {
            "type" : "string"
          },
          "fuelConsumptionLitresPer100Km" : {
            "type" : "number",
            "format" : "double"
          },
          "co2EmissionsKg" : {
            "type" : "number",
            "format" : "double"
          }
        }
      },
      "EcodriveSummaryResultDto" : {
        "type" : "object",
        "properties" : {
          "scoresAggregatedByDay" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EcodriveScoreSummaryDto"
            }
          },
          "scoresAggregatedByWeek" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EcodriveScoreSummaryDto"
            }
          },
          "scoresAggregatedByMonth" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EcodriveScoreSummaryDto"
            }
          },
          "ecodriveJourneySummaries" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EcodriveJourneySummaryDto"
            }
          }
        }
      },
      "EcodriveSummaryRequestDto" : {
        "type" : "object",
        "properties" : {
          "date" : {
            "type" : "string",
            "format" : "date-time"
          },
          "userTimezone" : {
            "type" : "string"
          },
          "locale" : {
            "type" : "object",
            "properties" : {
              "language" : {
                "type" : "string"
              },
              "displayName" : {
                "type" : "string"
              },
              "country" : {
                "type" : "string"
              },
              "variant" : {
                "type" : "string"
              },
              "script" : {
                "type" : "string"
              },
              "unicodeLocaleAttributes" : {
                "uniqueItems" : true,
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "unicodeLocaleKeys" : {
                "uniqueItems" : true,
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "displayLanguage" : {
                "type" : "string"
              },
              "displayScript" : {
                "type" : "string"
              },
              "displayCountry" : {
                "type" : "string"
              },
              "displayVariant" : {
                "type" : "string"
              },
              "extensionKeys" : {
                "uniqueItems" : true,
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "iso3Language" : {
                "type" : "string"
              },
              "iso3Country" : {
                "type" : "string"
              }
            }
          },
          "days" : {
            "type" : "integer",
            "format" : "int32"
          },
          "weeks" : {
            "type" : "integer",
            "format" : "int32"
          },
          "months" : {
            "type" : "integer",
            "format" : "int32"
          },
          "maxJourneySummaries" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "TriggerEcodriveSummaryRequestDto" : {
        "type" : "object",
        "properties" : {
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "EventLocaleLabelDto" : {
        "type" : "object",
        "properties" : {
          "locale" : {
            "type" : "string"
          },
          "label" : {
            "type" : "string"
          }
        }
      },
      "EventTypeDto" : {
        "type" : "object",
        "properties" : {
          "customerId" : {
            "type" : "string"
          },
          "eventKey" : {
            "type" : "string"
          },
          "eventLabels" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EventLocaleLabelDto"
            }
          }
        }
      },
      "WithPaginationResultEventTypeDto" : {
        "type" : "object",
        "properties" : {
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EventTypeDto"
            }
          }
        }
      },
      "WithPaginationRequest" : {
        "type" : "object",
        "properties" : {
          "pageIndex" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "ExpenseSummariesCancelResponseDto" : {
        "type" : "object",
        "properties" : {
          "cancelledSubmittedSummaries" : {
            "type" : "integer",
            "format" : "int32"
          },
          "cancelledSubmittedJourneys" : {
            "type" : "integer",
            "format" : "int32"
          },
          "cancelledSubmittedManualJourneys" : {
            "type" : "integer",
            "format" : "int32"
          },
          "cancelledSummaryIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "cancelledJourneyIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "cancelledManualJourneyIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "ExpenseSummariesCancelRequestDto" : {
        "type" : "object",
        "properties" : {
          "ids" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "ExpenseSummaryResultDto" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "submittedTimeStamp" : {
            "type" : "string",
            "format" : "date-time"
          },
          "submittedRate" : {
            "type" : "number",
            "format" : "double"
          },
          "submittedCurrencyCode" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string"
          },
          "totalClaim" : {
            "type" : "number",
            "format" : "double"
          },
          "businessDistance" : {
            "type" : "number",
            "format" : "double"
          },
          "personalDistance" : {
            "type" : "number",
            "format" : "double"
          },
          "approverEmailAddress" : {
            "type" : "string"
          },
          "rejectedReason" : {
            "type" : "string"
          },
          "startPeriod" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endPeriod" : {
            "type" : "string",
            "format" : "date-time"
          },
          "businessJourneyIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "personalJourneyIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "commuteAJourneyIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "commuteBJourneyIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "businessManualJourneyIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "personalManualJourneyIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "commuteAManualJourneyIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "commuteBManualJourneyIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "ExpenseSummaryRequestDto" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "DriverVehicleConsumptionResultDto" : {
        "type" : "object",
        "properties" : {
          "driverId" : {
            "type" : "string"
          },
          "driverName" : {
            "type" : "string"
          },
          "vehicles" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/VehicleConsumptionResultDto"
            }
          }
        }
      },
      "VehicleConsumptionResultDto" : {
        "type" : "object",
        "properties" : {
          "assetId" : {
            "type" : "string"
          },
          "assetRegistration" : {
            "type" : "string"
          },
          "assetName" : {
            "type" : "string"
          },
          "distance" : {
            "type" : "number",
            "format" : "double"
          },
          "totalFuel" : {
            "type" : "number",
            "format" : "double"
          },
          "benchmarkConsumption" : {
            "type" : "number",
            "format" : "double"
          },
          "manufacturerConsumption" : {
            "type" : "number",
            "format" : "float"
          },
          "energyType" : {
            "type" : "string",
            "enum" : [ "ICE", "EV", "HEV", "PHEV", "CNG", "LNG", "LPG", "FCEV", "BI_FUEL", "UNDEFINED" ]
          },
          "fuelType" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "PETROL", "DIESEL", "METHANE", "PROPANE", "HYDROGEN", "ELECTRIC" ]
            }
          },
          "electricUsedkWh" : {
            "type" : "number",
            "format" : "float"
          },
          "gasUsedKg" : {
            "type" : "number",
            "format" : "float"
          },
          "fuelUsedLitres" : {
            "type" : "number",
            "format" : "double"
          },
          "fuelUsedPetrolEquivalentLitres" : {
            "type" : "number",
            "format" : "double"
          },
          "co2" : {
            "type" : "number",
            "format" : "double"
          }
        }
      },
      "DriverVehicleConsumptionRequestDto" : {
        "type" : "object",
        "properties" : {
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "driverId" : {
            "type" : "string"
          },
          "groupId" : {
            "type" : "string"
          },
          "startDateRange" : {
            "$ref" : "#/components/schemas/DateRange"
          }
        }
      },
      "VehicleConsumptionRequestDto" : {
        "type" : "object",
        "properties" : {
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "vehicleId" : {
            "type" : "string"
          },
          "groupId" : {
            "type" : "string"
          },
          "startDateRange" : {
            "$ref" : "#/components/schemas/DateRange"
          }
        }
      },
      "FuelTransactionDTO" : {
        "type" : "object",
        "properties" : {
          "vehicleId" : {
            "type" : "string"
          },
          "cardProvider" : {
            "type" : "string"
          },
          "cardAccountNumber" : {
            "type" : "string"
          },
          "transactionTimeStamp" : {
            "type" : "string"
          },
          "transactionId" : {
            "type" : "string"
          },
          "fleetCode" : {
            "type" : "string"
          },
          "accountName" : {
            "type" : "string"
          },
          "siteId" : {
            "type" : "string"
          },
          "siteCountry" : {
            "type" : "string"
          },
          "cardNo" : {
            "type" : "string"
          },
          "driverName" : {
            "type" : "string"
          },
          "vatRate" : {
            "type" : "number",
            "format" : "double"
          },
          "costPerLitre" : {
            "type" : "number",
            "format" : "double"
          },
          "costPerLitreWithoutTax" : {
            "type" : "number",
            "format" : "double"
          },
          "transactionCost" : {
            "type" : "number",
            "format" : "double"
          },
          "quantityLitres" : {
            "type" : "number",
            "format" : "double"
          },
          "priceNet" : {
            "type" : "number",
            "format" : "double"
          },
          "currency" : {
            "type" : "string"
          },
          "odometerKm" : {
            "type" : "integer",
            "format" : "int64"
          },
          "accountVRN" : {
            "type" : "string"
          },
          "enteredVRN" : {
            "type" : "string"
          },
          "transactionType" : {
            "type" : "string"
          },
          "productDescription" : {
            "type" : "string"
          },
          "priceGross" : {
            "type" : "number",
            "format" : "double"
          },
          "hasTranTime" : {
            "type" : "boolean"
          },
          "siteType" : {
            "type" : "string"
          },
          "siteName" : {
            "type" : "string"
          },
          "fuelStationLocation" : {
            "type" : "string"
          },
          "manuallyUpdated" : {
            "type" : "boolean"
          }
        }
      },
      "WithPaginationResultFuelTransactionDTO" : {
        "type" : "object",
        "properties" : {
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FuelTransactionDTO"
            }
          }
        }
      },
      "FuelTransactionRequestDto" : {
        "type" : "object",
        "properties" : {
          "pageIndex" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "vehicleId" : {
            "type" : "string"
          },
          "groupId" : {
            "type" : "string"
          },
          "includeUnmatchedVehicles" : {
            "type" : "boolean"
          },
          "includeMatchedVehicles" : {
            "type" : "boolean"
          }
        }
      },
      "GroupDto" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "maxLength" : 24,
            "minLength" : 1,
            "pattern" : "^[a-z0-9]+$",
            "type" : "string",
            "description" : "ID of group",
            "example" : "groupID"
          },
          "name" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string",
            "description" : "Group name",
            "example" : "group-name"
          },
          "parentId" : {
            "type" : "string",
            "description" : "ID of parent group, in case for changing the hierarchy",
            "example" : "rootGroupId"
          },
          "path" : {
            "type" : "string",
            "description" : "Hierarchy path from root group",
            "readOnly" : true,
            "example" : "rootGroupId.groupID"
          },
          "vehicleIds" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "description" : "List of Vehicle IDs to assign for concrete group",
              "example" : "[\"vehicleID1\",\"vehicleID2\"]"
            }
          },
          "personIds" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "description" : "List of Person IDs to assign for concrete group",
              "example" : "[\"personID1\",\"personID2\"]"
            }
          }
        }
      },
      "ApiErrorDto" : {
        "type" : "object",
        "properties" : {
          "errorCode" : {
            "type" : "integer",
            "format" : "int32"
          },
          "errorMessage" : {
            "type" : "string"
          },
          "offendingFields" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "GroupQueryDto" : {
        "required" : [ "Name of the group" ],
        "type" : "object",
        "properties" : {
          "Name of the group" : {
            "maxLength" : 255,
            "minLength" : 1,
            "type" : "string",
            "example" : "Group Name"
          },
          "parentId" : {
            "maxLength" : 255,
            "minLength" : 0,
            "pattern" : "^[a-z0-9]*$",
            "type" : "string",
            "description" : "ID of parent group / hierarchy node. When empty it is used node id of request context",
            "example" : "parentGroupId"
          }
        }
      },
      "GroupSearchResultDto" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "maxLength" : 24,
            "minLength" : 1,
            "pattern" : "^[a-z0-9]+$",
            "type" : "string",
            "description" : "ID of group",
            "example" : "groupID"
          },
          "name" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string",
            "description" : "Group name",
            "example" : "group-name"
          },
          "parentId" : {
            "type" : "string",
            "description" : "ID of parent group, in case for changing the hierarchy",
            "example" : "rootGroupId"
          },
          "path" : {
            "type" : "string",
            "description" : "Hierarchy path from root group",
            "readOnly" : true,
            "example" : "rootGroupId.groupID"
          },
          "countDrivers" : {
            "type" : "integer",
            "description" : "Count of assigned drivers to group",
            "format" : "int32",
            "readOnly" : true,
            "example" : 1
          },
          "countSecondaryDrivers" : {
            "type" : "integer",
            "description" : "Count of assigned secondary drivers to group",
            "format" : "int32",
            "readOnly" : true,
            "example" : 1
          },
          "countSecondaryVehicles" : {
            "type" : "integer",
            "description" : "Count of assigned secondary vehicles to group",
            "format" : "int32",
            "readOnly" : true,
            "example" : 0
          },
          "countVehicles" : {
            "type" : "integer",
            "description" : "Count of assigned vehicles to group",
            "format" : "int32",
            "readOnly" : true,
            "example" : 0
          }
        }
      },
      "CoordinateDto" : {
        "required" : [ "latitude", "longitude" ],
        "type" : "object",
        "properties" : {
          "longitude" : {
            "type" : "number",
            "format" : "double"
          },
          "latitude" : {
            "type" : "number",
            "format" : "double"
          }
        }
      },
      "IdlingDetailDto" : {
        "type" : "object",
        "properties" : {
          "vehicleId" : {
            "type" : "string"
          },
          "vehicleRegistration" : {
            "type" : "string"
          },
          "vehicleName" : {
            "type" : "string"
          },
          "driverId" : {
            "type" : "string"
          },
          "driverName" : {
            "type" : "string"
          },
          "groupId" : {
            "type" : "string"
          },
          "groupName" : {
            "type" : "string"
          },
          "startTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "duration" : {
            "type" : "integer",
            "format" : "int64"
          },
          "coordinates" : {
            "$ref" : "#/components/schemas/CoordinateDto"
          },
          "address" : {
            "type" : "string"
          },
          "location" : {
            "$ref" : "#/components/schemas/LocationDto"
          }
        }
      },
      "LocationDto" : {
        "required" : [ "categoryName", "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "pattern" : "^[\\w]*$",
            "type" : "string"
          },
          "radius" : {
            "type" : "number",
            "format" : "double"
          },
          "name" : {
            "type" : "string"
          },
          "categoryName" : {
            "type" : "string"
          },
          "address" : {
            "$ref" : "#/components/schemas/AddressDto"
          },
          "coordinate" : {
            "$ref" : "#/components/schemas/CoordinateDto"
          },
          "polygon" : {
            "maxItems" : 2147483647,
            "minItems" : 3,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CoordinateDto"
            }
          },
          "reference" : {
            "maxLength" : 50,
            "minLength" : 0,
            "type" : "string"
          },
          "phoneNumber" : {
            "maxLength" : 20,
            "minLength" : 0,
            "pattern" : "^\\+?\\d+$",
            "type" : "string"
          },
          "contact" : {
            "maxLength" : 50,
            "minLength" : 0,
            "type" : "string"
          },
          "email" : {
            "maxLength" : 50,
            "minLength" : 0,
            "type" : "string"
          },
          "notes" : {
            "maxLength" : 140,
            "minLength" : 0,
            "type" : "string"
          }
        }
      },
      "WithPaginationResultIdlingDetailDto" : {
        "type" : "object",
        "properties" : {
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/IdlingDetailDto"
            }
          }
        }
      },
      "AssetIdlingDetailRequestDto" : {
        "type" : "object",
        "properties" : {
          "pageIndex" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "groupId" : {
            "type" : "string"
          },
          "excludeChildGroups" : {
            "type" : "boolean"
          },
          "idlingDurationSeconds" : {
            "type" : "integer",
            "format" : "int64"
          },
          "vehicleId" : {
            "type" : "string"
          },
          "entityId" : {
            "type" : "string"
          }
        }
      },
      "PersonIdlingDetailRequestDto" : {
        "type" : "object",
        "properties" : {
          "pageIndex" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "groupId" : {
            "type" : "string"
          },
          "excludeChildGroups" : {
            "type" : "boolean"
          },
          "idlingDurationSeconds" : {
            "type" : "integer",
            "format" : "int64"
          },
          "driverId" : {
            "type" : "string"
          },
          "entityId" : {
            "type" : "string"
          }
        }
      },
      "TriggerIdlingDetailRequestDto" : {
        "type" : "object",
        "properties" : {
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "InputBlockDto" : {
        "type" : "object",
        "properties" : {
          "eventStartDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "eventStartLatitude" : {
            "type" : "number",
            "format" : "double"
          },
          "eventStartLongitude" : {
            "type" : "number",
            "format" : "double"
          },
          "eventStartFormattedAddress" : {
            "type" : "string"
          },
          "eventStartLocationName" : {
            "type" : "string"
          },
          "eventStartLocationGroupName" : {
            "type" : "string"
          },
          "eventStartLocationId" : {
            "type" : "string"
          },
          "eventStartLocationGroupId" : {
            "type" : "string"
          },
          "eventEndDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "eventEndLatitude" : {
            "type" : "number",
            "format" : "double"
          },
          "eventEndLongitude" : {
            "type" : "number",
            "format" : "double"
          },
          "eventEndFormattedAddress" : {
            "type" : "string"
          },
          "eventEndLocationName" : {
            "type" : "string"
          },
          "eventEndLocationGroupName" : {
            "type" : "string"
          },
          "eventEndLocationId" : {
            "type" : "string"
          },
          "eventEndLocationGroupId" : {
            "type" : "string"
          },
          "inputLabel" : {
            "type" : "string"
          },
          "inputId" : {
            "type" : "string"
          },
          "customLabel" : {
            "type" : "string"
          },
          "activeStateLabel" : {
            "type" : "string"
          },
          "customActiveStateLabel" : {
            "type" : "string"
          },
          "inactiveStateLabel" : {
            "type" : "string"
          },
          "customInactiveStateLabel" : {
            "type" : "string"
          },
          "fuelUsed" : {
            "type" : "number",
            "format" : "double"
          },
          "distanceKms" : {
            "type" : "number",
            "format" : "double"
          },
          "speedKph" : {
            "type" : "number",
            "format" : "double"
          },
          "durationSeconds" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "InputUsageDto" : {
        "type" : "object",
        "properties" : {
          "vehicleRegistration" : {
            "type" : "string"
          },
          "vehicleName" : {
            "type" : "string"
          },
          "vehicleId" : {
            "type" : "string"
          },
          "driverName" : {
            "type" : "string"
          },
          "driverId" : {
            "type" : "string"
          },
          "vehicleGroupName" : {
            "type" : "string"
          },
          "vehicleGroupId" : {
            "type" : "string"
          },
          "driverGroupName" : {
            "type" : "string"
          },
          "driverGroupId" : {
            "type" : "string"
          },
          "inputBlock" : {
            "$ref" : "#/components/schemas/InputBlockDto"
          },
          "secondaryVehicleGroups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/IdNameDto"
            }
          },
          "secondaryDriverGroups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/IdNameDto"
            }
          }
        }
      },
      "WithPaginationResultInputUsageDto" : {
        "type" : "object",
        "properties" : {
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/InputUsageDto"
            }
          }
        }
      },
      "InputUsageDriverRequestDto" : {
        "type" : "object",
        "properties" : {
          "pageIndex" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "enableSecondaryGroupAssignments" : {
            "type" : "boolean"
          },
          "driverId" : {
            "type" : "string"
          },
          "dateRange" : {
            "$ref" : "#/components/schemas/DateRange"
          }
        }
      },
      "InputUsageVehicleRequestDto" : {
        "type" : "object",
        "properties" : {
          "pageIndex" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "enableSecondaryGroupAssignments" : {
            "type" : "boolean"
          },
          "vehicleId" : {
            "type" : "string"
          },
          "dateRange" : {
            "$ref" : "#/components/schemas/DateRange"
          }
        }
      },
      "ChannelDto" : {
        "type" : "object",
        "properties" : {
          "inputKey" : {
            "type" : "string"
          },
          "value" : {
            "type" : "object"
          },
          "calcValue" : {
            "type" : "number"
          },
          "lastUpdatedTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "isValid" : {
            "type" : "boolean"
          }
        }
      },
      "InputEventDto" : {
        "type" : "object",
        "properties" : {
          "assetId" : {
            "type" : "string"
          },
          "assetRegistration" : {
            "type" : "string"
          },
          "assetName" : {
            "type" : "string"
          },
          "assetGroupName" : {
            "type" : "string"
          },
          "assetGroupId" : {
            "type" : "string"
          },
          "assetSecondaryGroups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/IdNameDto"
            }
          },
          "driverId" : {
            "type" : "string"
          },
          "driverName" : {
            "type" : "string"
          },
          "driverGroupName" : {
            "type" : "string"
          },
          "driverGroupId" : {
            "type" : "string"
          },
          "driverSecondaryGroups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/IdNameDto"
            }
          },
          "eventDateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "coordinate" : {
            "$ref" : "#/components/schemas/CoordinateDto"
          },
          "formattedAddress" : {
            "type" : "string"
          },
          "locations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LocationDto"
            }
          },
          "eventKey" : {
            "type" : "string"
          },
          "channels" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ChannelDto"
            }
          },
          "private" : {
            "type" : "boolean"
          }
        }
      },
      "WithPaginationResultInputEventDto" : {
        "type" : "object",
        "properties" : {
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/InputEventDto"
            }
          }
        }
      },
      "InputEventRequestDto" : {
        "type" : "object",
        "properties" : {
          "pageIndex" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "enableSecondaryGroupAssignments" : {
            "type" : "boolean"
          },
          "dateRange" : {
            "$ref" : "#/components/schemas/DateRange"
          }
        }
      },
      "TimestampedWithPaginationResultInputEventDto" : {
        "type" : "object",
        "properties" : {
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/InputEventDto"
            }
          },
          "processedDateTime" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "InputEventRequestAssetDto" : {
        "type" : "object",
        "properties" : {
          "pageIndex" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "enableSecondaryGroupAssignments" : {
            "type" : "boolean"
          },
          "assetId" : {
            "type" : "string"
          },
          "groupId" : {
            "type" : "string"
          },
          "dateRange" : {
            "$ref" : "#/components/schemas/DateRange"
          }
        }
      },
      "LatestInputEventsDto" : {
        "type" : "object",
        "properties" : {
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/InputEventDto"
            }
          },
          "processedDateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "LatestInputEventsRequestDto" : {
        "type" : "object",
        "properties" : {
          "fromDateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "assetId" : {
            "type" : "string"
          },
          "groupId" : {
            "type" : "string"
          },
          "eventKey" : {
            "type" : "string"
          },
          "enableSecondaryGroupAssignments" : {
            "type" : "boolean"
          }
        }
      },
      "InputLocaleCustomLabelDto" : {
        "type" : "object",
        "properties" : {
          "active" : {
            "type" : "string"
          },
          "inactive" : {
            "type" : "string"
          }
        }
      },
      "InputLocaleLabelDto" : {
        "type" : "object",
        "properties" : {
          "locale" : {
            "type" : "string"
          },
          "label" : {
            "type" : "string"
          },
          "unit" : {
            "type" : "string"
          },
          "customLabel" : {
            "$ref" : "#/components/schemas/InputLocaleCustomLabelDto"
          }
        }
      },
      "InputTypeDto" : {
        "type" : "object",
        "properties" : {
          "customerId" : {
            "type" : "string"
          },
          "inputTypeKey" : {
            "type" : "string"
          },
          "inputDataType" : {
            "type" : "string"
          },
          "multiplier" : {
            "type" : "number",
            "format" : "float"
          },
          "offset" : {
            "type" : "number",
            "format" : "float"
          },
          "inputLabels" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/InputLocaleLabelDto"
            }
          },
          "visible" : {
            "type" : "boolean"
          },
          "displayOrder" : {
            "type" : "integer",
            "format" : "int32"
          },
          "mediaType" : {
            "type" : "string"
          },
          "category" : {
            "type" : "string"
          }
        }
      },
      "WithPaginationResultInputTypeDto" : {
        "type" : "object",
        "properties" : {
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/InputTypeDto"
            }
          }
        }
      },
      "InterestedPartyVehicleDto" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "customerId" : {
            "type" : "string"
          },
          "customerName" : {
            "type" : "string"
          },
          "registration" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "assetType" : {
            "type" : "string"
          },
          "make" : {
            "type" : "string"
          },
          "model" : {
            "type" : "string"
          },
          "interestedPartyTags" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "energyType" : {
            "type" : "string"
          },
          "fuelType" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "WithPaginationResultInterestedPartyVehicleDto" : {
        "type" : "object",
        "properties" : {
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/InterestedPartyVehicleDto"
            }
          }
        }
      },
      "InterestedPartyVehicleRequestDto" : {
        "type" : "object",
        "properties" : {
          "pageIndex" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "tags" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "customerIds" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "InterestedPartyAssetSummaryResponseDto" : {
        "type" : "object",
        "properties" : {
          "assetId" : {
            "type" : "string"
          },
          "customerId" : {
            "type" : "string"
          },
          "customerName" : {
            "type" : "string"
          },
          "assetRegistration" : {
            "type" : "string"
          },
          "weeks" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/InterestedPartyAssetSummaryResponseWeekDto"
            }
          },
          "make" : {
            "type" : "string"
          },
          "model" : {
            "type" : "string"
          },
          "interestedPartyTags" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "InterestedPartyAssetSummaryResponseWeekDto" : {
        "type" : "object",
        "properties" : {
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "activeDays" : {
            "type" : "integer",
            "format" : "int32"
          },
          "inactiveDays" : {
            "type" : "integer",
            "format" : "int32"
          },
          "distanceKm" : {
            "type" : "number",
            "format" : "double"
          },
          "journeysCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "fuelUsed" : {
            "type" : "number",
            "format" : "double"
          },
          "movingWithoutPtoDurationSec" : {
            "type" : "integer",
            "format" : "int64"
          },
          "movingWithPtoDurationSec" : {
            "type" : "integer",
            "format" : "int64"
          },
          "movingDurationSec" : {
            "type" : "integer",
            "format" : "int64"
          },
          "movingDurationPercentage" : {
            "type" : "number",
            "format" : "double"
          },
          "idlingWithoutPtoDurationSec" : {
            "type" : "integer",
            "format" : "int64"
          },
          "idlingWithPtoDurationSec" : {
            "type" : "integer",
            "format" : "int64"
          },
          "engineOverRevvingCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "harshAccelerationCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "harshBrakingCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "harshCorneringCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "speedingEventCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "excessiveIdlingInsideBaseCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "excessiveIdlingOutsideBaseCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "score" : {
            "type" : "number",
            "format" : "double"
          },
          "averageSpeedKmsPerHour" : {
            "type" : "number",
            "format" : "double"
          },
          "fuelConsumptionLitresPerKms" : {
            "type" : "number",
            "format" : "double"
          },
          "co2Kg" : {
            "type" : "number",
            "format" : "double"
          },
          "co2GrmPerKm" : {
            "type" : "number",
            "format" : "double"
          },
          "fuelUsedPetrolEquivalentLitres" : {
            "type" : "number",
            "format" : "double"
          },
          "fuelUsedLitres" : {
            "type" : "number",
            "format" : "double"
          },
          "gasUsedKg" : {
            "type" : "number",
            "format" : "double"
          },
          "electricUsedkWh" : {
            "type" : "number",
            "format" : "double"
          }
        }
      },
      "WithPaginationResultInterestedPartyAssetSummaryResponseDto" : {
        "type" : "object",
        "properties" : {
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/InterestedPartyAssetSummaryResponseDto"
            }
          }
        }
      },
      "InterestedPartyAssetSummaryRequestDto" : {
        "type" : "object",
        "properties" : {
          "pageIndex" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "customerIds" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "assetIds" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "tags" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "InterestedPartyCurrentPositionResultsAddress" : {
        "type" : "object",
        "properties" : {
          "formattedAddress" : {
            "type" : "string"
          },
          "road" : {
            "type" : "string"
          },
          "city" : {
            "type" : "string"
          },
          "postCode" : {
            "type" : "string"
          },
          "country" : {
            "type" : "string"
          }
        }
      },
      "InterestedPartyCurrentPositionResultsResponseDto" : {
        "type" : "object",
        "properties" : {
          "assetId" : {
            "type" : "string"
          },
          "assetRegistration" : {
            "type" : "string"
          },
          "make" : {
            "type" : "string"
          },
          "model" : {
            "type" : "string"
          },
          "customerId" : {
            "type" : "string"
          },
          "customerName" : {
            "type" : "string"
          },
          "interestedPartyTags" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "eventDateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "eventType" : {
            "type" : "string"
          },
          "eventStatus" : {
            "type" : "string"
          },
          "coordinate" : {
            "$ref" : "#/components/schemas/Coordinate"
          },
          "address" : {
            "$ref" : "#/components/schemas/InterestedPartyCurrentPositionResultsAddress"
          },
          "odometerKms" : {
            "type" : "number",
            "format" : "double"
          },
          "electricBatteryLevelPercent" : {
            "type" : "number",
            "format" : "float"
          },
          "electricBatteryLevelPercentEstimated" : {
            "type" : "boolean"
          },
          "electricRangeKm" : {
            "type" : "number",
            "format" : "float"
          },
          "electricRangeKmEstimated" : {
            "type" : "boolean"
          },
          "electricChargingTimeRemainingMins" : {
            "type" : "number",
            "format" : "float"
          },
          "electricCharging" : {
            "type" : "string",
            "enum" : [ "CHARGING", "DISCHARGING" ]
          },
          "fuelLevelLitres" : {
            "type" : "number",
            "format" : "float"
          },
          "fuelLevelPercentage" : {
            "type" : "number",
            "format" : "float"
          },
          "engineRpm" : {
            "type" : "number",
            "format" : "float"
          },
          "engineTotalHours" : {
            "type" : "number",
            "format" : "float"
          },
          "speedKph" : {
            "type" : "number",
            "format" : "double"
          },
          "energyType" : {
            "type" : "string"
          },
          "fuelType" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "WithPaginationResultInterestedPartyCurrentPositionResultsResponseDto" : {
        "type" : "object",
        "properties" : {
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/InterestedPartyCurrentPositionResultsResponseDto"
            }
          }
        }
      },
      "InterestedPartyCurrentPositionResultsRequestDto" : {
        "type" : "object",
        "properties" : {
          "pageIndex" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "customerIds" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "tags" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "FaultDetailsResultDto" : {
        "type" : "object",
        "properties" : {
          "source" : {
            "type" : "string"
          },
          "sourceDescription" : {
            "type" : "string"
          },
          "occurrenceCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "fmi" : {
            "type" : "string"
          },
          "fmiDescription" : {
            "type" : "string"
          },
          "lamps" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "InterestedPartyFaultMaintenanceResponseDto" : {
        "type" : "object",
        "properties" : {
          "assetId" : {
            "type" : "string"
          },
          "customerId" : {
            "type" : "string"
          },
          "customerName" : {
            "type" : "string"
          },
          "registration" : {
            "type" : "string"
          },
          "make" : {
            "type" : "string"
          },
          "model" : {
            "type" : "string"
          },
          "interestedPartyTags" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "startOdometer" : {
            "type" : "number",
            "format" : "double"
          },
          "endOdometer" : {
            "type" : "number",
            "format" : "double"
          },
          "faultInProgress" : {
            "type" : "boolean"
          },
          "faultCode" : {
            "type" : "string"
          },
          "faultDescription" : {
            "type" : "string"
          },
          "faultType" : {
            "type" : "string"
          },
          "faultDetails" : {
            "$ref" : "#/components/schemas/FaultDetailsResultDto"
          }
        }
      },
      "WithPaginationResultInterestedPartyFaultMaintenanceResponseDto" : {
        "type" : "object",
        "properties" : {
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/InterestedPartyFaultMaintenanceResponseDto"
            }
          }
        }
      },
      "InterestedPartyFaultMaintenanceRequestDto" : {
        "type" : "object",
        "properties" : {
          "pageIndex" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "onlyActiveFaults" : {
            "type" : "boolean"
          },
          "tags" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "customerIds" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "assetIds" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "InterestedPartyVehicleOdometerResponseDTO" : {
        "type" : "object",
        "properties" : {
          "assetId" : {
            "type" : "string"
          },
          "registration" : {
            "type" : "string"
          },
          "assetName" : {
            "type" : "string"
          },
          "customerId" : {
            "type" : "string"
          },
          "customerName" : {
            "type" : "string"
          },
          "make" : {
            "type" : "string"
          },
          "model" : {
            "type" : "string"
          },
          "assetType" : {
            "type" : "string"
          },
          "odometerKms" : {
            "type" : "number",
            "format" : "double"
          },
          "odometerType" : {
            "type" : "string",
            "enum" : [ "CAN", "GPS", "DO_NOT_APPLY_ODOMETER_FILTER", "ALL_WITH_ODOMETERS" ]
          },
          "odometerReadingDateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "interestedPartyTags" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "WithPaginationResultInterestedPartyVehicleOdometerResponseDTO" : {
        "type" : "object",
        "properties" : {
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/InterestedPartyVehicleOdometerResponseDTO"
            }
          }
        }
      },
      "InterestedPartyVehicleOdometerRequestDTO" : {
        "type" : "object",
        "properties" : {
          "pageIndex" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "tags" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "customerIds" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "odometerType" : {
            "type" : "string"
          }
        }
      },
      "InterestedPartyServiceDueDateResponseDto" : {
        "type" : "object",
        "properties" : {
          "assetId" : {
            "type" : "string"
          },
          "customerId" : {
            "type" : "string"
          },
          "customerName" : {
            "type" : "string"
          },
          "registration" : {
            "type" : "string"
          },
          "make" : {
            "type" : "string"
          },
          "model" : {
            "type" : "string"
          },
          "distanceToServiceKms" : {
            "type" : "number",
            "format" : "double"
          },
          "serviceDueDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "WithPaginationResultInterestedPartyServiceDueDateResponseDto" : {
        "type" : "object",
        "properties" : {
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/InterestedPartyServiceDueDateResponseDto"
            }
          }
        }
      },
      "InterestedPartyServiceDueDateRequestDto" : {
        "type" : "object",
        "properties" : {
          "pageIndex" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "tags" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "customerIds" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "assetIds" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "InterestedPartyTagRequestDto" : {
        "required" : [ "assets", "tag" ],
        "type" : "object",
        "properties" : {
          "tag" : {
            "type" : "string"
          },
          "assets" : {
            "maxItems" : 2147483647,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "InterestedPartyTagsDto" : {
        "type" : "object",
        "properties" : {
          "tags" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "IoManagementResponseDto" : {
        "type" : "object",
        "properties" : {
          "failedEvents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PartnerIoFrameDto"
            }
          },
          "successEvents" : {
            "type" : "integer",
            "format" : "int32"
          },
          "error" : {
            "type" : "string"
          }
        }
      },
      "PartnerIOCoordinateDto" : {
        "type" : "object",
        "properties" : {
          "longitude" : {
            "type" : "number",
            "format" : "double"
          },
          "latitude" : {
            "type" : "number",
            "format" : "double"
          }
        }
      },
      "PartnerIoChannelDto" : {
        "type" : "object",
        "properties" : {
          "inputKey" : {
            "type" : "string"
          },
          "value" : {
            "type" : "object"
          },
          "type" : {
            "type" : "string"
          }
        }
      },
      "PartnerIoFrameDto" : {
        "type" : "object",
        "properties" : {
          "partnerAssetId" : {
            "type" : "string"
          },
          "assetId" : {
            "type" : "string"
          },
          "eventDateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "coordinate" : {
            "$ref" : "#/components/schemas/PartnerIOCoordinateDto"
          },
          "privacy" : {
            "type" : "boolean"
          },
          "eventKey" : {
            "type" : "string"
          },
          "channels" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PartnerIoChannelDto"
            }
          },
          "failReason" : {
            "type" : "string"
          }
        }
      },
      "Asset" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "customerId" : {
            "type" : "string"
          },
          "registration" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "vin" : {
            "type" : "string"
          },
          "assetType" : {
            "type" : "string"
          },
          "make" : {
            "type" : "string"
          },
          "model" : {
            "type" : "string"
          },
          "version" : {
            "type" : "string"
          },
          "visible" : {
            "type" : "boolean"
          },
          "defaultDriverId" : {
            "type" : "string"
          },
          "tempDriverId" : {
            "type" : "string"
          },
          "tempDriverExpiry" : {
            "type" : "string",
            "format" : "date-time"
          },
          "tempDriverNextJourneyOnly" : {
            "type" : "boolean"
          },
          "litresPer100KmBenchmark" : {
            "$ref" : "#/components/schemas/LitresPer100KmBenchmark"
          },
          "manualOdometerReading" : {
            "$ref" : "#/components/schemas/OdometerReading"
          },
          "currentOdometer" : {
            "$ref" : "#/components/schemas/OdometerReading"
          },
          "cumulativeRuntimeSeconds" : {
            "type" : "integer",
            "format" : "int64"
          },
          "cumulativePtoRuntimeSeconds" : {
            "type" : "integer",
            "format" : "int64"
          },
          "cumulativeIdleTimeSeconds" : {
            "type" : "integer",
            "format" : "int64"
          },
          "cumulativeRuntimeSecondsLastModified" : {
            "type" : "string",
            "format" : "date-time"
          },
          "cumulativeFuelUsed" : {
            "type" : "number",
            "format" : "double"
          },
          "vehicle" : {
            "$ref" : "#/components/schemas/EcoTaxVehicleParameters"
          },
          "assetFeatureTags" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "TRACK", "PING", "BATTERY", "WIRED", "DRIVERKEY", "GENERICINPUTS", "PTO", "GRITTING", "SERVICE", "DEFECTS", "TRUE_ENGINE_IDLING", "NO_IDLING", "SUSPLUS", "SERVICE_CAN", "MOBILEDEVICE", "FAULT_MBOX_200", "FAULT_MBOX_201", "FAULT_MBOX_205", "FAULT_MBOX_207", "FAULT_MBOX_210", "FAULT_MBOX_211", "FAULT_MBOX_214", "FAULT_MBOX_216", "FAULT_MBOX_217", "FAULT_MBOX_218", "FAULT_MBOX_219", "FAULT_MBOX_220", "FAULT_MBOX_222", "FAULT_MBOX_223", "FAULT_MBOX_226", "FAULT_MBOX_227", "TACHO_BVFM", "WATEA", "DOOR", "UNTRACKED" ]
            }
          },
          "historicAssetFeatureTags" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "TRACK", "PING", "BATTERY", "WIRED", "DRIVERKEY", "GENERICINPUTS", "PTO", "GRITTING", "SERVICE", "DEFECTS", "TRUE_ENGINE_IDLING", "NO_IDLING", "SUSPLUS", "SERVICE_CAN", "MOBILEDEVICE", "FAULT_MBOX_200", "FAULT_MBOX_201", "FAULT_MBOX_205", "FAULT_MBOX_207", "FAULT_MBOX_210", "FAULT_MBOX_211", "FAULT_MBOX_214", "FAULT_MBOX_216", "FAULT_MBOX_217", "FAULT_MBOX_218", "FAULT_MBOX_219", "FAULT_MBOX_220", "FAULT_MBOX_222", "FAULT_MBOX_223", "FAULT_MBOX_226", "FAULT_MBOX_227", "TACHO_BVFM", "WATEA", "DOOR", "UNTRACKED" ]
            }
          },
          "tags" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "nextService" : {
            "$ref" : "#/components/schemas/NextService"
          },
          "serviceHistory" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ServiceHistory"
            }
          },
          "defects" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Defect"
            }
          },
          "makeModelVersion" : {
            "type" : "string"
          },
          "interestedParties" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "interestedPartyTags" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "yearOfManufacture" : {
            "type" : "integer",
            "format" : "int32"
          },
          "ownershipStartDate" : {
            "type" : "string",
            "format" : "date"
          },
          "ownershipEndDate" : {
            "type" : "string",
            "format" : "date"
          },
          "purchaseCost" : {
            "type" : "number"
          },
          "monthlyLeaseCost" : {
            "type" : "number"
          },
          "monthlyInsuranceCost" : {
            "type" : "number"
          },
          "monthlyMaintenanceCost" : {
            "type" : "number"
          },
          "scheduledMaintenanceAmount" : {
            "type" : "number"
          },
          "unscheduledMaintenanceAmount" : {
            "type" : "number"
          },
          "monthlyFuelCost" : {
            "type" : "number"
          },
          "mileageAuthorised" : {
            "type" : "integer",
            "format" : "int32"
          },
          "costPerMileOverLimit" : {
            "type" : "number"
          },
          "costOfDisposal" : {
            "type" : "number"
          },
          "buyoutAmount" : {
            "type" : "number"
          },
          "costCurrency" : {
            "type" : "object",
            "properties" : {
              "currencyCode" : {
                "type" : "string"
              },
              "defaultFractionDigits" : {
                "type" : "integer",
                "format" : "int32"
              },
              "numericCode" : {
                "type" : "integer",
                "format" : "int32"
              },
              "numericCodeAsString" : {
                "type" : "string"
              },
              "displayName" : {
                "type" : "string"
              },
              "symbol" : {
                "type" : "string"
              }
            }
          },
          "status" : {
            "type" : "string",
            "enum" : [ "IN_CIRCULATION", "IN_MAINTENANCE", "SOLD" ]
          },
          "dateStatusChange" : {
            "type" : "string",
            "format" : "date-time"
          },
          "primaryFuelSource" : {
            "$ref" : "#/components/schemas/FuelSource"
          },
          "secondaryFuelSource" : {
            "$ref" : "#/components/schemas/FuelSource"
          },
          "peripherals" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Peripheral"
            }
          },
          "enginePowerKW" : {
            "type" : "number",
            "format" : "double"
          },
          "boxType" : {
            "type" : "string"
          },
          "secondaryFuelType" : {
            "type" : "string",
            "enum" : [ "PETROL", "DIESEL", "METHANE", "PROPANE", "HYDROGEN", "ELECTRIC" ]
          },
          "energy" : {
            "type" : "string",
            "enum" : [ "ICE", "EV", "HEV", "PHEV", "CNG", "LNG", "LPG", "FCEV", "BI_FUEL", "UNDEFINED" ]
          },
          "electricVehicleCompatibility" : {
            "$ref" : "#/components/schemas/ElectricVehicleCompatibility"
          },
          "assetTypeGroup" : {
            "type" : "string"
          },
          "lastManualEngineHoursUpdate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "weightSettings" : {
            "$ref" : "#/components/schemas/AssetWeightSettings"
          },
          "dimensionSettings" : {
            "$ref" : "#/components/schemas/AssetDimensionSettings"
          },
          "usageSettings" : {
            "$ref" : "#/components/schemas/AssetUsageSettings"
          },
          "brakeSettings" : {
            "$ref" : "#/components/schemas/AssetBrakeSettings"
          },
          "estimateBatteryLevelPercent" : {
            "type" : "boolean"
          },
          "estimateRange" : {
            "type" : "boolean"
          },
          "estimateConsumption" : {
            "type" : "boolean"
          },
          "lastService" : {
            "$ref" : "#/components/schemas/ServiceHistory"
          },
          "manualService" : {
            "type" : "boolean"
          },
          "tempDriverIdRaw" : {
            "type" : "string"
          },
          "tempDriverExpiryRaw" : {
            "type" : "string",
            "format" : "date-time"
          },
          "tempDriverNextJourneyOnlyRaw" : {
            "type" : "boolean"
          },
          "previousService" : {
            "$ref" : "#/components/schemas/ServiceHistory"
          }
        }
      },
      "AssetBrakeSettings" : {
        "type" : "object",
        "properties" : {
          "absPer100Km" : {
            "type" : "number",
            "format" : "double"
          },
          "brakingPer100Km" : {
            "type" : "number",
            "format" : "double"
          }
        }
      },
      "AssetDimensionSettings" : {
        "type" : "object",
        "properties" : {
          "heightMeters" : {
            "type" : "number",
            "format" : "double"
          },
          "lengthMeters" : {
            "type" : "number",
            "format" : "double"
          },
          "widthMeters" : {
            "type" : "number",
            "format" : "double"
          }
        }
      },
      "AssetUsageSettings" : {
        "type" : "object",
        "properties" : {
          "usageHoursPerDay" : {
            "type" : "number",
            "format" : "double"
          },
          "usageDaysPerWeek" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32"
            }
          },
          "profitabilityDistanceKm" : {
            "type" : "number",
            "format" : "double"
          },
          "stoppedThresholdHours" : {
            "type" : "number",
            "format" : "double"
          }
        }
      },
      "AssetWeightSettings" : {
        "type" : "object",
        "properties" : {
          "unladenWeightKg" : {
            "type" : "number",
            "format" : "double"
          },
          "maxGrossWeightKg" : {
            "type" : "number",
            "format" : "double"
          }
        }
      },
      "Defect" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string"
          },
          "eventDateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "details" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          }
        }
      },
      "EcoTaxVehicleParameters" : {
        "type" : "object",
        "properties" : {
          "ecoTaxApplicable" : {
            "type" : "boolean"
          },
          "vehicleWeight" : {
            "type" : "number",
            "format" : "double"
          },
          "euroEngine" : {
            "type" : "integer",
            "format" : "int32"
          },
          "numberOfAxles" : {
            "type" : "integer",
            "format" : "int32"
          },
          "fuelType" : {
            "type" : "string"
          }
        }
      },
      "ElectricVehicleCompatibility" : {
        "type" : "object",
        "properties" : {
          "estimateBatteryLevelPercent" : {
            "type" : "boolean"
          },
          "estimateRange" : {
            "type" : "boolean"
          },
          "estimateConsumption" : {
            "type" : "boolean"
          },
          "estimateSecondaryConsumption" : {
            "type" : "boolean"
          }
        }
      },
      "JourneyDetailDriverDto" : {
        "type" : "object",
        "properties" : {
          "vehicleRegistration" : {
            "type" : "string"
          },
          "vehicleName" : {
            "type" : "string"
          },
          "driverName" : {
            "type" : "string"
          },
          "totalTimeIdledSeconds" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalTimeDrivenSeconds" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalTimeDrivenWithPtoSeconds" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalTimeDrivenWithoutPtoSeconds" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalTimeIdledWithPtoSeconds" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalTimeStoppedSeconds" : {
            "type" : "integer",
            "format" : "int64"
          },
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "startAddress" : {
            "type" : "string"
          },
          "endAddress" : {
            "type" : "string"
          },
          "distanceKm" : {
            "type" : "number",
            "format" : "double"
          },
          "maximumSpeedKph" : {
            "type" : "number",
            "format" : "double"
          },
          "averageSpeedKph" : {
            "type" : "number",
            "format" : "double"
          },
          "startCoordinate" : {
            "$ref" : "#/components/schemas/Coordinate"
          },
          "endCoordinate" : {
            "$ref" : "#/components/schemas/Coordinate"
          },
          "startOdometer" : {
            "type" : "number",
            "format" : "double"
          },
          "endOdometer" : {
            "type" : "number",
            "format" : "double"
          },
          "startLocationName" : {
            "type" : "string"
          },
          "endLocationName" : {
            "type" : "string"
          },
          "startLocationId" : {
            "type" : "string"
          },
          "endLocationId" : {
            "type" : "string"
          },
          "idlingFidelity" : {
            "type" : "integer",
            "format" : "int32"
          },
          "startElectricRangeKm" : {
            "type" : "number",
            "format" : "float"
          },
          "startElectricRangeKmEstimated" : {
            "type" : "boolean"
          },
          "endElectricRangeKm" : {
            "type" : "number",
            "format" : "float"
          },
          "endElectricRangeKmEstimated" : {
            "type" : "boolean"
          },
          "startElectricBatteryLevelPercent" : {
            "type" : "number",
            "format" : "float"
          },
          "startElectricBatteryLevelPercentEstimated" : {
            "type" : "boolean"
          },
          "endElectricBatteryLevelPercent" : {
            "type" : "number",
            "format" : "float"
          },
          "endElectricBatteryLevelPercentEstimated" : {
            "type" : "boolean"
          },
          "startFuelLevelPercentage" : {
            "type" : "number",
            "format" : "float"
          },
          "endFuelLevelPercentage" : {
            "type" : "number",
            "format" : "float"
          },
          "startFuelLevelLitres" : {
            "type" : "number",
            "format" : "float"
          },
          "endFuelLevelLitres" : {
            "type" : "number",
            "format" : "float"
          },
          "startEngineHours" : {
            "type" : "number",
            "format" : "float"
          },
          "endEngineHours" : {
            "type" : "number",
            "format" : "float"
          },
          "fuelUsedPetrolEquivalentLitres" : {
            "type" : "number",
            "format" : "double"
          },
          "co2Kg" : {
            "type" : "number",
            "format" : "double"
          },
          "fuelUsedLitres" : {
            "type" : "number",
            "format" : "double"
          },
          "electricUsedkWh" : {
            "type" : "number",
            "format" : "float"
          },
          "electricUsedkWhEstimated" : {
            "type" : "boolean"
          },
          "gasUsedKg" : {
            "type" : "number",
            "format" : "float"
          },
          "driverId" : {
            "type" : "string"
          },
          "driverGroupName" : {
            "type" : "string"
          },
          "vehicleId" : {
            "type" : "string"
          },
          "commonAttributesFromJourneyTimeSheetDetail" : {
            "$ref" : "#/components/schemas/JourneyTimeSheetDetail"
          },
          "commonAttributesFromAsset" : {
            "$ref" : "#/components/schemas/Asset"
          }
        }
      },
      "JourneyTimeSheetDetail" : {
        "type" : "object",
        "properties" : {
          "requestNodeName" : {
            "type" : "string"
          },
          "startElectricRangeKmEstimated" : {
            "type" : "boolean"
          },
          "endElectricRangeKm" : {
            "type" : "number",
            "format" : "float"
          },
          "endElectricRangeKmEstimated" : {
            "type" : "boolean"
          },
          "startElectricBatteryLevelPercentEstimated" : {
            "type" : "boolean"
          },
          "endElectricBatteryLevelPercent" : {
            "type" : "number",
            "format" : "float"
          },
          "startLocationName" : {
            "type" : "string"
          },
          "endLocationName" : {
            "type" : "string"
          },
          "entityGroupName" : {
            "type" : "string"
          },
          "stoppedTimeSeconds" : {
            "type" : "integer",
            "format" : "int64",
            "writeOnly" : true
          },
          "startElectricBatteryLevelPercent" : {
            "type" : "number",
            "format" : "float"
          },
          "endElectricBatteryLevelPercentEstimated" : {
            "type" : "boolean"
          },
          "startFuelLevelPercentage" : {
            "type" : "number",
            "format" : "float"
          },
          "endFuelLevelPercentage" : {
            "type" : "number",
            "format" : "float"
          },
          "startEngineHours" : {
            "type" : "number",
            "format" : "float"
          },
          "endEngineHours" : {
            "type" : "number",
            "format" : "float"
          },
          "startElectricRangeKm" : {
            "type" : "number",
            "format" : "float"
          },
          "totalFuel" : {
            "type" : "number",
            "format" : "double"
          },
          "distanceKm" : {
            "type" : "number",
            "format" : "double"
          },
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "assetId" : {
            "type" : "string"
          },
          "personId" : {
            "type" : "string"
          },
          "personName" : {
            "type" : "string"
          },
          "assetRegistration" : {
            "type" : "string"
          },
          "private" : {
            "type" : "boolean"
          },
          "startOdometer" : {
            "type" : "number",
            "format" : "double"
          },
          "endOdometer" : {
            "type" : "number",
            "format" : "double"
          },
          "idlingFidelity" : {
            "type" : "integer",
            "format" : "int32"
          },
          "evConsumptionKwh" : {
            "type" : "number",
            "format" : "float"
          },
          "gasConsumptionKg" : {
            "type" : "number",
            "format" : "float"
          },
          "totalTimeIdledSeconds" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalTimeDrivenSeconds" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalTimeDrivenWithPtoSeconds" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalTimeIdledWithPtoSeconds" : {
            "type" : "integer",
            "format" : "int64"
          },
          "maximumSpeedKph" : {
            "type" : "number",
            "format" : "double"
          },
          "averageSpeedKph" : {
            "type" : "number",
            "format" : "double"
          },
          "ptoEnabled" : {
            "type" : "boolean"
          },
          "totalTimeDrivenWithoutPtoSeconds" : {
            "type" : "integer",
            "format" : "int64"
          },
          "classification" : {
            "type" : "string"
          },
          "startAddress" : {
            "type" : "string"
          },
          "endAddress" : {
            "type" : "string"
          },
          "startCoordinate" : {
            "$ref" : "#/components/schemas/Coordinate"
          },
          "endCoordinate" : {
            "$ref" : "#/components/schemas/Coordinate"
          },
          "startLocationId" : {
            "type" : "string"
          },
          "endLocationId" : {
            "type" : "string"
          },
          "speedSensitive" : {
            "type" : "boolean"
          },
          "journeyCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalTimeStoppedSeconds" : {
            "type" : "integer",
            "format" : "int64"
          },
          "startFuelLevelLitres" : {
            "type" : "number",
            "format" : "float"
          },
          "endFuelLevelLitres" : {
            "type" : "number",
            "format" : "float"
          },
          "evConsumptionKwhEstimated" : {
            "type" : "boolean"
          },
          "linkedAssetName" : {
            "type" : "string"
          },
          "assetHierarchyNodeId" : {
            "type" : "string"
          },
          "personHierarchyNodeId" : {
            "type" : "string"
          }
        }
      },
      "LitresPer100KmBenchmark" : {
        "type" : "object",
        "properties" : {
          "kms" : {
            "type" : "number",
            "format" : "double"
          },
          "litres" : {
            "type" : "number",
            "format" : "double"
          },
          "litresPer100Km" : {
            "type" : "number",
            "format" : "double"
          }
        }
      },
      "NextService" : {
        "type" : "object",
        "properties" : {
          "kmsToService" : {
            "type" : "number",
            "format" : "float"
          },
          "daysToService" : {
            "type" : "number",
            "format" : "float"
          },
          "estimatedKmsPerDay" : {
            "type" : "integer",
            "format" : "int32"
          },
          "dueKms" : {
            "type" : "number",
            "format" : "double"
          },
          "overdue" : {
            "type" : "boolean"
          },
          "dueDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "dueDateSource" : {
            "type" : "string",
            "enum" : [ "VEHICLE", "ESTIMATE" ]
          },
          "updatedDateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "referenceDueDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "firstJourneyDueKms" : {
            "type" : "integer",
            "format" : "int32"
          },
          "firstJourneyDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "manualEntry" : {
            "type" : "boolean"
          },
          "manualDueDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "Peripheral" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          }
        }
      },
      "ServiceHistory" : {
        "type" : "object",
        "properties" : {
          "dueKms" : {
            "type" : "number",
            "format" : "double"
          },
          "serviceDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedDateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "serviceOdometer" : {
            "type" : "number",
            "format" : "double"
          },
          "serviceDueDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "overdue" : {
            "type" : "boolean"
          },
          "manualEntry" : {
            "type" : "boolean"
          }
        }
      },
      "TimestampedWithPaginationResultJourneyDetailDriverDto" : {
        "type" : "object",
        "properties" : {
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/JourneyDetailDriverDto"
            }
          },
          "processedDateTime" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "JourneyDetailDriverRequestDto" : {
        "type" : "object",
        "properties" : {
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "groupId" : {
            "type" : "string"
          },
          "pageIndex" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "excludeChildGroups" : {
            "type" : "boolean"
          },
          "driverId" : {
            "type" : "string"
          },
          "dateRange" : {
            "$ref" : "#/components/schemas/DateRange"
          }
        }
      },
      "TimestampedWithPaginationResult" : {
        "type" : "object",
        "properties" : {
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "items" : {
            "type" : "array",
            "items" : {
              "type" : "object"
            }
          },
          "processedDateTime" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "JourneyDetailVehicleDto" : {
        "type" : "object",
        "properties" : {
          "vehicleRegistration" : {
            "type" : "string"
          },
          "vehicleName" : {
            "type" : "string"
          },
          "driverName" : {
            "type" : "string"
          },
          "totalTimeIdledSeconds" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalTimeDrivenSeconds" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalTimeDrivenWithPtoSeconds" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalTimeDrivenWithoutPtoSeconds" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalTimeIdledWithPtoSeconds" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalTimeStoppedSeconds" : {
            "type" : "integer",
            "format" : "int64"
          },
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "startAddress" : {
            "type" : "string"
          },
          "endAddress" : {
            "type" : "string"
          },
          "distanceKm" : {
            "type" : "number",
            "format" : "double"
          },
          "maximumSpeedKph" : {
            "type" : "number",
            "format" : "double"
          },
          "averageSpeedKph" : {
            "type" : "number",
            "format" : "double"
          },
          "startCoordinate" : {
            "$ref" : "#/components/schemas/Coordinate"
          },
          "endCoordinate" : {
            "$ref" : "#/components/schemas/Coordinate"
          },
          "startOdometer" : {
            "type" : "number",
            "format" : "double"
          },
          "endOdometer" : {
            "type" : "number",
            "format" : "double"
          },
          "startLocationName" : {
            "type" : "string"
          },
          "endLocationName" : {
            "type" : "string"
          },
          "startLocationId" : {
            "type" : "string"
          },
          "endLocationId" : {
            "type" : "string"
          },
          "idlingFidelity" : {
            "type" : "integer",
            "format" : "int32"
          },
          "startElectricRangeKm" : {
            "type" : "number",
            "format" : "float"
          },
          "startElectricRangeKmEstimated" : {
            "type" : "boolean"
          },
          "endElectricRangeKm" : {
            "type" : "number",
            "format" : "float"
          },
          "endElectricRangeKmEstimated" : {
            "type" : "boolean"
          },
          "startElectricBatteryLevelPercent" : {
            "type" : "number",
            "format" : "float"
          },
          "startElectricBatteryLevelPercentEstimated" : {
            "type" : "boolean"
          },
          "endElectricBatteryLevelPercent" : {
            "type" : "number",
            "format" : "float"
          },
          "endElectricBatteryLevelPercentEstimated" : {
            "type" : "boolean"
          },
          "startFuelLevelPercentage" : {
            "type" : "number",
            "format" : "float"
          },
          "endFuelLevelPercentage" : {
            "type" : "number",
            "format" : "float"
          },
          "startFuelLevelLitres" : {
            "type" : "number",
            "format" : "float"
          },
          "endFuelLevelLitres" : {
            "type" : "number",
            "format" : "float"
          },
          "startEngineHours" : {
            "type" : "number",
            "format" : "float"
          },
          "endEngineHours" : {
            "type" : "number",
            "format" : "float"
          },
          "fuelUsedPetrolEquivalentLitres" : {
            "type" : "number",
            "format" : "double"
          },
          "co2Kg" : {
            "type" : "number",
            "format" : "double"
          },
          "fuelUsedLitres" : {
            "type" : "number",
            "format" : "double"
          },
          "electricUsedkWh" : {
            "type" : "number",
            "format" : "float"
          },
          "electricUsedkWhEstimated" : {
            "type" : "boolean"
          },
          "gasUsedKg" : {
            "type" : "number",
            "format" : "float"
          },
          "vehicleId" : {
            "type" : "string"
          },
          "vehicleGroupName" : {
            "type" : "string"
          },
          "driverId" : {
            "type" : "string"
          },
          "commonAttributesFromJourneyTimeSheetDetail" : {
            "$ref" : "#/components/schemas/JourneyTimeSheetDetail"
          },
          "commonAttributesFromAsset" : {
            "$ref" : "#/components/schemas/Asset"
          }
        }
      },
      "TimestampedWithPaginationResultJourneyDetailVehicleDto" : {
        "type" : "object",
        "properties" : {
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/JourneyDetailVehicleDto"
            }
          },
          "processedDateTime" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "JourneyDetailVehicleRequestDto" : {
        "type" : "object",
        "properties" : {
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "groupId" : {
            "type" : "string"
          },
          "pageIndex" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "excludeChildGroups" : {
            "type" : "boolean"
          },
          "vehicleId" : {
            "type" : "string"
          },
          "dateRange" : {
            "$ref" : "#/components/schemas/DateRange"
          }
        }
      },
      "LatestJourneyDetailsDriverDto" : {
        "type" : "object",
        "properties" : {
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/JourneyDetailDriverDto"
            }
          },
          "processedDateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "LatestJourneyDetailsDriverRequestDto" : {
        "type" : "object",
        "properties" : {
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "groupId" : {
            "type" : "string"
          },
          "pageIndex" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "excludeChildGroups" : {
            "type" : "boolean"
          },
          "driverId" : {
            "type" : "string"
          },
          "fromDateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "dateRange" : {
            "$ref" : "#/components/schemas/DateRange"
          }
        }
      },
      "LatestJourneyDetailsVehicleDto" : {
        "type" : "object",
        "properties" : {
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/JourneyDetailVehicleDto"
            }
          },
          "processedDateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "LatestJourneyDetailsVehicleRequestDto" : {
        "type" : "object",
        "properties" : {
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "groupId" : {
            "type" : "string"
          },
          "pageIndex" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "excludeChildGroups" : {
            "type" : "boolean"
          },
          "vehicleId" : {
            "type" : "string"
          },
          "fromDateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "dateRange" : {
            "$ref" : "#/components/schemas/DateRange"
          }
        }
      },
      "JourneyDriverReportTriggerRequest" : {
        "type" : "object",
        "properties" : {
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "dateRange" : {
            "$ref" : "#/components/schemas/DateRange"
          }
        }
      },
      "JourneySummaryResponseDto" : {
        "type" : "object",
        "properties" : {
          "vehicleId" : {
            "type" : "string"
          },
          "vehicleName" : {
            "type" : "string"
          },
          "vehicleGroupId" : {
            "type" : "string"
          },
          "vehicleGroupName" : {
            "type" : "string"
          },
          "vehicleModel" : {
            "type" : "string"
          },
          "vehicleMake" : {
            "type" : "string"
          },
          "vehicleVersion" : {
            "type" : "string"
          },
          "vehicleGroupType" : {
            "type" : "string"
          },
          "vehicleType" : {
            "type" : "string"
          },
          "primaryFuelType" : {
            "type" : "string"
          },
          "secondaryFuelType" : {
            "type" : "string"
          },
          "energyType" : {
            "type" : "string"
          },
          "distanceKM" : {
            "type" : "number",
            "format" : "double"
          },
          "fuelUsedLitres" : {
            "type" : "number",
            "format" : "double"
          },
          "gasUsedKg" : {
            "type" : "number",
            "format" : "double"
          },
          "electricUsedkWh" : {
            "type" : "number",
            "format" : "double"
          },
          "electricUsedkWhEstimated" : {
            "type" : "boolean"
          },
          "fuelUsedPetrolEquivalentLitres" : {
            "type" : "number",
            "format" : "double"
          },
          "co2Kg" : {
            "type" : "number",
            "format" : "double"
          },
          "driveTimeSeconds" : {
            "type" : "integer",
            "format" : "int64"
          },
          "idleTimeSeconds" : {
            "type" : "integer",
            "format" : "int64"
          },
          "percentageFuel" : {
            "type" : "number",
            "format" : "double"
          },
          "percentageGas" : {
            "type" : "number",
            "format" : "double"
          },
          "percentageElectric" : {
            "type" : "number",
            "format" : "double"
          }
        }
      },
      "WithPaginationResultJourneySummaryResponseDto" : {
        "type" : "object",
        "properties" : {
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/JourneySummaryResponseDto"
            }
          }
        }
      },
      "JourneySummaryRequest" : {
        "required" : [ "groupId" ],
        "type" : "object",
        "properties" : {
          "pageIndex" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "groupId" : {
            "type" : "string"
          },
          "dateRange" : {
            "$ref" : "#/components/schemas/DateRange"
          }
        }
      },
      "LocationCategoryDto" : {
        "required" : [ "icon", "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "pattern" : "^[\\w]*$",
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "icon" : {
            "type" : "string"
          }
        }
      },
      "LocationCategoryWithLocationsCountDto" : {
        "required" : [ "icon", "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "pattern" : "^[\\w]*$",
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "icon" : {
            "type" : "string"
          },
          "locationsCount" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "AddressDto" : {
        "required" : [ "city", "country", "postCode" ],
        "type" : "object",
        "properties" : {
          "formattedAddress" : {
            "type" : "string"
          },
          "road" : {
            "type" : "string"
          },
          "roadNumber" : {
            "type" : "string"
          },
          "city" : {
            "maxLength" : 50,
            "minLength" : 0,
            "type" : "string"
          },
          "postCode" : {
            "maxLength" : 20,
            "minLength" : 0,
            "type" : "string"
          },
          "country" : {
            "maxLength" : 50,
            "minLength" : 0,
            "type" : "string"
          },
          "roadType" : {
            "type" : "string"
          }
        }
      },
      "AddressSearchDto" : {
        "type" : "object",
        "properties" : {
          "formattedAddress" : {
            "type" : "string"
          },
          "road" : {
            "type" : "string"
          },
          "roadNumber" : {
            "type" : "string"
          },
          "city" : {
            "type" : "string"
          },
          "stateProvince" : {
            "type" : "string"
          },
          "postCode" : {
            "type" : "string"
          },
          "country" : {
            "type" : "string"
          }
        }
      },
      "NearestLocationsSearchResultDto" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "straightLineDistanceKilometers" : {
            "type" : "number",
            "format" : "double"
          }
        }
      },
      "NearestLocationsSearchRequestDto" : {
        "type" : "object",
        "properties" : {
          "longitude" : {
            "type" : "number",
            "format" : "double"
          },
          "latitude" : {
            "type" : "number",
            "format" : "double"
          },
          "radius" : {
            "type" : "number",
            "format" : "double"
          },
          "maximumResultsToReturn" : {
            "type" : "integer",
            "format" : "int32"
          },
          "road" : {
            "type" : "string"
          },
          "roadNumber" : {
            "type" : "string"
          },
          "city" : {
            "type" : "string"
          },
          "country" : {
            "type" : "string"
          },
          "postCode" : {
            "type" : "string"
          }
        }
      },
      "BoundingBox" : {
        "type" : "object",
        "properties" : {
          "topRight" : {
            "$ref" : "#/components/schemas/Coordinate"
          },
          "bottomLeft" : {
            "$ref" : "#/components/schemas/Coordinate"
          },
          "size" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "CircularGeofence" : {
        "type" : "object",
        "properties" : {
          "centre" : {
            "$ref" : "#/components/schemas/Coordinate"
          },
          "radiusKm" : {
            "type" : "number",
            "format" : "double"
          },
          "boundingBox" : {
            "$ref" : "#/components/schemas/BoundingBox"
          },
          "size" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "LocationSearchResultDto" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "address" : {
            "$ref" : "#/components/schemas/MMAddressDto"
          },
          "coordinate" : {
            "$ref" : "#/components/schemas/MMCoordinateDto"
          },
          "customerId" : {
            "type" : "string"
          },
          "customerReference" : {
            "type" : "string"
          },
          "categoryId" : {
            "type" : "string"
          },
          "categoryName" : {
            "type" : "string"
          },
          "radiusKm" : {
            "type" : "number",
            "format" : "double"
          },
          "polygon" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MMCoordinateDto"
            }
          },
          "type" : {
            "type" : "string"
          },
          "reference" : {
            "type" : "string"
          },
          "phoneNumber" : {
            "type" : "string"
          },
          "contact" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "notes" : {
            "type" : "string"
          },
          "polygonGeofence" : {
            "$ref" : "#/components/schemas/PolygonGeofence"
          },
          "circularGeofence" : {
            "$ref" : "#/components/schemas/CircularGeofence"
          }
        }
      },
      "MMAddressDto" : {
        "type" : "object",
        "properties" : {
          "formattedAddress" : {
            "type" : "string"
          },
          "road" : {
            "type" : "string"
          },
          "roadNumber" : {
            "type" : "string"
          },
          "city" : {
            "type" : "string"
          },
          "postCode" : {
            "type" : "string"
          },
          "country" : {
            "type" : "string"
          },
          "roadType" : {
            "type" : "string"
          }
        }
      },
      "MMCoordinateDto" : {
        "type" : "object",
        "properties" : {
          "longitude" : {
            "type" : "number",
            "format" : "double"
          },
          "latitude" : {
            "type" : "number",
            "format" : "double"
          }
        }
      },
      "PolygonGeofence" : {
        "type" : "object",
        "properties" : {
          "polygon" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Coordinate"
            }
          },
          "size" : {
            "type" : "integer",
            "format" : "int64"
          },
          "centre" : {
            "$ref" : "#/components/schemas/Coordinate"
          },
          "boundingBox" : {
            "$ref" : "#/components/schemas/BoundingBox"
          }
        }
      },
      "WithPaginationResultLocationSearchResultDto" : {
        "type" : "object",
        "properties" : {
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LocationSearchResultDto"
            }
          }
        }
      },
      "LocationSearchRequestDto" : {
        "type" : "object",
        "properties" : {
          "pageIndex" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string"
          },
          "address" : {
            "type" : "string"
          },
          "category" : {
            "type" : "string"
          },
          "reference" : {
            "type" : "string"
          },
          "phoneNumber" : {
            "type" : "string"
          },
          "contact" : {
            "type" : "string"
          }
        }
      },
      "PersonSettingsResultDto" : {
        "type" : "object",
        "properties" : {
          "customerId" : {
            "type" : "string"
          },
          "personId" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "enabledFeatures" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "unitSettings" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "userSettings" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "classifications" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "groupId" : {
            "type" : "string"
          },
          "ragThreshold" : {
            "$ref" : "#/components/schemas/RagThresholdDto"
          },
          "emailAddress" : {
            "type" : "string"
          },
          "approverEmailAddress" : {
            "type" : "string"
          },
          "emergencyPhoneNumber" : {
            "type" : "string"
          },
          "locale" : {
            "type" : "string"
          },
          "canChangePassword" : {
            "type" : "boolean"
          },
          "accountRegion" : {
            "type" : "string"
          }
        }
      },
      "RagThresholdDto" : {
        "type" : "object",
        "properties" : {
          "greenThreshold" : {
            "type" : "integer",
            "format" : "int32"
          },
          "amberThreshold" : {
            "type" : "integer",
            "format" : "int32"
          },
          "redThreshold" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "PersonEmailUpdateRequestDto" : {
        "type" : "object",
        "properties" : {
          "emailAddress" : {
            "type" : "string"
          },
          "approverEmailAddress" : {
            "type" : "string"
          }
        }
      },
      "DataCleanupSettingDto" : {
        "type" : "object",
        "properties" : {
          "truncate" : {
            "type" : "boolean"
          },
          "daysRetention" : {
            "type" : "integer",
            "format" : "int32"
          },
          "daysRetentionExtended" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "PersonSettingsWithTaxAndExpenseResultDto" : {
        "type" : "object",
        "properties" : {
          "customerId" : {
            "type" : "string"
          },
          "personId" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "enabledFeatures" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "unitSettings" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "userSettings" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "classifications" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "groupId" : {
            "type" : "string"
          },
          "ragThreshold" : {
            "$ref" : "#/components/schemas/RagThresholdDto"
          },
          "emailAddress" : {
            "type" : "string"
          },
          "approverEmailAddress" : {
            "type" : "string"
          },
          "emergencyPhoneNumber" : {
            "type" : "string"
          },
          "locale" : {
            "type" : "string"
          },
          "canChangePassword" : {
            "type" : "boolean"
          },
          "accountRegion" : {
            "type" : "string"
          },
          "personalPurposes" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "businessPurposes" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "mileageRate" : {
            "type" : "number"
          },
          "timezoneId" : {
            "type" : "string"
          },
          "timezoneCodes" : {
            "$ref" : "#/components/schemas/TimezoneCodesDto"
          },
          "currency" : {
            "type" : "string"
          },
          "managerId" : {
            "type" : "string"
          },
          "mobileNumber" : {
            "type" : "string"
          },
          "homeBaseId" : {
            "type" : "string"
          },
          "roleId" : {
            "type" : "string"
          },
          "skin" : {
            "type" : "string"
          },
          "customerName" : {
            "type" : "string"
          },
          "enabledCustomerFeatures" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "dataCleanupSettings" : {
            "$ref" : "#/components/schemas/DataCleanupSettingDto"
          },
          "activeModules" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ModuleDto"
            }
          },
          "credentialsType" : {
            "type" : "string"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "hierarchyNodePath" : {
            "type" : "string"
          },
          "branding" : {
            "type" : "string"
          },
          "moveElectricExpert" : {
            "type" : "boolean"
          }
        }
      },
      "TimezoneCodesDto" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "dojoTimezoneCode" : {
            "type" : "string"
          },
          "javaTimezoneId" : {
            "type" : "string"
          },
          "dotNetTimezoneId" : {
            "type" : "string"
          }
        }
      },
      "PersonSettingsPatchRequestDto" : {
        "type" : "object",
        "properties" : {
          "unitSettings" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "emailAddress" : {
            "type" : "string"
          },
          "approverEmailAddress" : {
            "type" : "string"
          },
          "personalPurposes" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "businessPurposes" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "mileageRate" : {
            "type" : "number"
          },
          "currency" : {
            "type" : "string"
          },
          "mobileNumber" : {
            "type" : "string"
          },
          "timezoneId" : {
            "type" : "string"
          }
        }
      },
      "PersonSettingsUpdateRequestDto" : {
        "type" : "object",
        "properties" : {
          "unitSettings" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "RoleDto" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "activeFeatureKeys" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "SpeedingDetailDto" : {
        "type" : "object",
        "properties" : {
          "pageIndex" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "startTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "maxSpeedTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "assetId" : {
            "type" : "string"
          },
          "driverId" : {
            "type" : "string"
          },
          "driverName" : {
            "type" : "string"
          },
          "assetRegistration" : {
            "type" : "string"
          },
          "assetName" : {
            "type" : "string"
          },
          "startAddress" : {
            "type" : "string"
          },
          "endAddress" : {
            "type" : "string"
          },
          "duration" : {
            "type" : "integer",
            "format" : "int64"
          },
          "distanceKms" : {
            "type" : "number",
            "format" : "double"
          },
          "groupName" : {
            "type" : "string"
          },
          "averageSpeed" : {
            "type" : "number",
            "format" : "float"
          },
          "maxSpeed" : {
            "type" : "number",
            "format" : "float"
          },
          "maxPercentageOver" : {
            "type" : "number",
            "format" : "float"
          },
          "maxSpeedAddress" : {
            "type" : "string"
          },
          "maxSpeedCoordinates" : {
            "$ref" : "#/components/schemas/CoordinateDto"
          },
          "startCoordinates" : {
            "$ref" : "#/components/schemas/CoordinateDto"
          },
          "endCoordinates" : {
            "$ref" : "#/components/schemas/CoordinateDto"
          },
          "speedingPointCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "assetSpeedLimitKph" : {
            "type" : "number",
            "format" : "float"
          },
          "roadSpeedLimitKph" : {
            "type" : "number",
            "format" : "float"
          },
          "maxSpeedDistanceKm" : {
            "type" : "number",
            "format" : "double"
          },
          "startLocation" : {
            "type" : "string"
          },
          "endLocation" : {
            "type" : "string"
          },
          "maxSpeedLocation" : {
            "type" : "string"
          },
          "startLocationId" : {
            "type" : "string"
          },
          "endLocationId" : {
            "type" : "string"
          },
          "maxSpeedLocationId" : {
            "type" : "string"
          }
        }
      },
      "WithPaginationResultSpeedingDetailDto" : {
        "type" : "object",
        "properties" : {
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SpeedingDetailDto"
            }
          }
        }
      },
      "PersonSpeedingDetailRequestDto" : {
        "type" : "object",
        "properties" : {
          "pageIndex" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "fromDateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "percentAboveLimit" : {
            "type" : "integer",
            "format" : "int32"
          },
          "excludeChildGroups" : {
            "type" : "boolean"
          },
          "driverId" : {
            "type" : "string"
          },
          "entityId" : {
            "type" : "string"
          },
          "dateRange" : {
            "$ref" : "#/components/schemas/DateRange"
          },
          "groupId" : {
            "type" : "string"
          }
        }
      },
      "WithPaginationResult" : {
        "type" : "object",
        "properties" : {
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "items" : {
            "type" : "array",
            "items" : {
              "type" : "object"
            }
          }
        }
      },
      "AssetSpeedingDetailRequestDto" : {
        "type" : "object",
        "properties" : {
          "pageIndex" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "fromDateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "percentAboveLimit" : {
            "type" : "integer",
            "format" : "int32"
          },
          "excludeChildGroups" : {
            "type" : "boolean"
          },
          "vehicleId" : {
            "type" : "string"
          },
          "entityId" : {
            "type" : "string"
          },
          "dateRange" : {
            "$ref" : "#/components/schemas/DateRange"
          },
          "groupId" : {
            "type" : "string"
          }
        }
      },
      "TriggerSpeedingDetailRequestDto" : {
        "type" : "object",
        "properties" : {
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "GroupResultDto" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "TokenInformationResultDto" : {
        "type" : "object",
        "properties" : {
          "customerId" : {
            "type" : "string"
          },
          "emailAddress" : {
            "type" : "string"
          },
          "userName" : {
            "type" : "string"
          },
          "customerName" : {
            "type" : "string"
          },
          "locale" : {
            "type" : "object",
            "properties" : {
              "language" : {
                "type" : "string"
              },
              "displayName" : {
                "type" : "string"
              },
              "country" : {
                "type" : "string"
              },
              "variant" : {
                "type" : "string"
              },
              "script" : {
                "type" : "string"
              },
              "unicodeLocaleAttributes" : {
                "uniqueItems" : true,
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "unicodeLocaleKeys" : {
                "uniqueItems" : true,
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "displayLanguage" : {
                "type" : "string"
              },
              "displayScript" : {
                "type" : "string"
              },
              "displayCountry" : {
                "type" : "string"
              },
              "displayVariant" : {
                "type" : "string"
              },
              "extensionKeys" : {
                "uniqueItems" : true,
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "iso3Language" : {
                "type" : "string"
              },
              "iso3Country" : {
                "type" : "string"
              }
            }
          },
          "currency" : {
            "type" : "string"
          },
          "personId" : {
            "type" : "string"
          },
          "groupId" : {
            "type" : "string"
          },
          "groupName" : {
            "type" : "string"
          },
          "groupPath" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/GroupResultDto"
            }
          },
          "enabledFeatures" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "fullName" : {
            "type" : "string"
          },
          "customerIds" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "tempAdminUser" : {
            "type" : "boolean"
          }
        }
      },
      "TrackingHistoryResultDto" : {
        "type" : "object",
        "properties" : {
          "eventDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "vehicleId" : {
            "type" : "string"
          },
          "vehicleRegistration" : {
            "type" : "string"
          },
          "vehicleName" : {
            "type" : "string"
          },
          "vehicleGroupName" : {
            "type" : "string"
          },
          "driverId" : {
            "type" : "string"
          },
          "driverName" : {
            "type" : "string"
          },
          "driverGroupName" : {
            "type" : "string"
          },
          "eventStatus" : {
            "type" : "string"
          },
          "longitude" : {
            "type" : "number",
            "format" : "double"
          },
          "latitude" : {
            "type" : "number",
            "format" : "double"
          },
          "formattedAddress" : {
            "type" : "string"
          },
          "locationId" : {
            "type" : "string"
          },
          "locationName" : {
            "type" : "string"
          },
          "locationCategory" : {
            "type" : "string"
          },
          "speed" : {
            "type" : "number",
            "format" : "double"
          },
          "heading" : {
            "type" : "number",
            "format" : "double"
          },
          "inputId" : {
            "type" : "string"
          },
          "inputLabel" : {
            "type" : "string"
          },
          "inputState" : {
            "type" : "string"
          },
          "customInputLabel" : {
            "type" : "string"
          },
          "customInputState" : {
            "type" : "string"
          },
          "cumulativeRuntime" : {
            "type" : "integer",
            "format" : "int64"
          },
          "cumulativeRuntimeType" : {
            "type" : "string",
            "enum" : [ "CAN", "ESTIMATED" ]
          },
          "cumulativeIdleTime" : {
            "type" : "integer",
            "format" : "int64"
          },
          "cumulativePtoTime" : {
            "type" : "integer",
            "format" : "int64"
          },
          "cumulativeDistance" : {
            "type" : "number",
            "format" : "double"
          },
          "cumulativeFuelUsage" : {
            "type" : "number",
            "format" : "double"
          },
          "fuelLevelPercentage" : {
            "type" : "number",
            "format" : "float"
          },
          "fuelLevelLitres" : {
            "type" : "number",
            "format" : "float"
          },
          "electricRangeKm" : {
            "type" : "number",
            "format" : "float"
          },
          "electricRangeKmEstimated" : {
            "type" : "boolean"
          },
          "electricBatteryLevelPercent" : {
            "type" : "number",
            "format" : "float"
          },
          "electricBatteryLevelPercentEstimated" : {
            "type" : "boolean"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "distanceKms" : {
            "type" : "number",
            "format" : "double"
          }
        }
      },
      "WithPaginationResultTrackingHistoryResultDto" : {
        "type" : "object",
        "properties" : {
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TrackingHistoryResultDto"
            }
          }
        }
      },
      "TrackingHistoryDriverRequestDto" : {
        "required" : [ "driverId" ],
        "type" : "object",
        "properties" : {
          "pageIndex" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "dateType" : {
            "type" : "string"
          },
          "driverId" : {
            "type" : "string"
          },
          "driverIdAsSet" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "dateRange" : {
            "$ref" : "#/components/schemas/TrackingVehicleHistoryEventDateRange"
          }
        }
      },
      "TrackingVehicleHistoryEventDateRange" : {
        "type" : "object",
        "properties" : {
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "dateType" : {
            "type" : "string",
            "enum" : [ "EVENT_START_DATE_TIME", "CREATED_TIME" ]
          },
          "supportedDateTypes" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "EVENT_START_DATE_TIME", "CREATED_TIME" ]
            }
          }
        }
      },
      "TrackingHistoryVehicleRequestDto" : {
        "required" : [ "vehicleId" ],
        "type" : "object",
        "properties" : {
          "pageIndex" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "dateType" : {
            "type" : "string"
          },
          "vehicleId" : {
            "type" : "string"
          },
          "vehicleIdAsSet" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "dateRange" : {
            "$ref" : "#/components/schemas/TrackingVehicleHistoryEventDateRange"
          }
        }
      },
      "LatestTrackingHistoryResultsDto" : {
        "type" : "object",
        "properties" : {
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TrackingHistoryResultDto"
            }
          },
          "processedDateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "TrackingLatestHistoryDriverRequestDto" : {
        "required" : [ "driverId" ],
        "type" : "object",
        "properties" : {
          "fromDateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "driverId" : {
            "type" : "string"
          }
        }
      },
      "TrackingLatestHistoryVehicleRequestDto" : {
        "type" : "object",
        "properties" : {
          "fromDateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "vehicleId" : {
            "type" : "string"
          },
          "groupIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "TrackingJourneyDetailResultDto" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "startTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "assetRegistration" : {
            "type" : "string"
          },
          "assetName" : {
            "type" : "string"
          },
          "distanceKms" : {
            "type" : "number",
            "format" : "double"
          },
          "amendedDistanceKms" : {
            "type" : "number",
            "format" : "double"
          },
          "startOdometer" : {
            "type" : "number",
            "format" : "double"
          },
          "endOdometer" : {
            "type" : "number",
            "format" : "double"
          },
          "startAddress" : {
            "type" : "string"
          },
          "endAddress" : {
            "type" : "string"
          },
          "startCoordinate" : {
            "$ref" : "#/components/schemas/Coordinate"
          },
          "endCoordinate" : {
            "$ref" : "#/components/schemas/Coordinate"
          },
          "isPrivate" : {
            "type" : "boolean"
          },
          "state" : {
            "type" : "string"
          },
          "classification" : {
            "type" : "string"
          },
          "lastModifiedTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "notes" : {
            "type" : "string"
          },
          "amendedReason" : {
            "type" : "string"
          },
          "purposeOfTrip" : {
            "type" : "string"
          },
          "amendedStartCoordinate" : {
            "$ref" : "#/components/schemas/Coordinate"
          },
          "amendedEndCoordinate" : {
            "$ref" : "#/components/schemas/Coordinate"
          },
          "amendedStartAddressText" : {
            "type" : "string"
          },
          "amendedEndAddressText" : {
            "type" : "string"
          },
          "amendedExpenseFlag" : {
            "type" : "boolean"
          },
          "submittedCurrencyCode" : {
            "type" : "string"
          },
          "submittedRate" : {
            "type" : "number",
            "format" : "double"
          }
        }
      },
      "WithPaginationResultTrackingJourneyDetailResultDto" : {
        "type" : "object",
        "properties" : {
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TrackingJourneyDetailResultDto"
            }
          }
        }
      },
      "TrackingJourneyDetailRequestDto" : {
        "type" : "object",
        "properties" : {
          "pageIndex" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "classifications" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "ifModifiedSince" : {
            "type" : "string",
            "format" : "date-time"
          },
          "startDateRange" : {
            "$ref" : "#/components/schemas/DateRange"
          }
        }
      },
      "TrackingJourneySummaryResultDto" : {
        "type" : "object",
        "properties" : {
          "assetRegistration" : {
            "type" : "string"
          },
          "assetId" : {
            "type" : "string"
          },
          "assetName" : {
            "type" : "string"
          },
          "groupName" : {
            "type" : "string"
          },
          "distance" : {
            "type" : "number",
            "format" : "double"
          },
          "odometerType" : {
            "type" : "string"
          }
        }
      },
      "TrackingJourneySummaryRequestDto" : {
        "required" : [ "endDate", "startDate" ],
        "type" : "object",
        "properties" : {
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "vehicleIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "groupIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "startDateRange" : {
            "$ref" : "#/components/schemas/DateRange"
          }
        }
      },
      "JourneySubmitResponseDto" : {
        "type" : "object",
        "properties" : {
          "unsubmittedManualJourneyIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "unsubmittedJourneyIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "TrackingJourneySubmitDto" : {
        "required" : [ "journeyIds", "manualJourneyIds", "rate" ],
        "type" : "object",
        "properties" : {
          "ccy" : {
            "type" : "string"
          },
          "rate" : {
            "minimum" : 0,
            "type" : "number",
            "format" : "double"
          },
          "journeyIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "manualJourneyIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "showPrivateReportSummary" : {
            "type" : "boolean"
          }
        }
      },
      "TrackingJourneyDetailUpdateRequestDto" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "pattern" : "^[\\w]*$",
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          },
          "classification" : {
            "type" : "string"
          },
          "notes" : {
            "maxLength" : 300,
            "minLength" : 0,
            "type" : "string"
          },
          "amendedDistanceKms" : {
            "type" : "number",
            "format" : "double"
          },
          "updateAmendedDistanceKms" : {
            "type" : "boolean"
          },
          "updateAmendedExpense" : {
            "type" : "boolean"
          },
          "amendedReason" : {
            "maxLength" : 300,
            "minLength" : 0,
            "type" : "string"
          },
          "purposeOfTrip" : {
            "maxLength" : 300,
            "minLength" : 0,
            "type" : "string"
          },
          "amendedStartCoordinate" : {
            "$ref" : "#/components/schemas/CoordinateDto"
          },
          "amendedEndCoordinate" : {
            "$ref" : "#/components/schemas/CoordinateDto"
          },
          "amendedStartAddressText" : {
            "maxLength" : 300,
            "minLength" : 0,
            "type" : "string"
          },
          "amendedEndAddressText" : {
            "maxLength" : 300,
            "minLength" : 0,
            "type" : "string"
          }
        }
      },
      "LatestTrackingInputEventsResultsDto" : {
        "type" : "object",
        "properties" : {
          "assetId" : {
            "type" : "string"
          },
          "assetRegistration" : {
            "type" : "string"
          },
          "assetName" : {
            "type" : "string"
          },
          "assetVin" : {
            "type" : "string"
          },
          "driverId" : {
            "type" : "string"
          },
          "driverName" : {
            "type" : "string"
          },
          "eventKey" : {
            "type" : "string"
          },
          "inputEvents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TrackingLiveInputEventOverviewDto"
            }
          },
          "activeFaultCodes" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "InputLive" : {
        "type" : "object",
        "properties" : {
          "inputId" : {
            "type" : "string"
          },
          "inputLabel" : {
            "type" : "string"
          },
          "inputState" : {
            "type" : "string"
          },
          "customInputLabel" : {
            "type" : "string"
          },
          "customInputState" : {
            "type" : "string"
          }
        }
      },
      "LatestTrackingLiveResultsDto" : {
        "type" : "object",
        "properties" : {
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TrackingLiveResultDto"
            }
          },
          "processedDateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "TrackingLiveResultDto" : {
        "type" : "object",
        "properties" : {
          "assetRegistration" : {
            "type" : "string"
          },
          "assetName" : {
            "type" : "string"
          },
          "assetVin" : {
            "type" : "string"
          },
          "assetId" : {
            "type" : "string"
          },
          "driverId" : {
            "type" : "string"
          },
          "driverName" : {
            "type" : "string"
          },
          "driverGroupId" : {
            "type" : "string"
          },
          "driverGroupName" : {
            "type" : "string"
          },
          "assetGroupId" : {
            "type" : "string"
          },
          "assetGroupName" : {
            "type" : "string"
          },
          "date" : {
            "type" : "string",
            "format" : "date-time"
          },
          "status" : {
            "type" : "string"
          },
          "eventType" : {
            "type" : "string"
          },
          "speed" : {
            "type" : "number",
            "format" : "double"
          },
          "odometer" : {
            "type" : "number",
            "format" : "double"
          },
          "heading" : {
            "type" : "number",
            "format" : "double"
          },
          "latitude" : {
            "type" : "number",
            "format" : "double"
          },
          "longitude" : {
            "type" : "number",
            "format" : "double"
          },
          "road" : {
            "type" : "string"
          },
          "roadNumber" : {
            "type" : "string"
          },
          "city" : {
            "type" : "string"
          },
          "postCode" : {
            "type" : "string"
          },
          "country" : {
            "type" : "string"
          },
          "formattedAddress" : {
            "type" : "string"
          },
          "division" : {
            "type" : "string"
          },
          "locationName" : {
            "type" : "string"
          },
          "locationGroupName" : {
            "type" : "string"
          },
          "locationId" : {
            "type" : "string"
          },
          "inputs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/InputLive"
            }
          },
          "inputEvents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TrackingLiveInputEventOverviewDto"
            }
          },
          "privacy" : {
            "type" : "boolean"
          },
          "tags" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "assetType" : {
            "type" : "string"
          },
          "energyType" : {
            "type" : "string"
          },
          "fuelType" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "electricRangeKm" : {
            "type" : "number",
            "format" : "float"
          },
          "electricRangeKmEstimated" : {
            "type" : "boolean"
          },
          "electricBatteryLevelPercent" : {
            "type" : "number",
            "format" : "float"
          },
          "electricBatteryLevelPercentEstimated" : {
            "type" : "boolean"
          },
          "electricCharging" : {
            "type" : "boolean"
          },
          "electricChargingTimeRemainingMins" : {
            "type" : "number",
            "format" : "float"
          },
          "fuelLevelLitres" : {
            "type" : "number",
            "format" : "float"
          },
          "fuelLevelPercentage" : {
            "type" : "number",
            "format" : "float"
          },
          "engineTotalHours" : {
            "type" : "number",
            "format" : "float"
          },
          "engineRpm" : {
            "type" : "number",
            "format" : "float"
          },
          "engineTotalHoursType" : {
            "type" : "string",
            "enum" : [ "CAN", "ESTIMATED" ]
          },
          "serialNumber" : {
            "type" : "integer",
            "format" : "int64"
          },
          "ignitionStatus" : {
            "type" : "string",
            "enum" : [ "ON", "OFF" ]
          },
          "batteryVoltage" : {
            "type" : "number",
            "format" : "float"
          },
          "externalPowerVoltage" : {
            "type" : "number",
            "format" : "float"
          },
          "activeFaultCodes" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "TrackingLiveRequestDto" : {
        "type" : "object",
        "properties" : {
          "vehicleIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "groupIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "driverIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "fromDateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "showAllVehicleStatus" : {
            "type" : "boolean"
          },
          "locale" : {
            "type" : "string"
          },
          "hideSpeedIfSpeedSensitive" : {
            "type" : "boolean"
          }
        }
      },
      "Altitude" : {
        "required" : [ "altitudeUnits" ],
        "type" : "object",
        "properties" : {
          "altitudeUnits" : {
            "type" : "string",
            "xml" : {
              "name" : "AltitudeUnits"
            },
            "enum" : [ "FEET_INCHES", "METERS" ]
          },
          "feet" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "name" : "Feet"
            }
          },
          "inches" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "name" : "Inches"
            }
          },
          "meters" : {
            "type" : "number",
            "xml" : {
              "name" : "Meters"
            }
          }
        }
      },
      "CumulativeOperatingHours" : {
        "required" : [ "hour" ],
        "type" : "object",
        "properties" : {
          "hour" : {
            "type" : "object",
            "properties" : {
              "sign" : {
                "type" : "integer",
                "format" : "int32"
              },
              "months" : {
                "type" : "integer",
                "format" : "int32"
              },
              "seconds" : {
                "type" : "integer",
                "format" : "int32"
              },
              "days" : {
                "type" : "integer",
                "format" : "int32"
              },
              "years" : {
                "type" : "integer",
                "format" : "int32"
              },
              "hours" : {
                "type" : "integer",
                "format" : "int32"
              },
              "minutes" : {
                "type" : "integer",
                "format" : "int32"
              },
              "xmlschemaType" : {
                "type" : "object",
                "properties" : {
                  "namespaceURI" : {
                    "type" : "string"
                  },
                  "localPart" : {
                    "type" : "string"
                  },
                  "prefix" : {
                    "type" : "string"
                  }
                }
              }
            },
            "xml" : {
              "name" : "Hour"
            }
          },
          "resetDateTime" : {
            "type" : "string",
            "format" : "date-time",
            "xml" : {
              "name" : "ResetDateTime"
            }
          },
          "datetime" : {
            "type" : "string",
            "format" : "date-time",
            "xml" : {
              "attribute" : true
            }
          }
        }
      },
      "Distance" : {
        "required" : [ "odometerUnits" ],
        "type" : "object",
        "properties" : {
          "odometerUnits" : {
            "type" : "string",
            "xml" : {
              "name" : "OdometerUnits"
            },
            "enum" : [ "MILE", "KILOMETER" ]
          },
          "odometer" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "name" : "Odometer"
            }
          },
          "resetDateTime" : {
            "type" : "string",
            "format" : "date-time",
            "xml" : {
              "name" : "ResetDateTime"
            }
          },
          "datetime" : {
            "type" : "string",
            "format" : "date-time",
            "xml" : {
              "attribute" : true
            }
          }
        }
      },
      "Equipment" : {
        "required" : [ "equipmentHeader" ],
        "type" : "object",
        "properties" : {
          "equipmentHeader" : {
            "$ref" : "#/components/schemas/EquipmentHeader"
          },
          "location" : {
            "$ref" : "#/components/schemas/Location"
          },
          "cumulativeOperatingHours" : {
            "$ref" : "#/components/schemas/CumulativeOperatingHours"
          },
          "fuelUsed" : {
            "$ref" : "#/components/schemas/FuelUsed"
          },
          "fuelUsedLast24" : {
            "$ref" : "#/components/schemas/FuelUsedLast24"
          },
          "distance" : {
            "$ref" : "#/components/schemas/Distance"
          }
        }
      },
      "EquipmentHeader" : {
        "type" : "object",
        "properties" : {
          "unitInstallDateTime" : {
            "type" : "string",
            "format" : "date-time",
            "xml" : {
              "name" : "UnitInstallDateTime"
            }
          },
          "make" : {
            "type" : "string",
            "xml" : {
              "name" : "Make"
            }
          },
          "model" : {
            "type" : "string",
            "xml" : {
              "name" : "Model"
            }
          },
          "equipmentID" : {
            "type" : "string",
            "xml" : {
              "name" : "EquipmentID"
            }
          },
          "serialNumber" : {
            "type" : "string",
            "xml" : {
              "name" : "SerialNumber"
            }
          }
        }
      },
      "Fleet" : {
        "required" : [ "equipment" ],
        "type" : "object",
        "properties" : {
          "equipment" : {
            "type" : "array",
            "xml" : {
              "name" : "Equipment"
            },
            "items" : {
              "$ref" : "#/components/schemas/Equipment"
            }
          },
          "version" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "attribute" : true
            }
          },
          "snapshotTime" : {
            "type" : "string",
            "format" : "date-time",
            "xml" : {
              "attribute" : true
            }
          }
        },
        "xml" : {
          "name" : "Fleet"
        }
      },
      "FuelUsed" : {
        "required" : [ "fuelUnits" ],
        "type" : "object",
        "properties" : {
          "fuelUnits" : {
            "type" : "string",
            "xml" : {
              "name" : "FuelUnits"
            },
            "enum" : [ "GALLON", "LITER" ]
          },
          "fuelConsumed" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "name" : "FuelConsumed"
            }
          },
          "resetDateTime" : {
            "type" : "string",
            "format" : "date-time",
            "xml" : {
              "name" : "ResetDateTime"
            }
          },
          "datetime" : {
            "type" : "string",
            "format" : "date-time",
            "xml" : {
              "attribute" : true
            }
          }
        }
      },
      "FuelUsedLast24" : {
        "required" : [ "fuelUnits" ],
        "type" : "object",
        "properties" : {
          "fuelUnits" : {
            "type" : "string",
            "xml" : {
              "name" : "FuelUnits"
            },
            "enum" : [ "GALLON", "LITER" ]
          },
          "fuelConsumed" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "name" : "FuelConsumed"
            }
          },
          "datetime" : {
            "type" : "string",
            "format" : "date-time",
            "xml" : {
              "attribute" : true
            }
          }
        }
      },
      "Location" : {
        "required" : [ "altitudeUnits", "latitude", "longitude" ],
        "type" : "object",
        "properties" : {
          "latitude" : {
            "type" : "number",
            "xml" : {
              "name" : "Latitude"
            }
          },
          "longitude" : {
            "type" : "number",
            "xml" : {
              "name" : "Longitude"
            }
          },
          "altitude" : {
            "$ref" : "#/components/schemas/Altitude"
          },
          "altitudeUnits" : {
            "type" : "string",
            "xml" : {
              "name" : "AltitudeUnits"
            },
            "enum" : [ "FEET_INCHES", "METERS" ]
          },
          "datetime" : {
            "type" : "string",
            "format" : "date-time",
            "xml" : {
              "attribute" : true
            }
          }
        }
      },
      "BaseTrackingLiveRequestDto" : {
        "type" : "object",
        "properties" : {
          "vehicleIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "groupIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "driverIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "fromDateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "showAllVehicleStatus" : {
            "type" : "boolean"
          }
        }
      },
      "Feature" : {
        "type" : "object",
        "properties" : {
          "properties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "geometry" : {
            "$ref" : "#/components/schemas/Geometry"
          },
          "type" : {
            "type" : "string"
          }
        }
      },
      "FeatureCollection" : {
        "type" : "object",
        "properties" : {
          "features" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Feature"
            }
          },
          "type" : {
            "type" : "string"
          }
        }
      },
      "Geometry" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string"
          }
        }
      },
      "ManualJourneyDto" : {
        "required" : [ "purposeOfTrip", "reasonForClaim", "startDate" ],
        "type" : "object",
        "properties" : {
          "startCoordinate" : {
            "$ref" : "#/components/schemas/CoordinateDto"
          },
          "endCoordinate" : {
            "$ref" : "#/components/schemas/CoordinateDto"
          },
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "distanceClaimed" : {
            "type" : "number",
            "format" : "double"
          },
          "purposeOfTrip" : {
            "maxLength" : 300,
            "minLength" : 0,
            "type" : "string"
          },
          "reasonForClaim" : {
            "maxLength" : 300,
            "minLength" : 0,
            "type" : "string"
          },
          "personId" : {
            "pattern" : "^[\\w]*$",
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          },
          "classification" : {
            "type" : "string"
          },
          "startAddressText" : {
            "maxLength" : 300,
            "minLength" : 0,
            "type" : "string"
          },
          "endAddressText" : {
            "maxLength" : 300,
            "minLength" : 0,
            "type" : "string"
          },
          "notes" : {
            "maxLength" : 300,
            "minLength" : 0,
            "type" : "string"
          },
          "submittedCurrencyCode" : {
            "type" : "string"
          },
          "submittedRate" : {
            "type" : "number",
            "format" : "double"
          },
          "id" : {
            "pattern" : "^[\\w]*$",
            "type" : "string"
          }
        }
      },
      "ManualJourneyBaseDto" : {
        "required" : [ "purposeOfTrip", "reasonForClaim", "startDate" ],
        "type" : "object",
        "properties" : {
          "startCoordinate" : {
            "$ref" : "#/components/schemas/CoordinateDto"
          },
          "endCoordinate" : {
            "$ref" : "#/components/schemas/CoordinateDto"
          },
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "distanceClaimed" : {
            "type" : "number",
            "format" : "double"
          },
          "purposeOfTrip" : {
            "maxLength" : 300,
            "minLength" : 0,
            "type" : "string"
          },
          "reasonForClaim" : {
            "maxLength" : 300,
            "minLength" : 0,
            "type" : "string"
          },
          "personId" : {
            "pattern" : "^[\\w]*$",
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          },
          "classification" : {
            "type" : "string"
          },
          "startAddressText" : {
            "maxLength" : 300,
            "minLength" : 0,
            "type" : "string"
          },
          "endAddressText" : {
            "maxLength" : 300,
            "minLength" : 0,
            "type" : "string"
          },
          "notes" : {
            "maxLength" : 300,
            "minLength" : 0,
            "type" : "string"
          },
          "submittedCurrencyCode" : {
            "type" : "string"
          },
          "submittedRate" : {
            "type" : "number",
            "format" : "double"
          }
        }
      },
      "MultipleManualJourneysResponseDto" : {
        "type" : "object",
        "properties" : {
          "failedJourneys" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/WithErrorResultManualJourneyDto"
            }
          },
          "succesfulJourneys" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "WithErrorResultManualJourneyDto" : {
        "type" : "object",
        "properties" : {
          "item" : {
            "$ref" : "#/components/schemas/ManualJourneyDto"
          },
          "error" : {
            "type" : "string"
          }
        }
      },
      "ManualJourneyRequestDto" : {
        "type" : "object",
        "properties" : {
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "UserTokenDto" : {
        "type" : "object",
        "properties" : {
          "token" : {
            "type" : "string"
          },
          "expiryTime" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "UpdatePasswordResultDto" : {
        "type" : "object",
        "properties" : {
          "personId" : {
            "type" : "string"
          },
          "personName" : {
            "type" : "string"
          }
        }
      },
      "UpdatePasswordRequestDto" : {
        "type" : "object",
        "properties" : {
          "token" : {
            "type" : "string"
          },
          "newPassword" : {
            "type" : "string"
          },
          "reseller" : {
            "type" : "string"
          }
        }
      },
      "UtilisationDriverDto" : {
        "type" : "object",
        "properties" : {
          "driverId" : {
            "type" : "string"
          },
          "driverName" : {
            "type" : "string"
          },
          "groupName" : {
            "type" : "string"
          },
          "utilisation" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UtilisationDto"
            }
          }
        }
      },
      "UtilisationDriverResultDto" : {
        "type" : "object",
        "properties" : {
          "utilisations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UtilisationDriverDto"
            }
          },
          "averageStartTime" : {
            "type" : "string"
          },
          "averageEndTime" : {
            "type" : "string"
          }
        }
      },
      "UtilisationDto" : {
        "type" : "object",
        "properties" : {
          "firstStart" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastStop" : {
            "type" : "string",
            "format" : "date-time"
          },
          "totalTime" : {
            "type" : "integer",
            "format" : "int64"
          },
          "driveTime" : {
            "type" : "integer",
            "format" : "int64"
          },
          "driveTimeWithPto" : {
            "type" : "integer",
            "format" : "int64"
          },
          "driveTimeWithoutPto" : {
            "type" : "integer",
            "format" : "int64"
          },
          "idleTime" : {
            "type" : "integer",
            "format" : "int64"
          },
          "idleTimeWithPto" : {
            "type" : "integer",
            "format" : "int64"
          },
          "stopTime" : {
            "type" : "integer",
            "format" : "int64"
          },
          "countOfStopTime" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "UtilisationDriverRequestDto" : {
        "type" : "object",
        "properties" : {
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "driverId" : {
            "type" : "string"
          },
          "groupId" : {
            "type" : "string"
          },
          "startDateRange" : {
            "$ref" : "#/components/schemas/DateRange"
          }
        }
      },
      "UtilisationVehicleDto" : {
        "type" : "object",
        "properties" : {
          "assetId" : {
            "type" : "string"
          },
          "assetRegistration" : {
            "type" : "string"
          },
          "assetName" : {
            "type" : "string"
          },
          "groupName" : {
            "type" : "string"
          },
          "utilisation" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UtilisationDto"
            }
          },
          "averageStartTime" : {
            "type" : "string"
          },
          "averageEndTime" : {
            "type" : "string"
          }
        }
      },
      "UtilisationVehicleResultDto" : {
        "type" : "object",
        "properties" : {
          "utilisations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UtilisationVehicleDto"
            }
          },
          "averageStartTime" : {
            "type" : "string"
          },
          "averageEndTime" : {
            "type" : "string"
          }
        }
      },
      "UtilisationVehicleRequestDto" : {
        "type" : "object",
        "properties" : {
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "vehicleId" : {
            "type" : "string"
          },
          "groupId" : {
            "type" : "string"
          },
          "startDateRange" : {
            "$ref" : "#/components/schemas/DateRange"
          }
        }
      },
      "NearestVehiclesSearchResultDto" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "registration" : {
            "type" : "string"
          },
          "straightLineDistanceKilometers" : {
            "type" : "number",
            "format" : "double"
          }
        }
      },
      "NearestVehiclesSearchRequestDto" : {
        "type" : "object",
        "properties" : {
          "lastMovedStartDateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastMovedEndDateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "longitude" : {
            "type" : "number",
            "format" : "double"
          },
          "latitude" : {
            "type" : "number",
            "format" : "double"
          },
          "radius" : {
            "type" : "number",
            "format" : "double"
          },
          "maximumResultsToReturn" : {
            "type" : "integer",
            "format" : "int32"
          },
          "road" : {
            "type" : "string"
          },
          "roadNumber" : {
            "type" : "string"
          },
          "city" : {
            "type" : "string"
          },
          "country" : {
            "type" : "string"
          },
          "postCode" : {
            "type" : "string"
          }
        }
      },
      "VehicleCostsDto" : {
        "type" : "object",
        "properties" : {
          "yearOfManufacture" : {
            "type" : "integer",
            "format" : "int32"
          },
          "ownershipStartDate" : {
            "type" : "string",
            "format" : "date"
          },
          "ownershipEndDate" : {
            "type" : "string",
            "format" : "date"
          },
          "purchaseCost" : {
            "type" : "number"
          },
          "monthlyLeaseCost" : {
            "type" : "number"
          },
          "monthlyInsuranceCost" : {
            "type" : "number"
          },
          "monthlyMaintenanceCost" : {
            "type" : "number"
          },
          "scheduledMaintenanceAmount" : {
            "type" : "number"
          },
          "unscheduledMaintenanceAmount" : {
            "type" : "number"
          },
          "monthlyFuelCost" : {
            "type" : "number"
          },
          "mileageAuthorised" : {
            "type" : "integer",
            "format" : "int32"
          },
          "costPerMileOverLimit" : {
            "type" : "number"
          },
          "costOfDisposal" : {
            "type" : "number"
          },
          "buyoutAmount" : {
            "type" : "number"
          },
          "costCurrency" : {
            "type" : "string"
          }
        }
      },
      "VehicleSearchResultDto" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "registration" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "groupId" : {
            "type" : "string"
          },
          "groupName" : {
            "type" : "string"
          },
          "odometerValue" : {
            "type" : "number",
            "format" : "double"
          },
          "odometerType" : {
            "type" : "string"
          },
          "make" : {
            "type" : "string"
          },
          "model" : {
            "type" : "string"
          },
          "tags" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "featureTags" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "defaultDriverId" : {
            "type" : "string"
          },
          "tempDriverId" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string"
          },
          "assetCosts" : {
            "$ref" : "#/components/schemas/VehicleCostsDto"
          },
          "idlingFidelity" : {
            "type" : "integer",
            "format" : "int32"
          },
          "energyType" : {
            "type" : "string"
          },
          "fuelType" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "engineTotalHours" : {
            "type" : "number",
            "format" : "float"
          },
          "engineTotalHoursType" : {
            "type" : "string",
            "enum" : [ "CAN", "ESTIMATED" ]
          },
          "engineTotalHoursLastModified" : {
            "type" : "string",
            "format" : "date-time"
          },
          "odometerLastModified" : {
            "type" : "string",
            "format" : "date-time"
          },
          "assetTypeGroup" : {
            "type" : "string"
          },
          "serialNumber" : {
            "type" : "integer",
            "format" : "int64"
          },
          "activeFaultCodes" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "secondaryGroups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/IdNameDto"
            }
          }
        }
      },
      "WithPaginationResultVehicleSearchResultDto" : {
        "type" : "object",
        "properties" : {
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/VehicleSearchResultDto"
            }
          }
        }
      },
      "VehicleSearchRequestDto" : {
        "type" : "object",
        "properties" : {
          "pageIndex" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "vehicleIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "groupIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "registration" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "VehicleSearchResultFaultDto" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string"
          },
          "code" : {
            "type" : "string"
          },
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "startOdometer" : {
            "type" : "number",
            "format" : "double"
          },
          "endOdometer" : {
            "type" : "number",
            "format" : "double"
          },
          "type" : {
            "type" : "string"
          },
          "inProgress" : {
            "type" : "boolean"
          },
          "details" : {
            "$ref" : "#/components/schemas/FaultDetailsResultDto"
          }
        }
      },
      "VehicleSearchResultWithFaultsDto" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "groupName" : {
            "type" : "string"
          },
          "groupId" : {
            "type" : "string"
          },
          "make" : {
            "type" : "string"
          },
          "model" : {
            "type" : "string"
          },
          "version" : {
            "type" : "string"
          },
          "driverId" : {
            "type" : "string"
          },
          "faults" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/VehicleSearchResultFaultDto"
            }
          },
          "name" : {
            "type" : "string"
          },
          "registration" : {
            "type" : "string"
          }
        }
      },
      "WithPaginationResultVehicleSearchResultWithFaultsDto" : {
        "type" : "object",
        "properties" : {
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/VehicleSearchResultWithFaultsDto"
            }
          }
        }
      },
      "VehicleSearchRequestWithDateRangeDto" : {
        "type" : "object",
        "properties" : {
          "pageIndex" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "vehicleId" : {
            "type" : "string"
          },
          "groupId" : {
            "type" : "string"
          },
          "dateRangeValid" : {
            "type" : "boolean"
          }
        }
      },
      "VehicleSearchResultWithServiceDateDto" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "groupName" : {
            "type" : "string"
          },
          "groupId" : {
            "type" : "string"
          },
          "make" : {
            "type" : "string"
          },
          "model" : {
            "type" : "string"
          },
          "version" : {
            "type" : "string"
          },
          "serviceDueDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "driverId" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "registration" : {
            "type" : "string"
          }
        }
      },
      "WithPaginationResultVehicleSearchResultWithServiceDateDto" : {
        "type" : "object",
        "properties" : {
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/VehicleSearchResultWithServiceDateDto"
            }
          }
        }
      },
      "VehicleDto" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "registration" : {
            "type" : "string"
          },
          "groupId" : {
            "type" : "string"
          },
          "groupName" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "make" : {
            "type" : "string"
          },
          "model" : {
            "type" : "string"
          },
          "tags" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "defaultDriverId" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string"
          },
          "assetCosts" : {
            "$ref" : "#/components/schemas/VehicleCostsDto"
          },
          "customerId" : {
            "type" : "string"
          },
          "secondaryGroups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/IdNameDto"
            }
          }
        }
      },
      "BasicPersonSettingsDto" : {
        "type" : "object",
        "properties" : {
          "customerId" : {
            "type" : "string"
          },
          "personId" : {
            "type" : "string"
          },
          "groupId" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "locale" : {
            "type" : "string"
          },
          "timezoneId" : {
            "type" : "string"
          },
          "roleId" : {
            "type" : "string"
          },
          "canChangePassword" : {
            "type" : "boolean"
          },
          "accountRegion" : {
            "type" : "string"
          },
          "secondaryHierarchyIds" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      }
    }
  }
}
