{
  "openapi": "3.0.1",
  "info": {
    "title": "public-api",
    "description": "Public API Gateway",
    "version": "2025-10-15T14:05:00.000Z"
  },
  "paths": {
    "/public/v1/customer/{customerId}/tacho/live": {
      "post": {
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "{ 'Content-Type': 'application/json' }"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "{ Authoriation: Token xxxxxxxxxxxxxxxxxx }"
          },
          {
            "in": "body",
            "name": "LiveBodyRequest",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/LiveRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LiveResponse"
                }
              }
            }
          },
          "401": {
            "description": "401 response, not authorized or no valid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "403 response, Forbiden don't have access to the feature",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 response, bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "tacAuthorizer": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy",
          "uri": "arn:aws:apigateway:${aws_region}:lambda:path/2015-03-31/functions/${lambda_arn}/invocations",
          "credentials": "arn:aws:iam::${aws_account}:role/mn_tac_public_api_invoke_lambda_role",
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "contentHandling": "CONVERT_TO_TEXT",
          "requestParameters": {
            "integration.request.path.customerId": "method.request.path.customerId"
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/tacho/activity": {
      "post": {
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "{ 'Content-Type': 'application/json' }"
          },
          {
            "name": "Authorization",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "{ Authoriation: Token xxxxxxxxxxxxxxxxxx }"
          },
          {
            "in": "body",
            "name": "ActivityRequest",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ActivityRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityResponse"
                }
              }
            }
          },
          "401": {
            "description": "401 response, not authorized or no valid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "403 response, Forbiden don't have access to the feature",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 response, bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "tacAuthorizer": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy",
          "uri": "arn:aws:apigateway:${aws_region}:lambda:path/2015-03-31/functions/${lambda_arn}/invocations",
          "credentials": "arn:aws:iam::${aws_account}:role/mn_tac_public_api_invoke_lambda_role",
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "contentHandling": "CONVERT_TO_TEXT",
          "requestParameters": {
            "integration.request.path.customerId": "method.request.path.customerId"
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/tacho/settings": {
      "put": {
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "{ 'Content-Type': 'application/json' }"
          },
          {
            "name": "Authorization",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "{ Authoriation: Token xxxxxxxxxxxxxxxxxx }"
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettingsResponse"
                }
              }
            }
          },
          "401": {
            "description": "401 response, not authorized or no valid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "403 response, Forbiden don't have access to the feature",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 response, bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "tacAuthorizer": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy",
          "uri": "arn:aws:apigateway:${aws_region}:lambda:path/2015-03-31/functions/${lambda_arn}/invocations",
          "credentials": "arn:aws:iam::${aws_account}:role/mn_tac_public_api_invoke_lambda_role",
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "contentHandling": "CONVERT_TO_TEXT",
          "requestParameters": {
            "integration.request.path.customerId": "method.request.path.customerId"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "{ 'Content-Type': 'application/json' }"
          },
          {
            "name": "Authorization",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "{ Authoriation: Token xxxxxxxxxxxxxxxxxx }"
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettingsResponse"
                }
              }
            }
          },
          "401": {
            "description": "401 response, not authorized or no valid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "403 response, Forbiden don't have access to the feature",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 response, bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "tacAuthorizer": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy",
          "uri": "arn:aws:apigateway:${aws_region}:lambda:path/2015-03-31/functions/${lambda_arn}/invocations",
          "credentials": "arn:aws:iam::${aws_account}:role/mn_tac_public_api_invoke_lambda_role",
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "contentHandling": "CONVERT_TO_TEXT",
          "requestParameters": {
            "integration.request.path.customerId": "method.request.path.customerId"
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/tacho/settings/default": {
      "get": {
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "{ 'Content-Type': 'application/json' }"
          },
          {
            "name": "Authorization",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "{ Authoriation: Token xxxxxxxxxxxxxxxxxx }"
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettingsResponse"
                }
              }
            }
          },
          "401": {
            "description": "401 response, not authorized or no valid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "403 response, Forbiden don't have access to the feature",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 response, bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "tacAuthorizer": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy",
          "uri": "arn:aws:apigateway:${aws_region}:lambda:path/2015-03-31/functions/${lambda_arn}/invocations",
          "credentials": "arn:aws:iam::${aws_account}:role/mn_tac_public_api_invoke_lambda_role",
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "contentHandling": "CONVERT_TO_TEXT",
          "requestParameters": {
            "integration.request.path.customerId": "method.request.path.customerId"
          }
        }
      }
    },
    "/bvfm/services/public/v1/customer/{customerId}/tacho/live": {
      "post": {
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "{ 'Content-Type': 'application/json' }"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "{ Authoriation: Token xxxxxxxxxxxxxxxxxx }"
          },
          {
            "in": "body",
            "name": "LiveBodyRequest",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/LiveRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LiveResponse"
                }
              }
            }
          },
          "401": {
            "description": "401 response, not authorized or no valid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "403 response, Forbiden don't have access to the feature",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 response, bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "tacAuthorizer": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy",
          "uri": "arn:aws:apigateway:${aws_region}:lambda:path/2015-03-31/functions/${lambda_arn}/invocations",
          "credentials": "arn:aws:iam::${aws_account}:role/mn_tac_public_api_invoke_lambda_role",
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "contentHandling": "CONVERT_TO_TEXT",
          "requestParameters": {
            "integration.request.path.customerId": "method.request.path.customerId"
          }
        }
      }
    },
    "/bvfm/services/public/v1/customer/{customerId}/tacho/activity": {
      "post": {
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "{ 'Content-Type': 'application/json' }"
          },
          {
            "name": "Authorization",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "{ Authoriation: Token xxxxxxxxxxxxxxxxxx }"
          },
          {
            "in": "body",
            "name": "ActivityRequest",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ActivityRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityResponse"
                }
              }
            }
          },
          "401": {
            "description": "401 response, not authorized or no valid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "403 response, Forbiden don't have access to the feature",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 response, bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "tacAuthorizer": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy",
          "uri": "arn:aws:apigateway:${aws_region}:lambda:path/2015-03-31/functions/${lambda_arn}/invocations",
          "credentials": "arn:aws:iam::${aws_account}:role/mn_tac_public_api_invoke_lambda_role",
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "contentHandling": "CONVERT_TO_TEXT",
          "requestParameters": {
            "integration.request.path.customerId": "method.request.path.customerId"
          }
        }
      }
    },
    "/bvfm/services/public/v1/customer/{customerId}/tacho/settings": {
      "put": {
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "{ 'Content-Type': 'application/json' }"
          },
          {
            "name": "Authorization",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "{ Authoriation: Token xxxxxxxxxxxxxxxxxx }"
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettingsResponse"
                }
              }
            }
          },
          "401": {
            "description": "401 response, not authorized or no valid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "403 response, Forbiden don't have access to the feature",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 response, bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "tacAuthorizer": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy",
          "uri": "arn:aws:apigateway:${aws_region}:lambda:path/2015-03-31/functions/${lambda_arn}/invocations",
          "credentials": "arn:aws:iam::${aws_account}:role/mn_tac_public_api_invoke_lambda_role",
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "contentHandling": "CONVERT_TO_TEXT",
          "requestParameters": {
            "integration.request.path.customerId": "method.request.path.customerId"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "{ 'Content-Type': 'application/json' }"
          },
          {
            "name": "Authorization",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "{ Authoriation: Token xxxxxxxxxxxxxxxxxx }"
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettingsResponse"
                }
              }
            }
          },
          "401": {
            "description": "401 response, not authorized or no valid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "403 response, Forbiden don't have access to the feature",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 response, bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "tacAuthorizer": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy",
          "uri": "arn:aws:apigateway:${aws_region}:lambda:path/2015-03-31/functions/${lambda_arn}/invocations",
          "credentials": "arn:aws:iam::${aws_account}:role/mn_tac_public_api_invoke_lambda_role",
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "contentHandling": "CONVERT_TO_TEXT",
          "requestParameters": {
            "integration.request.path.customerId": "method.request.path.customerId"
          }
        }
      }
    },
    "/bvfm/services/public/v1/customer/{customerId}/tacho/settings/default": {
      "get": {
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "{ 'Content-Type': 'application/json' }"
          },
          {
            "name": "Authorization",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "{ Authoriation: Token xxxxxxxxxxxxxxxxxx }"
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettingsResponse"
                }
              }
            }
          },
          "401": {
            "description": "401 response, not authorized or no valid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "403 response, Forbiden don't have access to the feature",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 response, bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "tacAuthorizer": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy",
          "uri": "arn:aws:apigateway:${aws_region}:lambda:path/2015-03-31/functions/${lambda_arn}/invocations",
          "credentials": "arn:aws:iam::${aws_account}:role/mn_tac_public_api_invoke_lambda_role",
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "contentHandling": "CONVERT_TO_TEXT",
          "requestParameters": {
            "integration.request.path.customerId": "method.request.path.customerId"
          }
        }
      }
    },
    "/public/v1/customer/{customerId}/tacho/mobile/live": {
      "get": {
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "{ 'Content-Type': 'application/json' }"
          },
          {
            "name": "Authorization",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "{ Authorization: Token xxxxxxxxxxxxxxxxxx }"
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleLiveResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "401 response, not authorized or no valid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "403 response, Forbidden don't have access to the feature",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 response, bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "404 response, no person found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "tacAuthorizer": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy",
          "uri": "arn:aws:apigateway:${aws_region}:lambda:path/2015-03-31/functions/${lambda_arn}/invocations",
          "credentials": "arn:aws:iam::${aws_account}:role/mn_tac_public_api_invoke_lambda_role",
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "contentHandling": "CONVERT_TO_TEXT",
          "requestParameters": {
            "integration.request.path.customerId": "method.request.path.customerId"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "LiveRequest": {
        "type": "object",
        "properties": {
          "driverKeys": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "registrations": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "skip": {
            "type": "integer"
          },
          "limit": {
            "type": "integer"
          },
          "sort": {
            "type": "object",
            "properties": {
              "driverId": {
                "type": "string"
              },
              "driverKey": {
                "type": "string"
              },
              "driverName": {
                "type": "string"
              },
              "assetId": {
                "type": "string"
              },
              "assetRegistration": {
                "type": "string"
              },
              "eventDateTime": {
                "type": "string"
              },
              "lastUpdateTime": {
                "type": "string"
              },
              "heading": {
                "type": "string"
              },
              "latitude": {
                "type": "string"
              },
              "longitude": {
                "type": "string"
              },
              "address": {
                "type": "string"
              },
              "tachoMakeVersion": {
                "type": "string"
              },
              "activity": {
                "type": "string"
              },
              "infringementState": {
                "type": "string"
              },
              "currentActivityTotalTime": {
                "type": "string"
              },
              "continuousDrivingTime": {
                "type": "string"
              },
              "dailyDrivingTime": {
                "type": "string"
              },
              "weeklyDrivingTime": {
                "type": "string"
              },
              "previousAndCurrentTotalDriveTime": {
                "type": "string"
              },
              "remainingDrivingTime": {
                "type": "string"
              },
              "remainingDailyDrivingTime": {
                "type": "string"
              },
              "remainingWeeklyDrivingTime": {
                "type": "string"
              },
              "timeLeftUntilNextDailyRest": {
                "type": "string"
              },
              "nextDailyRestMinDuration": {
                "type": "string"
              },
              "timeLeftUntilNextWeeklyRest": {
                "type": "string"
              },
              "nextWeeklyRestMinDuration": {
                "type": "string"
              },
              "lastDailyRestEnd": {
                "type": "string"
              },
              "lastWeeklyRestEnd": {
                "type": "string"
              },
              "remainingDailyExtendedDriveTimePeriods": {
                "type": "string"
              },
              "remainingDailyShortenedRestTimePeriods": {
                "type": "string"
              },
              "workingTimeSinceLastBreak": {
                "type": "string"
              },
              "remainingWorkingTime": {
                "type": "string"
              },
              "dailyWorkingTime": {
                "type": "string"
              },
              "remainingDailyWorkingTime": {
                "type": "string"
              },
              "weeklyWorkingTime": {
                "type": "string"
              },
              "remainingWeeklyWorkingTime": {
                "type": "string"
              },
              "dailyBreakTime": {
                "type": "string"
              },
              "drivingPrediction.activity": {
                "type": "string"
              },
              "drivingPrediction.duration": {
                "type": "string"
              },
              "workingPrediction.activity": {
                "type": "string"
              },
              "workingPrediction.duration": {
                "type": "string"
              },
              "driverCardExpiryDate": {
                "type": "string"
              },
              "driverCardNextMandatoryDownloadDate": {
                "type": "string"
              },
              "timeLeftUntilNextRestPeriod": {
                "type": "string"
              },
              "nextRestDuration": {
                "type": "string"
              }
            }
          }
        }
      },
      "SingleLiveResponseDTO": {
        "type": "object",
        "properties": {
          "driverId": {
            "type": "string"
          },
          "driverKey": {
            "type": "string"
          },
          "driverName": {
            "type": "string"
          },
          "assetId": {
            "type": "string"
          },
          "assetRegistration": {
            "type": "string"
          },
          "eventDateTime": {
            "type": "string"
          },
          "lastUpdateTime": {
            "type": "string"
          },
          "timersQualityLevel": {
            "type": "string"
          },
          "heading": {
            "type": "integer"
          },
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          },
          "address": {
            "type": "string"
          },
          "tachoMakeVersion": {
            "type": "string"
          },
          "activity": {
            "type": "string"
          },
          "infringementState": {
            "type": "integer"
          },
          "currentActivityTotalTime": {
            "type": "integer"
          },
          "continuousDrivingTime": {
            "type": "integer"
          },
          "dailyDrivingTime": {
            "type": "integer"
          },
          "weeklyDrivingTime": {
            "type": "integer"
          },
          "previousAndCurrentTotalDriveTime": {
            "type": "integer"
          },
          "remainingDrivingTime": {
            "type": "integer"
          },
          "remainingDailyDrivingTime": {
            "type": "integer"
          },
          "remainingWeeklyDrivingTime": {
            "type": "integer"
          },
          "timeLeftUntilNextDailyRest": {
            "type": "integer"
          },
          "nextDailyRestMinDuration": {
            "type": "integer"
          },
          "timeLeftUntilNextWeeklyRest": {
            "type": "integer"
          },
          "nextWeeklyRestMinDuration": {
            "type": "integer"
          },
          "lastDailyRestEnd": {
            "type": "string"
          },
          "lastWeeklyRestEnd": {
            "type": "string"
          },
          "remainingDailyExtendedDriveTimePeriods": {
            "type": "integer"
          },
          "remainingDailyShortenedRestTimePeriods": {
            "type": "integer"
          },
          "workingTimeSinceLastBreak": {
            "type": "integer"
          },
          "remainingWorkingTime": {
            "type": "integer"
          },
          "dailyWorkingTime": {
            "type": "integer"
          },
          "remainingDailyWorkingTime": {
            "type": "integer"
          },
          "weeklyWorkingTime": {
            "type": "integer"
          },
          "remainingWeeklyWorkingTime": {
            "type": "integer"
          },
          "dailyBreakTime": {
            "type": "integer"
          },
          "drivingPrediction": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "activity": {
                  "type": "integer"
                },
                "duration": {
                  "type": "integer"
                }
              },
              "required": ["activity", "duration"]
            }
          },
          "workingPrediction": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "activity": {
                  "type": "integer"
                },
                "duration": {
                  "type": "integer"
                }
              },
              "required": ["activity", "duration"]
            }
          },
          "driverCardExpiryDate": {
            "type": "string"
          },
          "driverCardNextMandatoryDownloadDate": {
            "type": "string"
          },
          "timeLeftUntilNextRestPeriod": {
            "type": "integer"
          },
          "nextRestDuration": {
            "type": "integer"
          }
        },
        "required": [
          "driverId",
          "driverKey",
          "driverName",
          "assetId",
          "assetRegistration",
          "eventDateTime",
          "lastUpdateTime",
          "heading",
          "latitude",
          "longitude",
          "address",
          "tachoMakeVersion",
          "activity",
          "infringementState",
          "currentActivityTotalTime",
          "continuousDrivingTime",
          "dailyDrivingTime",
          "weeklyDrivingTime",
          "previousAndCurrentTotalDriveTime",
          "remainingDrivingTime",
          "remainingDailyDrivingTime",
          "remainingWeeklyDrivingTime",
          "timeLeftUntilNextDailyRest",
          "nextDailyRestMinDuration",
          "timeLeftUntilNextWeeklyRest",
          "nextWeeklyRestMinDuration",
          "lastDailyRestEnd",
          "lastWeeklyRestEnd",
          "remainingDailyExtendedDriveTimePeriods",
          "remainingDailyShortenedRestTimePeriods",
          "workingTimeSinceLastBreak",
          "remainingWorkingTime",
          "dailyWorkingTime",
          "remainingDailyWorkingTime",
          "weeklyWorkingTime",
          "remainingWeeklyWorkingTime",
          "dailyBreakTime",
          "drivingPrediction",
          "workingPrediction",
          "driverCardExpiryDate",
          "driverCardNextMandatoryDownloadDate",
          "timeLeftUntilNextRestPeriod",
          "nextRestDuration"
        ]
      },
      "LiveResponse": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "driverId": {
                  "type": "string"
                },
                "driverKey": {
                  "type": "string"
                },
                "driverName": {
                  "type": "string"
                },
                "assetId": {
                  "type": "string"
                },
                "assetRegistration": {
                  "type": "string"
                },
                "eventDateTime": {
                  "type": "string"
                },
                "lastUpdateTime": {
                  "type": "string"
                },
                "timersQualityLevel": {
                  "type": "string"
                },
                "heading": {
                  "type": "integer"
                },
                "latitude": {
                  "type": "number"
                },
                "longitude": {
                  "type": "number"
                },
                "address": {
                  "type": "string"
                },
                "tachoMakeVersion": {
                  "type": "string"
                },
                "activity": {
                  "type": "string"
                },
                "infringementState": {
                  "type": "integer"
                },
                "currentActivityTotalTime": {
                  "type": "integer"
                },
                "continuousDrivingTime": {
                  "type": "integer"
                },
                "dailyDrivingTime": {
                  "type": "integer"
                },
                "weeklyDrivingTime": {
                  "type": "integer"
                },
                "previousAndCurrentTotalDriveTime": {
                  "type": "integer"
                },
                "remainingDrivingTime": {
                  "type": "integer"
                },
                "remainingDailyDrivingTime": {
                  "type": "integer"
                },
                "remainingWeeklyDrivingTime": {
                  "type": "integer"
                },
                "timeLeftUntilNextDailyRest": {
                  "type": "integer"
                },
                "nextDailyRestMinDuration": {
                  "type": "integer"
                },
                "timeLeftUntilNextWeeklyRest": {
                  "type": "integer"
                },
                "nextWeeklyRestMinDuration": {
                  "type": "integer"
                },
                "lastDailyRestEnd": {
                  "type": "string"
                },
                "lastWeeklyRestEnd": {
                  "type": "string"
                },
                "remainingDailyExtendedDriveTimePeriods": {
                  "type": "integer"
                },
                "remainingDailyShortenedRestTimePeriods": {
                  "type": "integer"
                },
                "workingTimeSinceLastBreak": {
                  "type": "integer"
                },
                "remainingWorkingTime": {
                  "type": "integer"
                },
                "dailyWorkingTime": {
                  "type": "integer"
                },
                "remainingDailyWorkingTime": {
                  "type": "integer"
                },
                "weeklyWorkingTime": {
                  "type": "integer"
                },
                "remainingWeeklyWorkingTime": {
                  "type": "integer"
                },
                "dailyBreakTime": {
                  "type": "integer"
                },
                "drivingPrediction": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "activity": {
                        "type": "integer"
                      },
                      "duration": {
                        "type": "integer"
                      }
                    },
                    "required": ["activity", "duration"]
                  }
                },
                "workingPrediction": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "activity": {
                        "type": "integer"
                      },
                      "duration": {
                        "type": "integer"
                      }
                    },
                    "required": ["activity", "duration"]
                  }
                },
                "driverCardExpiryDate": {
                  "type": "string"
                },
                "driverCardNextMandatoryDownloadDate": {
                  "type": "string"
                },
                "timeLeftUntilNextRestPeriod": {
                  "type": "integer"
                },
                "nextRestDuration": {
                  "type": "integer"
                }
              },
              "required": [
                "driverId",
                "driverKey",
                "driverName",
                "assetId",
                "assetRegistration",
                "eventDateTime",
                "lastUpdateTime",
                "heading",
                "latitude",
                "longitude",
                "address",
                "tachoMakeVersion",
                "activity",
                "infringementState",
                "currentActivityTotalTime",
                "continuousDrivingTime",
                "dailyDrivingTime",
                "weeklyDrivingTime",
                "previousAndCurrentTotalDriveTime",
                "remainingDrivingTime",
                "remainingDailyDrivingTime",
                "remainingWeeklyDrivingTime",
                "timeLeftUntilNextDailyRest",
                "nextDailyRestMinDuration",
                "timeLeftUntilNextWeeklyRest",
                "nextWeeklyRestMinDuration",
                "lastDailyRestEnd",
                "lastWeeklyRestEnd",
                "remainingDailyExtendedDriveTimePeriods",
                "remainingDailyShortenedRestTimePeriods",
                "workingTimeSinceLastBreak",
                "remainingWorkingTime",
                "dailyWorkingTime",
                "remainingDailyWorkingTime",
                "weeklyWorkingTime",
                "remainingWeeklyWorkingTime",
                "dailyBreakTime",
                "drivingPrediction",
                "workingPrediction",
                "driverCardExpiryDate",
                "driverCardNextMandatoryDownloadDate",
                "timeLeftUntilNextRestPeriod",
                "nextRestDuration"
              ]
            }
          }
        },
        "required": ["count", "data"]
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "errorCode": {
            "type": "integer"
          },
          "errorMessage": {
            "type": "string"
          }
        },
        "required": ["errorCode", "errorMessage"]
      },
      "ActivityRequest": {
        "type": "object",
        "properties": {
          "driverKeys": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "registrations": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "startTime": {
            "type": "string"
          },
          "endTime": {
            "type": "string"
          },
          "dataContent": {
            "type": "string",
            "enum": ["live", "DDD"]
          },
          "skip": {
            "type": "integer"
          },
          "limit": {
            "type": "integer"
          },
          "sort": {
            "type": "object",
            "properties": {
              "driverId": {
                "type": "string"
              },
              "driverKey": {
                "type": "string"
              },
              "activities.assetId": {
                "type": "string"
              },
              "activities.startTime": {
                "type": "string"
              },
              "activities.type": {
                "type": "string"
              },
              "activities.activity": {
                "type": "string"
              },
              "activities.startLatitude": {
                "type": "string"
              },
              "activities.startLongitude": {
                "type": "string"
              },
              "activities.endTime": {
                "type": "string"
              },
              "activities.endLatitude": {
                "type": "string"
              },
              "activities.endLongitude": {
                "type": "string"
              }
            }
          }
        },
        "required": ["startTime", "endTime"]
      },
      "ActivityResponse": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "driverId": {
                  "type": "string"
                },
                "driverKey": {
                  "type": "string"
                },
                "activities": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "assetId": {
                        "type": "string"
                      },
                      "inProgress": {
                        "type": "boolean"
                      },
                      "assetRegistration": {
                        "type": "string"
                      },
                      "startTime": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      },
                      "activity": {
                        "type": "string"
                      },
                      "startLatitude": {
                        "type": "number"
                      },
                      "startLongitude": {
                        "type": "number"
                      },
                      "duration": {
                        "type": "integer"
                      },
                      "endTime": {
                        "type": "string"
                      },
                      "endLatitude": {
                        "type": "number"
                      },
                      "endLongitude": {
                        "type": "number"
                      },
                      "flagManualEntry": {
                        "type": "boolean"
                      },
                      "flagDDD": {
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "assetId",
                      "assetRegistration",
                      "startTime",
                      "type",
                      "activity",
                      "startLatitude",
                      "startLongitude",
                      "duration",
                      "endTime",
                      "endLatitude",
                      "endLongitude"
                    ]
                  }
                }
              },
              "required": ["driverId", "driverKey", "activities"]
            }
          }
        },
        "required": ["count", "data"]
      },
      "SettingsResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "colors": {
                  "type": "object"
                },
                "disabledInfringements": {
                  "type": "array"
                }
              },
              "required": ["colors", "disabledInfringements"]
            }
          }
        },
        "required": ["data"]
      }
    },
    "securitySchemes": {
      "tacAuthorizer": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header",
        "x-amazon-apigateway-authtype": "Custom authorization scheme using Masternaut for Tacho",
        "x-amazon-apigateway-authorizer": {
          "type": "token",
          "identitySource": "method.request.header.Authorization",
          "authorizerCredentials": "arn:aws:iam::${aws_account}:role/mn_tac_public_api_invoke_lambda_role",
          "authorizerUri": "arn:aws:apigateway:${aws_region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${aws_region}:${aws_account}:function:mn_awssvc_api_authorizer_service_public_lambda_${env}/invocations",
          "authorizerResultTtlInSeconds": 300
        }
      }
    }
  }
}